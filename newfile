<?php
session_start();

/*
ΑΠΑΙΤΟΥΜΕΝΑ ΠΕΔΙΑ ΓΙΑ ΤΗ ΒΑΣΗ ΔΕΔΟΜΕΝΩΝ:

Πίνακας: users
- ΜΗΤΡΩΟ (VARCHAR)
- ΟΝΟΜΑ (VARCHAR)
- ΕΠΩΝΥΜΟ (VARCHAR)
- PIN (VARCHAR)
- ADMINISTRATOR (INT) - 1 για admin, 0 για απλό χρήστη
- ΠΡΟΙΣΤΑΜΕΝΟΣ (INT) - 1 για προϊστάμενο, 0 για απλό χρήστη
- GDYE (INT) - 1 για ΓΔΥΕ γραφείο, 0 για απλό χρήστη

Πίνακας: requests
- id (AUTO_INCREMENT)
- mitroo (VARCHAR)
- typos (VARCHAR)
- imerominia (DATE)
- wres (INT)
- meres (INT)
- logos (TEXT)
- topos_dianysis (VARCHAR)
- proistamenos_egkrisi (VARCHAR)
- status (VARCHAR) - Δυνατές τιμές: ΕΚΚΡΕΜΕΙ, ΕΓΚΡΙΘΗΚΕ, ΕΓΚΡΙΘΗΚΕ ΜΕ ΤΡΟΠΟΠΟΙΗΣΗ, ΑΠΟΡΡΙΦΘΗΚΕ, ΣΥΝΕΝΝΟΗΣΗ
- submitted_at (DATETIME)
- modification_reason (TEXT)
- consultation_message (TEXT)
- rejection_reason (TEXT)

Πίνακας: adeies_ypoloipa
- ΜΗΤΡΩΟ (VARCHAR)
- ΟΝΟΜΑΤΕΠΩΝΥΜΟ (VARCHAR)
- YPOTLIPO_HMERES (INT)
- ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ (INT)
- ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ (INT)
- ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ (INT)
- ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ (INT)
- ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ (INT)
- ΤΕΛΕΥΤΑΙΑ_ΟΛΙΓΟΩΡΗ_ΜΗΝΑΣ (INT)
- ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ (INT)
- ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ (INT)
- ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ (INT)
- ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ (INT)
- PREVIOUS_YEAR_KANONIKI (INT) - Υπόλοιπο κανονικής από προηγούμενο έτος
- PREVIOUS_YEAR_VRAHEIA (INT) - Υπόλοιπο βραχείας από προηγούμενο έτος
- ΕΤΟΣ (INT)
- TELEUTAIA_ENIMEROSI (DATE)

Πίνακας: system_settings
- setting_name (VARCHAR)
- setting_value (VARCHAR)
- updated_by (VARCHAR)
- updated_at (DATETIME)

ΔΙΚΑΙΩΜΑΤΑ ΧΡΗΣΤΩΝ:
- ADMINISTRATOR = 1: Πλήρη δικαιώματα (διαχείριση υπολοίπων, ρυθμίσεις, προσθήκη/αφαίρεση χρηστών, backup/restore)
- ΠΡΟΙΣΤΑΜΕΝΟΣ = 1: Έγκριση/απόρριψη αιτήσεων, ρυθμίσεις συστήματος, διαχείριση υπολοίπων (ΝΕΟ)
- GDYE = 1: Προβολή εγκεκριμένων αδειών για καταχώρηση

ΕΤΗΣΙΑ ΥΠΟΛΟΙΠΑ:
- Κανονική: 30 ημέρες + 4 ημέρες πορείας
- Βραχεία: 7 ημέρες + 4 ημέρες πορείας
- Μεταφορά μόνο κανονικής και βραχείας στο επόμενο έτος
*/

// Ρυθμίσεις βάσης δεδομένων
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "fragarian_db";

// Σύνδεση με τη βάση δεδομένων
try {
    $pdo = new PDO("mysql:host=$servername;dbname=$dbname;charset=utf8mb4", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Σφάλμα σύνδεσης: " . $e->getMessage());
}

// ΕΝΗΜΕΡΩΜΕΝΗ αντιστοίχιση τύπων αδειών με πεδία υπολοίπων
$leave_types_mapping = [
    'ΚΑΝΟΝΙΚΗ' => 'ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ',
    'ΒΡΑΧΕΙΑ' => 'ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ',
    'ΚΑΝΟΝΙΚΗ_ΠΟΡΕΙΑ' => 'ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ',
    'ΒΡΑΧΕΙΑ_ΠΟΡΕΙΑ' => 'ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ',
    'ΟΛΙΓΟΩΡΗ' => 'ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ',
    'ΣΧΟΛΙΚΗ_ΕΠΙΔΟΣΗ' => 'ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ',
    'ΑΝΑΡΡΩΤΙΚΗ' => 'special_handling',
    'ΕΚΠΑΙΔΕΥΤΙΚΗ' => 'special_handling',
    'ΜΑΚΡΑΣ_ΔΙΑΡΚΕΙΑΣ' => 'special_handling',
    'ΣΧΟΛΙΚΗ_ΔΟΚΙΜΩΝ' => 'special_handling',
    'ΕΞΕΤΑΣΕΩΝ' => 'ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ',
    'ΜΗΤΡΟΤΗΤΑΣ' => 'special_handling',
    'ΑΝΑΤΡΟΦΗΣ' => 'special_handling',
    'ΙΑΤΡΙΚΗ_ΑΝΑΠΑΡΑΓΩΓΗ' => 'special_handling',
    'ΓΑΜΟΣ' => 'fixed_days',
    'ΠΕΝΘΟΣ' => 'fixed_days',
    'ΜΕΤΑΓΓΙΣΕΙΣ_ΝΟΣΗΛΕΙΑ' => 'ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ',
    'ΑΣΘΕΝΕΙΑ_ΤΕΚΝΩΝ' => 'ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ',
    'ΕΠΙΠΡΟΣΘΕΤΗ_ΑΝΑΤΡΟΦΗΣ' => 'special_handling'
];

// Συνάρτηση για λήψη ρυθμίσεων συστήματος
function getSystemSetting($pdo, $setting_name, $default = null) {
    try {
        $stmt = $pdo->prepare("SELECT setting_value FROM system_settings WHERE setting_name = ?");
        $stmt->execute([$setting_name]);
        $result = $stmt->fetchColumn();
        return $result !== false ? $result : $default;
    } catch(Exception $e) {
        return $default;
    }
}

// Συνάρτηση για ενημέρωση ρυθμίσεων συστήματος
function updateSystemSetting($pdo, $setting_name, $value, $updated_by) {
    try {
        $stmt = $pdo->prepare("INSERT INTO system_settings (setting_name, setting_value, updated_by, updated_at) VALUES (?, ?, ?, NOW()) ON DUPLICATE KEY UPDATE setting_value = ?, updated_by = ?, updated_at = NOW()");
        return $stmt->execute([$setting_name, $value, $updated_by, $value, $updated_by]);
    } catch(Exception $e) {
        return false;
    }
}

// Συνάρτηση για έλεγχος authentication
function checkAuth() {
    if (!isset($_SESSION['user_mitroo'])) {
        header("Location: " . $_SERVER['PHP_SELF'] . "?page=login");
        exit();
    }
}

// Συνάρτηση για έλεγχο δικαιωμάτων
function isAdmin($pdo, $mitroo) {
    $stmt = $pdo->prepare("SELECT ADMINISTRATOR FROM users WHERE ΜΗΤΡΩΟ = ?");
    $stmt->execute([$mitroo]);
    $result = $stmt->fetchColumn();
    return $result == 1;
}

function isManager($pdo, $mitroo) {
    $stmt = $pdo->prepare("SELECT ΠΡΟΙΣΤΑΜΕΝΟΣ FROM users WHERE ΜΗΤΡΩΟ = ?");
    $stmt->execute([$mitroo]);
    $result = $stmt->fetchColumn();
    return $result == 1;
}

// ΔΙΟΡΘΩΜΕΝΗ συνάρτηση για έλεγχος υπολοίπου άδειας (ΝΕΕΣ ΤΙΜΕΣ)
function checkLeaveBalance($pdo, $mitroo, $leave_type, $days_requested, $travel_days = 0, $hours_requested = 0) {
    global $leave_types_mapping;
    
    $current_year = date('Y');
    $current_month = date('n');
    
    // Έλεγχος αν υπάρχει εγγραφή για τον υπάλληλο
    $stmt = $pdo->prepare("SELECT * FROM adeies_ypoloipa WHERE ΜΗΤΡΩΟ = ? AND (ΕΤΟΣ = ? OR ΕΤΟΣ IS NULL) LIMIT 1");
    $stmt->execute([$mitroo, $current_year]);
    $balance_data = $stmt->fetch();
    
    if (!$balance_data) {
        // Δημιουργία νέας εγγραφής με τα ΔΙΟΡΘΩΜΕΝΑ προεπιλεγμένα υπόλοιπα
        $stmt = $pdo->prepare("SELECT ΟΝΟΜΑ, ΕΠΩΝΥΜΟ FROM users WHERE ΜΗΤΡΩΟ = ?");
        $stmt->execute([$mitroo]);
        $user = $stmt->fetch();
        
        if ($user) {
            $full_name = $user['ΟΝΟΜΑ'] . ' ' . $user['ΕΠΩΝΥΜΟ'];
            $stmt = $pdo->prepare("INSERT INTO adeies_ypoloipa (ΜΗΤΡΩΟ, ΟΝΟΜΑΤΕΠΩΝΥΜΟ, YPOTLIPO_HMERES, ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ, ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ, ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ, ΤΕΛΕΥΤΑΙΑ_ΟΛΙΓΟΩΡΗ_ΜΗΝΑΣ, ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ, ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ, PREVIOUS_YEAR_KANONIKI, PREVIOUS_YEAR_VRAHEIA, ΕΤΟΣ, TELEUTAIA_ENIMEROSI) VALUES (?, ?, 30, 30, 7, 4, 4, 9, ?, 8, 14, 22, 10, 0, 0, ?, CURDATE())");
            $stmt->execute([$mitroo, $full_name, $current_month, $current_year]);
            
            $balance_data = [
                'ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ' => 30,
                'ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ' => 7,
                'ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ' => 4,
                'ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ' => 4,
                'ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ' => 9,
                'ΤΕΛΕΥΤΑΙΑ_ΟΛΙΓΟΩΡΗ_ΜΗΝΑΣ' => $current_month,
                'ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ' => 8,
                'ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ' => 14,
                'ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ' => 22,
                'ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ' => 10,
                'PREVIOUS_YEAR_KANONIKI' => 0,
                'PREVIOUS_YEAR_VRAHEIA' => 0
            ];
        } else {
            return ['status' => false, 'message' => 'Δεν βρέθηκε υπάλληλος με αυτό το μητρώο'];
        }
    }
    
    // ΕΝΗΜΕΡΩΜΕΝΟΣ έλεγχος βάσει τύπου άδειας
    if ($leave_type == 'ΚΑΝΟΝΙΚΗ') {
        $current_balance = $balance_data['ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ'];
        $previous_balance = $balance_data['PREVIOUS_YEAR_KANONIKI'] ?? 0;
        $travel_balance = $balance_data['ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ'];
        
        $total_available = $current_balance + $previous_balance;
        
        if ($total_available >= $days_requested && $travel_balance >= $travel_days) {
            return ['status' => true, 'current_balance' => $current_balance, 'previous_balance' => $previous_balance, 'travel_balance' => $travel_balance];
        } else {
            return ['status' => false, 'message' => "Ανεπαρκές υπόλοιπο. Διαθέσιμες: $current_balance τρέχοντος έτους + $previous_balance προηγούμενου = $total_available συνολικά, Πορεία: $travel_balance ημέρες"];
        }
        
    } elseif ($leave_type == 'ΒΡΑΧΕΙΑ') {
        $current_balance = $balance_data['ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ'];
        $previous_balance = $balance_data['PREVIOUS_YEAR_VRAHEIA'] ?? 0;
        $travel_balance = $balance_data['ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ'];
        
        $total_available = $current_balance + $previous_balance;
        
        if ($days_requested < 1) {
            return ['status' => false, 'message' => 'Η βραχεία άδεια πρέπει να είναι τουλάχιστον 1 ημέρα'];
        }
        
        if ($total_available >= $days_requested && $travel_balance >= $travel_days) {
            return ['status' => true, 'current_balance' => $current_balance, 'previous_balance' => $previous_balance, 'travel_balance' => $travel_balance];
        } else {
            return ['status' => false, 'message' => "Ανεπαρκές υπόλοιπο. Διαθέσιμες: $current_balance τρέχοντος έτους + $previous_balance προηγούμενου = $total_available συνολικά, Πορεία: $travel_balance ημέρες"];
        }
        
    } elseif ($leave_type == 'ΟΛΙΓΟΩΡΗ') {
        $last_month = $balance_data['ΤΕΛΕΥΤΑΙΑ_ΟΛΙΓΟΩΡΗ_ΜΗΝΑΣ'];
        if ($last_month != $current_month) {
            $stmt = $pdo->prepare("UPDATE adeies_ypoloipa SET ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ = 9, ΤΕΛΕΥΤΑΙΑ_ΟΛΙΓΟΩΡΗ_ΜΗΝΑΣ = ? WHERE ΜΗΤΡΩΟ = ? AND ΕΤΟΣ = ?");
            $stmt->execute([$current_month, $mitroo, $current_year]);
            $balance_data['ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ'] = 9;
        }
        
        $hours_balance = $balance_data['ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ'];
        
        if ($hours_balance >= $hours_requested) {
            return ['status' => true, 'current_balance' => $hours_balance . ' ώρες (μήνας ' . date('m/Y') . ')'];
        } else {
            return ['status' => false, 'message' => "Ανεπαρκές υπόλοιπο ολιγόωρης άδειας. Διαθέσιμες: $hours_balance ώρες για τον μήνα " . date('m/Y')];
        }
        
    } elseif ($leave_type == 'ΣΧΟΛΙΚΗ_ΕΠΙΔΟΣΗ') {
        $balance = $balance_data['ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ'];
        
        if ($balance >= $days_requested) {
            return ['status' => true, 'current_balance' => $balance];
        } else {
            return ['status' => false, 'message' => "Ανεπαρκές υπόλοιπο σχολικής επίδοσης. Διαθέσιμες: $balance ημέρες"];
        }
        
    } elseif ($leave_type == 'ΕΞΕΤΑΣΕΩΝ') {
        $balance = isset($balance_data['ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ']) ? $balance_data['ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ'] : 14;
        
        if ($balance >= $days_requested) {
            return ['status' => true, 'current_balance' => $balance];
        } else {
            return ['status' => false, 'message' => "Ανεπαρκές υπόλοιπο εξετάσεων. Διαθέσιμες: $balance ημέρες"];
        }
        
    } elseif ($leave_type == 'ΜΕΤΑΓΓΙΣΕΙΣ_ΝΟΣΗΛΕΙΑ') {
        $balance = isset($balance_data['ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ']) ? $balance_data['ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ'] : 22;
        
        if ($balance >= $days_requested) {
            return ['status' => true, 'current_balance' => $balance];
        } else {
            return ['status' => false, 'message' => "Ανεπαρκές υπόλοιπο νοσηλείας. Διαθέσιμες: $balance ημέρες"];
        }
        
    } elseif ($leave_type == 'ΑΣΘΕΝΕΙΑ_ΤΕΚΝΩΝ') {
        $balance = isset($balance_data['ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ']) ? $balance_data['ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ'] : 10;
        
        if ($balance >= $days_requested) {
            return ['status' => true, 'current_balance' => $balance];
        } else {
            return ['status' => false, 'message' => "Ανεπαρκές υπόλοιπο ασθένειας τέκνων. Διαθέσιμες: $balance ημέρες"];
        }
        
    } elseif (in_array($leave_type, ['ΓΑΜΟΣ', 'ΠΕΝΘΟΣ'])) {
        if ($days_requested == 5) {
            return ['status' => true, 'current_balance' => '5 ημέρες (σταθερή άδεια)'];
        } else {
            return ['status' => false, 'message' => "Η άδεια $leave_type είναι σταθερά 5 ημέρες"];
        }
        
    } elseif (in_array($leave_type, ['ΑΝΑΡΡΩΤΙΚΗ', 'ΕΚΠΑΙΔΕΥΤΙΚΗ', 'ΜΑΚΡΑΣ_ΔΙΑΡΚΕΙΑΣ', 'ΣΧΟΛΙΚΗ_ΔΟΚΙΜΩΝ', 'ΜΗΤΡΟΤΗΤΑΣ', 'ΑΝΑΤΡΟΦΗΣ', 'ΙΑΤΡΙΚΗ_ΑΝΑΠΑΡΑΓΩΓΗ', 'ΕΠΙΠΡΟΣΘΕΤΗ_ΑΝΑΤΡΟΦΗΣ'])) {
        return ['status' => true, 'current_balance' => 'Ειδικός τύπος άδειας - Απαιτείται έγκριση από προϊστάμενο'];
        
    } else {
        return ['status' => false, 'message' => 'Μη έγκυρος τύπος άδειας'];
    }
}

// ΝΕΑ συνάρτηση για Database Backup
function createDatabaseBackup($pdo) {
    try {
        $tables = ['users', 'requests', 'adeies_ypoloipa', 'system_settings'];
        $backup_content = "-- Database Backup Created: " . date('Y-m-d H:i:s') . "\n";
        $backup_content .= "-- Leave Management System v3.1\n\n";
        
        foreach ($tables as $table) {
            $backup_content .= "-- Table: $table\n";
            $backup_content .= "DROP TABLE IF EXISTS `$table`;\n";
            
            // Get table structure
            $result = $pdo->query("SHOW CREATE TABLE `$table`");
            $row = $result->fetch();
            $backup_content .= $row[1] . ";\n\n";
            
            // Get table data
            $result = $pdo->query("SELECT * FROM `$table`");
            $rows = $result->fetchAll();
            
            if (!empty($rows)) {
                $columns = array_keys($rows[0]);
                $backup_content .= "INSERT INTO `$table` (`" . implode('`, `', $columns) . "`) VALUES\n";
                
                $values = [];
                foreach ($rows as $row) {
                    $escaped_values = array_map(function($value) use ($pdo) {
                        return $value === null ? 'NULL' : $pdo->quote($value);
                    }, array_values($row));
                    $values[] = "(" . implode(', ', $escaped_values) . ")";
                }
                
                $backup_content .= implode(",\n", $values) . ";\n\n";
            }
        }
        
        $filename = 'backup_' . date('Y-m-d_H-i-s') . '.sql';
        $filepath = __DIR__ . '/backups/' . $filename;
        
        // Create backups directory if it doesn't exist
        if (!file_exists(__DIR__ . '/backups/')) {
            mkdir(__DIR__ . '/backups/', 0755, true);
        }
        
        if (file_put_contents($filepath, $backup_content)) {
            return ['success' => true, 'filename' => $filename, 'filepath' => $filepath];
        } else {
            return ['success' => false, 'message' => 'Αδυναμία εγγραφής αρχείου backup'];
        }
        
    } catch (Exception $e) {
        return ['success' => false, 'message' => 'Σφάλμα: ' . $e->getMessage()];
    }
}

// ΝΕΑ συνάρτηση για Database Restore
function restoreDatabase($pdo, $backup_file) {
    try {
        if (!file_exists($backup_file)) {
            return ['success' => false, 'message' => 'Το αρχείο backup δεν βρέθηκε'];
        }
        
        $sql_content = file_get_contents($backup_file);
        if ($sql_content === false) {
            return ['success' => false, 'message' => 'Αδυναμία ανάγνωσης αρχείου backup'];
        }
        
        // Split SQL into individual statements
        $statements = array_filter(array_map('trim', explode(';', $sql_content)));
        
        $pdo->beginTransaction();
        
        foreach ($statements as $statement) {
            if (!empty($statement) && !str_starts_with($statement, '--')) {
                $pdo->exec($statement);
            }
        }
        
        $pdo->commit();
        return ['success' => true, 'message' => 'Επιτυχής επαναφορά βάσης δεδομένων'];
        
    } catch (Exception $e) {
        $pdo->rollback();
        return ['success' => false, 'message' => 'Σφάλμα επαναφοράς: ' . $e->getMessage()];
    }
}
// ΝΕΑ συνάρτηση για αποστολή email
function sendManagerEmail($pdo, $request_id) {
    try {
        // Παίρνουμε τα δεδομένα της αίτησης
        $stmt = $pdo->prepare("
            SELECT r.*, u1.ΟΝΟΜΑ as EMPLOYEE_NAME, u1.ΕΠΩΝΥΜΟ as EMPLOYEE_SURNAME, 
                   u2.EMAIL as MANAGER_EMAIL, u2.ΟΝΟΜΑ as MANAGER_NAME, u2.ΕΠΩΝΥΜΟ as MANAGER_SURNAME
            FROM requests r 
            JOIN users u1 ON r.mitroo = u1.ΜΗΤΡΩΟ 
            JOIN users u2 ON r.selected_manager_mitroo = u2.ΜΗΤΡΩΟ 
            WHERE r.id = ?
        ");
        $stmt->execute([$request_id]);
        $data = $stmt->fetch();
        
        if (!$data || !$data['MANAGER_EMAIL']) {
            return false;
        }
        
        // Στοιχεία email
        $to = $data['MANAGER_EMAIL'];
        $subject = "Αίτηση Άδειας - " . $data['EMPLOYEE_NAME'] . " " . $data['EMPLOYEE_SURNAME'] . " (ID: " . $request_id . ")";
        
        // Υπολογισμός κειμένου ωρών/ημερών
        $hours_text = $data['typos'] == 'ΟΛΙΓΟΩΡΗ' ? $data['wres'] . " ώρες" : $data['meres'] . " ημέρες";
        
        // Δημιουργία μηνύματος
        $message = "Αγαπητέ/ή " . $data['MANAGER_NAME'] . " " . $data['MANAGER_SURNAME'] . ",\n\n";
        $message .= "Ο/Η " . $data['mitroo'] . " " . $data['EMPLOYEE_NAME'] . " " . $data['EMPLOYEE_SURNAME'];
        $message .= " αιτείται " . $hours_text . " " . strtolower($data['typos']) . " άδειας.\n\n";
        $message .= "ΣΤΟΙΧΕΙΑ ΑΙΤΗΣΗΣ:\n";
        $message .= "================\n";
        $message .= "Αρ. Αίτησης: " . $request_id . "\n";
        $message .= "Ημερομηνία έναρξης: " . date('d/m/Y', strtotime($data['imerominia'])) . "\n";
        $message .= "Αιτιολογία: " . $data['logos'] . "\n";
        $message .= "Τόπος διάνυσης: " . $data['topos_dianysis'] . "\n";
        $message .= "Προϊστάμενος έγκριση: " . $data['proistamenos_egkrisi'] . "\n\n";
        
        $message .= "🔗 Για να επεξεργαστείτε την αίτηση, πηγαίνετε στο:\n";
        $message .= "http://localhost/Intranet_wp/wp-content/themes/twentynineteen-fragarian/manager-popup.php\n\n";
        
        $message .= "ΟΔΗΓΙΕΣ ΑΠΑΝΤΗΣΗΣ:\n";
        $message .= "==================\n";
        $message .= "• Για ΕΓΚΡΙΣΗ χρησιμοποιήστε το παραπάνω link\n";
        $message .= "• Ή απαντήστε με email: ΕΓΚΡΙΝΕΤΑΙ\n";
        $message .= "• Για ΑΠΟΡΡΙΨΗ: ΑΠΟΡΡΙΠΤΕΤΑΙ [λόγος]\n\n";
        
        $message .= "---\n";
        $message .= "Σύστημα Διαχείρισης Αδειών\n";
        $message .= "Αστυνομία Ελλάδος v3.1\n";
        $message .= "Ημερομηνία: " . date('d/m/Y H:i');
        
        // Headers
        $headers = array(
            'From' => 'tdnagiounikolaou@astynomia.gr',
            'Reply-To' => 'tdnagiounikolaou@astynomia.gr',
            'MIME-Version' => '1.0',
            'Content-Type' => 'text/plain; charset=UTF-8'
        );
        
        $headers_string = '';
        foreach ($headers as $key => $value) {
            $headers_string .= $key . ': ' . $value . "\r\n";
        }
        
        $encoded_subject = '=?UTF-8?B?' . base64_encode($subject) . '?=';
        
        if (mail($to, $encoded_subject, $message, $headers_string)) {
            $update_stmt = $pdo->prepare("UPDATE requests SET email_sent = 1 WHERE id = ?");
            $update_stmt->execute([$request_id]);
            return true;
        }
        
        return false;
        
    } catch (Exception $e) {
        error_log("Email sending error: " . $e->getMessage());
        return false;
    }
}

/**
 * BONUS: Συνάρτηση για τεστ αποστολής email
 * Χρησιμοποιήστε για έλεγχο των SMTP ρυθμίσεων
 */
function testEmailSending($test_email = 'tdnagiounikolaou@astynomia.gr') {
    $subject = 'Test Email - Σύστημα Αδειών';
    $message = "Αυτό είναι ένα test email.\n\nΑν το λάβατε, οι ρυθμίσεις email λειτουργούν σωστά!\n\nΧρόνος: " . date('d/m/Y H:i:s');
    
    $headers = array(
        'From' => 'tdnagiounikolaou@astynomia.gr',
        'MIME-Version' => '1.0',
        'Content-Type' => 'text/plain; charset=UTF-8'
    );
    
    $headers_string = '';
    foreach ($headers as $key => $value) {
        $headers_string .= $key . ': ' . $value . "\r\n";
    }
    
    $encoded_subject = '=?UTF-8?B?' . base64_encode($subject) . '?=';
    
    return mail($test_email, $encoded_subject, $message, $headers_string);
}
// Αν δεν υπάρχει βαθμός στο adeies_ypoloipa, λάβε τον από τον πίνακα users
if (empty($balance_data['βαθμος'])) {
    $stmtBathmos = $pdo->prepare("SELECT ΒΑΘΜΟΣ FROM users WHERE ΜΗΤΡΩΟ = ?");
	if (!isset($mitroo)) {
    $mitroo = $_SESSION['user_mitroo'] ?? '';
}
    $stmtBathmos->execute([$mitroo]);
    $userBathmos = $stmtBathmos->fetchColumn();
    
 if ($userBathmos) {
        // Ενημέρωσε τον πίνακα adeies_ypoloipa με τον βαθμό
        $updateBathmos = $pdo->prepare("UPDATE adeies_ypoloipa SET βαθμος = ? WHERE ΜΗΤΡΩΟ = ?");
        $updateBathmos->execute([$userBathmos, $mitroo]);
        
        // Ενημέρωσε και το τοπικό αντίγραφο των δεδομένων (με έλεγχο)
        if (isset($balance_data) && is_array($balance_data)) {
            $balance_data['βαθμος'] = $userBathmos;
        }
    }
}
// Login process
if (isset($_POST['login'])) {
    $mitroo = $_POST['mitroo'];
    $pin = $_POST['pin'];
    
    $stmt = $pdo->prepare("SELECT ΜΗΤΡΩΟ, ΟΝΟΜΑ, ΕΠΩΝΥΜΟ, ADMINISTRATOR, ΠΡΟΙΣΤΑΜΕΝΟΣ, GDYE FROM users WHERE ΜΗΤΡΩΟ = ? AND PIN = ?");
    $stmt->execute([$mitroo, $pin]);
    $user = $stmt->fetch();
    
    if ($user) {
        $_SESSION['user_mitroo'] = $user['ΜΗΤΡΩΟ'];
        $_SESSION['user_name'] = $user['ΟΝΟΜΑ'] . ' ' . $user['ΕΠΩΝΥΜΟ'];
        $_SESSION['is_admin'] = $user['ADMINISTRATOR'];
        $_SESSION['is_manager'] = $user['ΠΡΟΙΣΤΑΜΕΝΟΣ'];
        $_SESSION['is_gdye'] = $user['GDYE'] ?? 0;
        
        setcookie('last_mitroo', $mitroo, time() + (30 * 24 * 60 * 60), '/');
        
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    } else {
        $login_error = "Λανθασμένα στοιχεία σύνδεσης";
    }
}

// Logout
if (isset($_GET['logout'])) {
    session_destroy();
    header("Location: " . $_SERVER['PHP_SELF'] . "?page=login");
    exit();
}

// Check if user wants to see login page
$current_page = $_GET['page'] ?? 'main';

if ($current_page == 'login' || !isset($_SESSION['user_mitroo'])) {
    // Εμφάνιση σελίδας login
    ?>
    <!DOCTYPE html>
    <html lang="el">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Σύνδεση - Σύστημα Αδειών v3.1</title>
        <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh; display: flex; align-items: center; justify-content: center;
            }
            .login-container {
                background: white; padding: 40px; border-radius: 15px; box-shadow: 0 15px 35px rgba(0,0,0,0.1);
                width: 100%; max-width: 400px;
            }
            .login-header { text-align: center; margin-bottom: 30px; }
            .login-header h1 { color: #333; margin-bottom: 10px; }
            .form-group { margin-bottom: 20px; }
            .form-group label { display: block; margin-bottom: 8px; font-weight: 600; color: #555; }
            .form-group input {
                width: 100%; padding: 15px; border: 2px solid #ddd; border-radius: 8px; font-size: 16px; transition: border-color 0.3s;
            }
            .form-group input:focus { outline: none; border-color: #667eea; }
            .btn {
                width: 100%; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white;
                padding: 15px; border: none; border-radius: 8px; font-size: 16px; font-weight: 600; cursor: pointer; transition: transform 0.2s;
            }
            .btn:hover { transform: translateY(-2px); }
            .alert-error {
                background-color: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px; margin-bottom: 20px; border: 1px solid #f5c6cb;
            }
            .home-link {
                display: inline-block; margin-bottom: 20px; color: #667eea; text-decoration: none; font-weight: 600;
                transition: color 0.3s;
            }
            .home-link:hover { color: #5a6fd8; }
        </style>
    </head>
    <body>
        <div class="login-container">
            <a href="../" class="home-link">🏠 Επιστροφή στην Αρχική</a>
            
            <div class="login-header">
                <h1>Σύστημα Αδειών & αιτήσεων</h1>
                <p>Εισάγετε τα στοιχεία σας για σύνδεση</p>
            </div>
            
            <?php if (isset($login_error)): ?>
                <div class="alert-error"><?php echo $login_error; ?></div>
            <?php endif; ?>
            
            <form method="POST">
                <div class="form-group">
                    <label for="mitroo">Μητρώο:</label>
                    <input type="text" id="mitroo" name="mitroo" value="<?php echo isset($_COOKIE['last_mitroo']) ? htmlspecialchars($_COOKIE['last_mitroo']) : ''; ?>" required>
                </div>
                <div class="form-group">
                    <label for="pin">PIN:</label>
                    <input type="password" id="pin" name="pin" required>
                </div>
                <button type="submit" name="login" class="btn">Σύνδεση</button>
            </form>
        </div>
        
        <script>
        document.addEventListener('DOMContentLoaded', function() {
            var mitrooField = document.getElementById('mitroo');
            var pinField = document.getElementById('pin');
            
            if (mitrooField.value.trim() !== '') {
                pinField.focus();
            } else {
                mitrooField.focus();
            }
        });
        </script>
    </body>
    </html>
    <?php
    exit();
}

// Main application - εδώ συνεχίζει μόνο αν ο χρήστης είναι συνδεδεμένος
checkAuth();

// AJAX endpoints
if (isset($_POST['ajax_action'])) {
    header('Content-Type: application/json');
    
    if ($_POST['ajax_action'] == 'update_balance' && ($_SESSION['is_admin'] || $_SESSION['is_manager'])) { // ΑΛΛΑΓΗ: και προϊστάμενοι
        $mitroo = $_POST['mitroo'];
        $field = $_POST['field'];
        $value = (float)$_POST['value'];
        
        $allowed_fields = ['ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ', 'ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ', 'ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ', 'ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ', 'ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ', 'ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ', 'ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ', 'ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ', 'ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ', 'PREVIOUS_YEAR_KANONIKI', 'PREVIOUS_YEAR_VRAHEIA'];
        
        if (in_array($field, $allowed_fields)) {
            try {
                // Έλεγχος αν υπάρχει εγγραφή για τον χρήστη
                $stmt = $pdo->prepare("SELECT COUNT(*) FROM adeies_ypoloipa WHERE ΜΗΤΡΩΟ = ? AND ΕΤΟΣ = ?");
                $stmt->execute([$mitroo, date('Y')]);
                $exists = $stmt->fetchColumn() > 0;
                
                if (!$exists) {
                    // Λήψη πλήρους ονόματος
                    $stmt = $pdo->prepare("SELECT ΟΝΟΜΑ, ΕΠΩΝΥΜΟ FROM users WHERE ΜΗΤΡΩΟ = ?");
                    $stmt->execute([$mitroo]);
                    $user = $stmt->fetch();
                    $full_name = $user ? $user['ΟΝΟΜΑ'] . ' ' . $user['ΕΠΩΝΥΜΟ'] : $mitroo;
                    
                    // ΔΙΟΡΘΩΜΕΝΕΣ προεπιλεγμένες τιμές
                    $current_month = date('n');
                    $stmt = $pdo->prepare("INSERT INTO adeies_ypoloipa (ΜΗΤΡΩΟ, ΟΝΟΜΑΤΕΠΩΝΥΜΟ, YPOTLIPO_HMERES, ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ, ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ, ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ, ΤΕΛΕΥΤΑΙΑ_ΟΛΙΓΟΩΡΗ_ΜΗΝΑΣ, ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ, ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ, PREVIOUS_YEAR_KANONIKI, PREVIOUS_YEAR_VRAHEIA, ΕΤΟΣ, TELEUTAIA_ENIMEROSI) VALUES (?, ?, 30, 30, 7, 4, 4, 9, ?, 8, 14, 22, 10, 0, 0, ?, CURDATE())");
                    $stmt->execute([$mitroo, $full_name, $current_month, date('Y')]);
                }
                
                // Ενημέρωση του συγκεκριμένου πεδίου
                $stmt = $pdo->prepare("UPDATE adeies_ypoloipa SET $field = ?, TELEUTAIA_ENIMEROSI = CURDATE() WHERE ΜΗΤΡΩΟ = ? AND ΕΤΟΣ = ?");
                if ($stmt->execute([$value, $mitroo, date('Y')])) {
                    echo json_encode(['success' => true]);
                } else {
                    echo json_encode(['success' => false, 'message' => 'Σφάλμα ενημέρωσης']);
                }
            } catch(Exception $e) {
                echo json_encode(['success' => false, 'message' => 'Σφάλμα βάσης δεδομένων: ' . $e->getMessage()]);
            }
        } else {
            echo json_encode(['success' => false, 'message' => 'Μη έγκυρο πεδίο']);
        }
        exit();
    }
    
    if ($_POST['ajax_action'] == 'update_setting' && ($_SESSION['is_manager'] || $_SESSION['is_admin'])) {
        $setting_name = $_POST['setting_name'];
        $value = $_POST['value'];
        
        $allowed_settings = ['kanoniki_adeia_expiry', 'vraheia_adeia_expiry', 'current_year'];
        
        if (in_array($setting_name, $allowed_settings)) {
            if (updateSystemSetting($pdo, $setting_name, $value, $_SESSION['user_mitroo'])) {
                echo json_encode(['success' => true]);
            } else {
                echo json_encode(['success' => false, 'message' => 'Σφάλμα ενημέρωσης']);
            }
        } else {
            echo json_encode(['success' => false, 'message' => 'Μη έγκυρη ρύθμιση']);
        }
        exit();
    }
    
    // ΝΕΟ: Database Backup AJAX
    if ($_POST['ajax_action'] == 'create_backup' && $_SESSION['is_admin']) {
        $result = createDatabaseBackup($pdo);
        echo json_encode($result);
        exit();
    }
    
    // ΝΕΟ: Database Restore AJAX
    if ($_POST['ajax_action'] == 'restore_backup' && $_SESSION['is_admin'] && isset($_FILES['backup_file'])) {
        $upload_dir = __DIR__ . '/backups/';
        $uploaded_file = $upload_dir . basename($_FILES['backup_file']['name']);
        
        if (move_uploaded_file($_FILES['backup_file']['tmp_name'], $uploaded_file)) {
            $result = restoreDatabase($pdo, $uploaded_file);
            unlink($uploaded_file); // Delete uploaded file after restore
        } else {
            $result = ['success' => false, 'message' => 'Σφάλμα μεταφοράς αρχείου'];
        }
        
        echo json_encode($result);
        exit();
    }
    
    if ($_POST['ajax_action'] == 'get_user_history' && ($_SESSION['is_manager'] || $_SESSION['is_admin'])) {
        $mitroo = $_POST['mitroo'];
        
        // Λήψη στοιχείων χρήστη
        $stmt = $pdo->prepare("SELECT ΟΝΟΜΑ, ΕΠΩΝΥΜΟ FROM users WHERE ΜΗΤΡΩΟ = ?");
        $stmt->execute([$mitroo]);
        $user = $stmt->fetch();
        
        // Λήψη ιστορικού αδειών
        $stmt = $pdo->prepare("SELECT * FROM requests WHERE mitroo = ? ORDER BY submitted_at DESC LIMIT 50");
        $stmt->execute([$mitroo]);
        $history = $stmt->fetchAll();
        
        // Λήψη υπολοίπων ανά έτος
        $stmt = $pdo->prepare("SELECT * FROM adeies_ypoloipa WHERE ΜΗΤΡΩΟ = ? ORDER BY ΕΤΟΣ DESC");
        $stmt->execute([$mitroo]);
        $balances = $stmt->fetchAll();
        
        echo json_encode([
            'success' => true,
            'user' => $user,
            'history' => $history,
            'balances' => $balances
        ]);
        exit();
		// ΝΕΟ: Smart Delete with Balance Restoration (ΜΟΝΟ ADMIN)
    if ($_POST['ajax_action'] == 'delete_test_requests' && $_SESSION['is_admin']) {
        try {
            $pdo->beginTransaction();
            
            // Πρώτα αποθήκευε όλες τις αιτήσεις για να ξέρουμε τι να επαναφέρουμε
            $stmt = $pdo->prepare("SELECT mitroo, typos, meres, wres FROM requests WHERE status IN ('ΕΓΚΡΙΘΗΚΕ', 'ΕΓΚΡΙΘΗΚΕ ΜΕ ΤΡΟΠΟΠΟΙΗΣΗ')");
            $stmt->execute();
            $approved_requests = $stmt->fetchAll();
            
            // Επαναφορά υπολοίπων για κάθε εγκεκριμένη αίτηση
            foreach ($approved_requests as $request) {
                $mitroo = $request['mitroo'];
                $typos = $request['typos'];
                $meres = $request['meres'];
                $wres = $request['wres'];
                
                // Επαναφορά βάσει τύπου άδειας
                if ($typos == 'ΚΑΝΟΝΙΚΗ') {
                    $pdo->prepare("UPDATE adeies_ypoloipa SET ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ = ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ + ? WHERE ΜΗΤΡΩΟ = ?")->execute([$meres, $mitroo]);
                } elseif ($typos == 'ΒΡΑΧΕΙΑ') {
                    $pdo->prepare("UPDATE adeies_ypoloipa SET ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ = ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ + ? WHERE ΜΗΤΡΩΟ = ?")->execute([$meres, $mitroo]);
                } elseif ($typos == 'ΟΛΙΓΟΩΡΗ') {
                    $pdo->prepare("UPDATE adeies_ypoloipa SET ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ = ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ + ? WHERE ΜΗΤΡΩΟ = ?")->execute([$wres, $mitroo]);
                } elseif ($typos == 'ΜΕΤΑΓΓΙΣΕΙΣ_ΝΟΣΗΛΕΙΑ') {
                    $pdo->prepare("UPDATE adeies_ypoloipa SET ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ = ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ + ? WHERE ΜΗΤΡΩΟ = ?")->execute([$meres, $mitroo]);
                } elseif ($typos == 'ΑΣΘΕΝΕΙΑ_ΤΕΚΝΩΝ') {
                    $pdo->prepare("UPDATE adeies_ypoloipa SET ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ = ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ + ? WHERE ΜΗΤΡΩΟ = ?")->execute([$meres, $mitroo]);
                } elseif ($typos == 'ΕΞΕΤΑΣΕΩΝ') {
                    $pdo->prepare("UPDATE adeies_ypoloipa SET ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ = ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ + ? WHERE ΜΗΤΡΩΟ = ?")->execute([$meres, $mitroo]);
                } elseif ($typos == 'ΣΧΟΛΙΚΗ_ΕΠΙΔΟΣΗ') {
                    $pdo->prepare("UPDATE adeies_ypoloipa SET ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ = ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ + ? WHERE ΜΗΤΡΩΟ = ?")->execute([$meres, $mitroo]);
                }
            }
            
            // Τώρα διάγραψε όλες τις αιτήσεις
            $stmt = $pdo->prepare("DELETE FROM requests");
            $stmt->execute();
            $deleted_count = $stmt->rowCount();
            
            $pdo->commit();
            echo json_encode(['success' => true, 'message' => "Διαγράφηκαν $deleted_count αιτήσεις και επαναφέρθηκαν τα υπόλοιπα"]);
        } catch(Exception $e) {
            $pdo->rollback();
            echo json_encode(['success' => false, 'message' => 'Σφάλμα: ' . $e->getMessage()]);
        }
        exit();
    }
    
    if ($_POST['ajax_action'] == 'reset_test_balances' && $_SESSION['is_admin']) {
        try {
            $pdo->beginTransaction();
            
            // Διαγραφή όλων των υπολοίπων
            $stmt = $pdo->prepare("DELETE FROM adeies_ypoloipa ORDER BY sort_order ASC, ΜΗΤΡΩΟ ASC");
            $stmt->execute();
            $deleted_count = $stmt->rowCount();
            
            // Επαναδημιουργία με αρχικές τιμές για όλους τους χρήστες
            $users = $pdo->query("SELECT ΜΗΤΡΩΟ, ΟΝΟΜΑ, ΕΠΩΝΥΜΟ FROM users")->fetchAll();
            foreach ($users as $user) {
                $current_month = date('n');
                $current_year = date('Y');
                $full_name = $user['ΟΝΟΜΑ'] . ' ' . $user['ΕΠΩΝΥΜΟ'];
                
                $stmt = $pdo->prepare("INSERT INTO adeies_ypoloipa (ΜΗΤΡΩΟ, ΟΝΟΜΑΤΕΠΩΝΥΜΟ, YPOTLIPO_HMERES, ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ, ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ, ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ, ΤΕΛΕΥΤΑΙΑ_ΟΛΙΓΟΩΡΗ_ΜΗΝΑΣ, ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ, ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ, PREVIOUS_YEAR_KANONIKI, PREVIOUS_YEAR_VRAHEIA, ΕΤΟΣ, TELEUTAIA_ENIMEROSI) VALUES (?, ?, 30, 30, 7, 4, 4, 9, ?, 8, 14, 22, 10, 0, 0, ?, CURDATE())");
                $stmt->execute([$user['ΜΗΤΡΩΟ'], $full_name, $current_month, $current_year]);
            }
            
            $pdo->commit();
            echo json_encode(['success' => true, 'message' => "Επαναφέρθηκαν επιτυχώς όλα τα υπόλοιπα στις αρχικές τιμές"]);
        } catch(Exception $e) {
            $pdo->rollback();
            echo json_encode(['success' => false, 'message' => 'Σφάλμα: ' . $e->getMessage()]);
        }
        exit();
    }
    
    if ($_POST['ajax_action'] == 'reset_test_balances' && $_SESSION['is_admin']) {
        try {
            $pdo->beginTransaction();
            $stmt = $pdo->prepare("DELETE FROM adeies_ypoloipa ORDER BY sort_order ASC, ΜΗΤΡΩΟ ASC");
            $stmt->execute();
            $deleted_count = $stmt->rowCount();
            $pdo->commit();
            echo json_encode(['success' => true, 'message' => "Επαναφέρθηκαν επιτυχώς $deleted_count εγγραφές υπολοίπων"]);
        } catch(Exception $e) {
            $pdo->rollback();
            echo json_encode(['success' => false, 'message' => 'Σφάλμα: ' . $e->getMessage()]);
        }
        exit();
		}
    }
    
    // ΔΙΟΡΘΩΜΕΝΗ αλλαγή έτους με σωστή λογική μεταφοράς
    if ($_POST['ajax_action'] == 'change_year' && ($_SESSION['is_manager'] || $_SESSION['is_admin'])) {
        $new_year = (int)$_POST['new_year'];
        $current_year = (int)date('Y');
        
        if ($new_year < $current_year || $new_year > $current_year + 1) {
            echo json_encode(['success' => false, 'message' => 'Μη έγκυρο έτος']);
            exit();
        }
        
        try {
            $pdo->beginTransaction();
            
            // Λήψη όλων των χρηστών
            $users = $pdo->query("SELECT ΜΗΤΡΩΟ, ΟΝΟΜΑ, ΕΠΩΝΥΜΟ FROM users")->fetchAll();
            
            foreach ($users as $user) {
                $mitroo = $user['ΜΗΤΡΩΟ'];
                $full_name = $user['ΟΝΟΜΑ'] . ' ' . $user['ΕΠΩΝΥΜΟ'];
                
                // Λήψη υπολοίπων από το τρέχον έτος
                $stmt = $pdo->prepare("SELECT ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ, ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ FROM adeies_ypoloipa WHERE ΜΗΤΡΩΟ = ? AND ΕΤΟΣ = ?");
                $stmt->execute([$mitroo, $current_year]);
                $current_balance = $stmt->fetch();
                
                // Έλεγχος αν υπάρχει ήδη εγγραφή για το νέο έτος
                $stmt = $pdo->prepare("SELECT COUNT(*) FROM adeies_ypoloipa WHERE ΜΗΤΡΩΟ = ? AND ΕΤΟΣ = ?");
                $stmt->execute([$mitroo, $new_year]);
                
                if ($stmt->fetchColumn() == 0) {
                    // Τα υπόλοιπα που μεταφέρονται από το προηγούμενο έτος (ΜΟΝΟ κανονική και βραχεία)
                    $previous_kanoniki = $current_balance ? $current_balance['ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ'] : 0;
                    $previous_vraheia = $current_balance ? $current_balance['ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ'] : 0;
                    
                    // Δημιουργία νέας εγγραφής για το νέο έτος με ΔΙΟΡΘΩΜΕΝΕΣ τιμές
                    $stmt = $pdo->prepare("INSERT INTO adeies_ypoloipa (ΜΗΤΡΩΟ, ΟΝΟΜΑΤΕΠΩΝΥΜΟ, YPOTLIPO_HMERES, ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ, ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ, ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ, ΤΕΛΕΥΤΑΙΑ_ΟΛΙΓΟΩΡΗ_ΜΗΝΑΣ, ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ, ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ, PREVIOUS_YEAR_KANONIKI, PREVIOUS_YEAR_VRAHEIA, ΕΤΟΣ, TELEUTAIA_ENIMEROSI) VALUES (?, ?, ?, 30, 7, 4, 4, 9, 1, 8, 14, 22, 10, ?, ?, ?, CURDATE())");
                    
                    // Συνολικό υπόλοιπο = νέο έτος + προηγούμενο έτος
                    $new_total_kanoniki = 30 + $previous_kanoniki;
                    $new_total_vraheia = 7 + $previous_vraheia;
                    
                    $stmt->execute([
                        $mitroo, $full_name, $new_total_kanoniki, $previous_kanoniki, $previous_vraheia, $new_year
                    ]);
                }
            }
            
            // Ενημέρωση τρέχοντος έτους στις ρυθμίσεις
            updateSystemSetting($pdo, 'current_year', $new_year, $_SESSION['user_mitroo']);
            
            $pdo->commit();
            echo json_encode(['success' => true, 'message' => "Επιτυχής αλλαγή στο έτος $new_year. Μεταφέρθηκαν τα υπόλοιπα κανονικής και βραχείας άδειας."]);
            
        } catch(Exception $e) {
            $pdo->rollback();
            echo json_encode(['success' => false, 'message' => 'Σφάλμα: ' . $e->getMessage()]);
        }
        exit();
    }
}

// ΕΝΗΜΕΡΩΜΕΝΗ επεξεργασία φόρμων
if ($_POST && !isset($_POST['ajax_action'])) {
    $action = $_POST['action'] ?? '';
    
    if ($action == 'submit_request') {
        $mitroo = $_SESSION['user_mitroo'];
        $typos = $_POST['typos'];
        $imerominia = $_POST['imerominia'];
        $meres = (int)$_POST['meres'];
        $imeres_poreias = (int)($_POST['imeres_poreias'] ?? 0);
        $wres = (int)($_POST['wres'] ?? 0);
		// Ώρα έναρξης/λήξης (για ΟΛΙΓΟΩΡΗ/ωράριο)
			$ora_enarxis = isset($_POST['ora_enarxis']) && $_POST['ora_enarxis'] !== '' ? $_POST['ora_enarxis'] : null;
			$ora_lixis   = isset($_POST['ora_lixis'])   && $_POST['ora_lixis']   !== '' ? $_POST['ora_lixis']   : null;
        $logos = $_POST['logos'];
        $topos_dianysis = $_POST['topos_dianysis'] ?? '';
        $proistamenos_egkrisi = $_POST['proistamenos_egkrisi'] ?? '';
        
        if (empty(trim($topos_dianysis))) {
            $error = "Η αναγραφή του τόπου διάνυσης της άδειας είναι υποχρεωτική.";
        }
        
        if (empty($proistamenos_egkrisi)) {
            $error = "Η έγκριση από τον προϊστάμενο γραφείου είναι υποχρεωτική.";
        }
        
        if (!isset($error)) {
            if ($typos == 'ΟΛΙΓΟΩΡΗ') {
                if ($wres <= 0 || $wres > 9) {
                    $error = "Η ολιγόωρη άδεια πρέπει να είναι από 1 έως 9 ώρες.";
                } else {
                    $balance_check = checkLeaveBalance($pdo, $mitroo, $typos, 0, 0, $wres);
                }
            } else {
                $today = new DateTime();
                $request_date = new DateTime($imerominia);
                
                if ($typos == 'ΚΑΝΟΝΙΚΗ') {
                    $expiry_date = new DateTime(getSystemSetting($pdo, 'kanoniki_adeia_expiry', '2026-03-31'));
                } elseif ($typos == 'ΒΡΑΧΕΙΑ') {
                    $expiry_date = new DateTime(getSystemSetting($pdo, 'vraheia_adeia_expiry', '2025-12-31'));
                } else {
                    $expiry_date = new DateTime('2025-12-31');
                }
                
                if (in_array($typos, ['ΚΑΝΟΝΙΚΗ', 'ΒΡΑΧΕΙΑ']) && $request_date > $expiry_date) {
                    $error = "Η άδεια τύπου '$typos' έχει λήξει. Μέγιστη ημερομηνία: " . $expiry_date->format('d/m/Y');
                } else {
                    $balance_check = checkLeaveBalance($pdo, $mitroo, $typos, $meres, $imeres_poreias, $wres);
                }
            }
        }
        
        if (!isset($error) && isset($balance_check) && $balance_check['status']) {
            $selected_manager = $_POST['selected_manager'] ?? '';
			$stmt = $pdo->prepare("
					INSERT INTO requests
					(mitroo, typos, imerominia, wres, meres, logos, topos_dianysis, proistamenos_egkrisi, selected_manager_mitroo, ora_enarxis, ora_lixis, status, submitted_at)
					VALUES
					(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'ΕΚΚΡΕΜΕΙ', NOW())
			");
           
            if ($imeres_poreias > 0) {
                $logos .= " | Ημέρες πορείας: " . $imeres_poreias;
            }
            if ($typos == 'ΟΛΙΓΟΩΡΗ') {
                $meres = 0;
            }
            
            if ($stmt->execute([$mitroo,$typos,$imerominia,$wres,$meres,$logos,$topos_dianysis,$proistamenos_egkrisi,$selected_manager,$ora_enarxis,$ora_lixis])) {
    $request_id = $pdo->lastInsertId();
    
    // Προσθήκη JavaScript για ήχο μετά την υποβολή
    $play_sound_after_submit = true;
    
    if (sendManagerEmail($pdo, $request_id)) {
        $success = "Η αίτηση υποβλήθηκε επιτυχώς και στάλθηκε email στον προϊστάμενο!";
    } else {
        $success = "Η αίτηση υποβλήθηκε επιτυχώς!";
    }
} else {
    $error = "Σφάλμα κατά την υποβολή της αίτησης.";
}
        } elseif (isset($balance_check) && !$balance_check['status']) {
            $error = $balance_check['message'];
        }
    }
    
    // 4 ΕΠΙΛΟΓΕΣ ΓΙΑ ΕΚΚΡΕΜΕΙΣ ΑΙΤΗΣΕΙΣ
    if ($action == 'approve_request' && ($_SESSION['is_manager'] || $_SESSION['is_admin'])) {
        $request_id = $_POST['request_id'];
        
        $stmt = $pdo->prepare("SELECT mitroo, typos, meres, wres, logos FROM requests WHERE id = ?");
        $stmt->execute([$request_id]);
        $request = $stmt->fetch();
        
        if ($request) {
            $stmt = $pdo->prepare("UPDATE requests SET status = 'ΕΓΚΡΙΘΗΚΕ' WHERE id = ?");
            $stmt->execute([$request_id]);
            
            $success = "Η αίτηση εγκρίθηκε επιτυχώς!";
        }
    }
    
    if ($action == 'approve_with_modification' && ($_SESSION['is_manager'] || $_SESSION['is_admin'])) {
        $request_id = $_POST['request_id'];
        $new_typos = $_POST['new_typos'];
        $new_imerominia = $_POST['new_imerominia'];
        $new_meres = (int)$_POST['new_meres'];
        $new_wres = (int)$_POST['new_wres'];
        $new_logos = $_POST['new_logos'];
        $new_topos = $_POST['new_topos'];
        $new_proistamenos_egkrisi = $_POST['new_proistamenos_egkrisi'];
        $new_imeres_poreias = (int)($_POST['new_imeres_poreias'] ?? 0);
        $modification_reason = $_POST['modification_reason'];
        
        // Προσθήκη ημερών πορείας στην αιτιολογία αν υπάρχουν
        if ($new_imeres_poreias > 0) {
            $new_logos .= " | Ημέρες πορείας: " . $new_imeres_poreias;
        }
        
        $stmt = $pdo->prepare("UPDATE requests SET typos = ?,imerominia = ?,meres = ?,wres = ?,logos = ?,topos_dianysis = ?,proistamenos_egkrisi = ?,ora_enarxis = ?,ora_lixis = ?,status = 'ΕΓΚΡΙΘΗΚΕ ΜΕ ΤΡΟΠΟΠΟΙΗΣΗ',modification_reason = ?WHERE id = ?");       
        if ($stmt->execute([$new_typos, $new_imerominia, $new_meres, $new_wres, $new_logos, $new_topos, $new_proistamenos_egkrisi, $modification_reason, $request_id])) {
            $success = "Η αίτηση εγκρίθηκε με τροποποίηση επιτυχώς!";
        } else {
            $error = "Σφάλμα κατά την ενημέρωση της αίτησης.";
        }
    }
    
    if ($action == 'request_consultation' && ($_SESSION['is_manager'] || $_SESSION['is_admin'])) {
        $request_id = $_POST['request_id'];
        $consultation_message = $_POST['consultation_message'];
        
        $stmt = $pdo->prepare("UPDATE requests SET status = 'ΣΥΝΕΝΝΟΗΣΗ', consultation_message = ? WHERE id = ?");
        if ($stmt->execute([
    $new_typos,
    $new_imerominia,
    $new_meres,
    $new_wres,
    $new_logos,
    $new_topos_dianysis,
    $new_proistamenos_egkrisi,
    $_POST['new_ora_enarxis'] ?? null,
    $_POST['new_ora_lixis'] ?? null,
    $modification_reason,
    $request_id
])) {
	$success = "Αίτημα για συνεννόηση εστάλη επιτυχώς!";
        } else {
            $error = "Σφάλμα κατά την αποστολή του αιτήματος συνεννόησης.";
        }
    }
    
    if ($action == 'reject_request' && ($_SESSION['is_manager'] || $_SESSION['is_admin'])) {
        $request_id = $_POST['request_id'];
        $rejection_reason = $_POST['rejection_reason'] ?? '';
        
        $stmt = $pdo->prepare("UPDATE requests SET status = 'ΑΠΟΡΡΙΦΘΗΚΕ', rejection_reason = ? WHERE id = ?");
        $stmt->execute([$rejection_reason, $request_id]);
        
        $success = "Η αίτηση απορρίφθηκε.";
    }
    
    // Προσθήκη νέου χρήστη (μόνο Admin)
    if ($action == 'add_user' && $_SESSION['is_admin']) {
        $new_mitroo = $_POST['new_mitroo'];
        $new_onoma = $_POST['new_onoma'];
        $new_eponimo = $_POST['new_eponimo'];
        $new_pin = $_POST['new_pin'];
        $is_admin = isset($_POST['is_admin']) ? 1 : 0;
        $is_manager = isset($_POST['is_manager']) ? 1 : 0;
        $is_gdye = isset($_POST['is_gdye']) ? 1 : 0;
        
        // Έλεγχος αν υπάρχει ήδη το μητρώο
        $stmt = $pdo->prepare("SELECT COUNT(*) FROM users WHERE ΜΗΤΡΩΟ = ?");
        $stmt->execute([$new_mitroo]);
        if ($stmt->fetchColumn() > 0) {
            $error = "Υπάρχει ήδη αστυνομικός με αυτό το μητρώο!";
        } else {
            try {
                $stmt = $pdo->prepare("INSERT INTO users (ΜΗΤΡΩΟ, ΟΝΟΜΑ, ΕΠΩΝΥΜΟ, PIN, ADMINISTRATOR, ΠΡΟΙΣΤΑΜΕΝΟΣ, GDYE) VALUES (?, ?, ?, ?, ?, ?, ?)");
                if ($stmt->execute([$new_mitroo, $new_onoma, $new_eponimo, $new_pin, $is_admin, $is_manager, $is_gdye])) {
                    $roles = [];
                    if ($is_admin) $roles[] = 'Διαχειριστής';
                    if ($is_manager) $roles[] = 'Προϊστάμενος';
                    if ($is_gdye) $roles[] = 'ΓΔΥΕ';
                    $roles_text = empty($roles) ? 'Απλός χρήστης' : implode(', ', $roles);
                    
                    $success = "Ο αστυνομικός $new_onoma $new_eponimo προστέθηκε επιτυχώς! Δικαιώματα: $roles_text";
                } else {
                    $error = "Σφάλμα κατά την προσθήκη του αστυνομικού.";
                }
            } catch(Exception $e) {
                $error = "Σφάλμα: " . $e->getMessage();
            }
        }
    }
    
    // Αφαίρεση χρήστη (μόνο Admin)
    if ($action == 'remove_user' && $_SESSION['is_admin']) {
        $remove_mitroo = $_POST['remove_mitroo'];
        
        if ($remove_mitroo == $_SESSION['user_mitroo']) {
            $error = "Δεν μπορείτε να διαγράψετε τον εαυτό σας!";
        } else {
            try {
                // Διαγραφή από όλους τους πίνακες
                $pdo->beginTransaction();
                
                $pdo->prepare("DELETE FROM adeies_ypoloipa WHERE ΜΗΤΡΩΟ = ?")->execute([$remove_mitroo]);
                $pdo->prepare("DELETE FROM requests WHERE mitroo = ?")->execute([$remove_mitroo]);
                $stmt = $pdo->prepare("DELETE FROM users WHERE ΜΗΤΡΩΟ = ?");
                $stmt->execute([$remove_mitroo]);
                
                $pdo->commit();
                $success = "Ο αστυνομικός διαγράφηκε επιτυχώς μαζί με όλα του τα δεδομένα!";
            } catch(Exception $e) {
                $pdo->rollback();
                $error = "Σφάλμα κατά τη διαγραφή: " . $e->getMessage();
            }
        }
    }
}

// Λήψη δεδομένων για εμφάνιση
$my_requests = [];
if (isset($_SESSION['user_mitroo'])) {
    $stmt = $pdo->prepare("SELECT * FROM requests WHERE mitroo = ? ORDER BY submitted_at DESC");
    $stmt->execute([$_SESSION['user_mitroo']]);
    $my_requests = $stmt->fetchAll();
}

// Εκκρεμείς αιτήσεις
$pending_requests = [];
if (isset($_SESSION['is_manager'], $_SESSION['is_admin']) && ($_SESSION['is_manager'] || $_SESSION['is_admin'])) {
    $stmt = $pdo->prepare("SELECT DISTINCT r.id, r.mitroo, r.typos, r.imerominia, r.wres, r.ora_enarxis, r.ora_lixis, r.meres, r.logos, r.topos_dianysis, r.proistamenos_egkrisi, r.selected_manager_mitroo, r.status, r.submitted_at, r.modification_reason, r.consultation_message, r.rejection_reason, u.ΟΝΟΜΑ, u.ΕΠΩΝΥΜΟ FROM requests r JOIN users u ON r.mitroo = u.ΜΗΤΡΩΟ WHERE r.status IN ('ΕΚΚΡΕΜΕΙ', 'ΣΥΝΕΝΝΟΗΣΗ') ORDER BY r.submitted_at DESC");
    $stmt->execute();
    $pending_requests = $stmt->fetchAll();
}

// ΔΙΟΡΘΩΜΕΝΑ υπόλοιπα χρήστη
$user_balance_data = [];
if (isset($_SESSION['user_mitroo'])) {
    $stmt = $pdo->prepare("SELECT * FROM adeies_ypoloipa WHERE ΜΗΤΡΩΟ = ? ORDER BY ΕΤΟΣ DESC LIMIT 1");
    $stmt->execute([$_SESSION['user_mitroo']]);
    $user_balance_data = $stmt->fetch();

    if (!$user_balance_data) {
        $current_month = date('n');
        $stmt = $pdo->prepare("INSERT INTO adeies_ypoloipa (ΜΗΤΡΩΟ, ΟΝΟΜΑΤΕΠΩΝΥΜΟ, YPOTLIPO_HMERES, ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ, ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ, ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ, ΤΕΛΕΥΤΑΙΑ_ΟΛΙΓΟΩΡΗ_ΜΗΝΑΣ, ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ, ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ, ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ, PREVIOUS_YEAR_KANONIKI, PREVIOUS_YEAR_VRAHEIA, ΕΤΟΣ, TELEUTAIA_ENIMEROSI) VALUES (?, ?, 30, 30, 7, 4, 4, 9, ?, 8, 14, 22, 10, 0, 0, ?, CURDATE())");
        $stmt->execute([$_SESSION['user_mitroo'], $_SESSION['user_name'], $current_month, date('Y')]);
        
        $user_balance_data = [
            'ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ' => 30, 
            'ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ' => 7, 
            'ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ' => 4,
            'ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ' => 4,
            'ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ' => 9,
            'ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ' => 8,
            'ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ' => 14,
            'ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ' => 22,
            'ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ' => 10,
            'PREVIOUS_YEAR_KANONIKI' => 0,
            'PREVIOUS_YEAR_VRAHEIA' => 0
        ];
    }
}

// ΔΙΟΡΘΩΜΕΝΑ όλα τα υπόλοιπα για admin και προϊστάμενο (ΑΛΛΑΓΗ: και προϊστάμενοι βλέπουν όλα)
$all_balances = [];
$selected_year = isset($_GET['year']) ? (int)$_GET['year'] : (int)date('Y');
if ((isset($_SESSION['is_admin']) && $_SESSION['is_admin']) || (isset($_SESSION['is_manager']) && $_SESSION['is_manager'])) {
    $all_balances = $pdo->prepare("
    SELECT u.ΜΗΤΡΩΟ, u.ΟΝΟΜΑ, u.ΕΠΩΝΥΜΟ, u.ADMINISTRATOR, u.ΠΡΟΙΣΤΑΜΕΝΟΣ, u.GDYE, u.ΒΑΘΜΟΣ,
           a.ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ, a.ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ, a.ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ, 
           a.ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ, a.ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ, a.ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ,
           a.ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ, a.ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ, a.ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ,
           a.PREVIOUS_YEAR_KANONIKI, a.PREVIOUS_YEAR_VRAHEIA,
           a.ΕΤΟΣ, a.TELEUTAIA_ENIMEROSI,
           COALESCE(SUM(CASE WHEN r.typos = 'ΚΑΝΟΝΙΚΗ' AND r.status IN ('ΕΓΚΡΙΘΗΚΕ', 'ΕΓΚΡΙΘΗΚΕ ΜΕ ΤΡΟΠΟΠΟΙΗΣΗ') THEN r.meres ELSE 0 END), 0) AS χρησιμοποιημενες_κανονικης,
           COALESCE(SUM(CASE WHEN r.typos = 'ΒΡΑΧΕΙΑ' AND r.status IN ('ΕΓΚΡΙΘΗΚΕ', 'ΕΓΚΡΙΘΗΚΕ ΜΕ ΤΡΟΠΟΠΟΙΗΣΗ') THEN r.meres ELSE 0 END), 0) AS χρησιμοποιημενες_βραχειας
    FROM users u 
    LEFT JOIN (
        SELECT DISTINCT ΜΗΤΡΩΟ, 
               MAX(ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ) as ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ,
               MAX(ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ) as ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ,
               MAX(ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ) as ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ,
               MAX(ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ) as ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ,
               MAX(ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ) as ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ,
               MAX(ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ) as ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ,
               MAX(ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ) as ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ,
               MAX(ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ) as ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ,
               MAX(ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ) as ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ,
               MAX(PREVIOUS_YEAR_KANONIKI) as PREVIOUS_YEAR_KANONIKI,
               MAX(PREVIOUS_YEAR_VRAHEIA) as PREVIOUS_YEAR_VRAHEIA,
               MAX(ΕΤΟΣ) as ΕΤΟΣ,
               MAX(TELEUTAIA_ENIMEROSI) as TELEUTAIA_ENIMEROSI
        FROM adeies_ypoloipa 
        WHERE ΕΤΟΣ = ?
        GROUP BY ΜΗΤΡΩΟ
    ) a ON u.ΜΗΤΡΩΟ = a.ΜΗΤΡΩΟ
    LEFT JOIN requests r ON u.ΜΗΤΡΩΟ = r.mitroo
    GROUP BY 
        u.ΜΗΤΡΩΟ, u.ΟΝΟΜΑ, u.ΕΠΩΝΥΜΟ, u.ADMINISTRATOR, u.ΠΡΟΙΣΤΑΜΕΝΟΣ, u.GDYE, u.ΒΑΘΜΟΣ, 
        a.ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ, a.ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ, a.ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ, 
        a.ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ, a.ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ, a.ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ,
        a.ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ, a.ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ, a.ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ,
        a.PREVIOUS_YEAR_KANONIKI, a.PREVIOUS_YEAR_VRAHEIA, a.ΕΤΟΣ, a.TELEUTAIA_ENIMEROSI
    ORDER BY 
    CASE 
        WHEN u.ΒΑΘΜΟΣ LIKE '%Αστυνομικός Διευθυντής%' THEN 1
        WHEN u.ΒΑΘΜΟΣ LIKE '%Αστυνομικός Υποδιευθυντής%' THEN 2
        WHEN u.ΒΑΘΜΟΣ LIKE '%Αστυνόμος Α%' THEN 3
        WHEN u.ΒΑΘΜΟΣ LIKE '%Αστυνόμος Β%' THEN 4
        WHEN u.ΒΑΘΜΟΣ LIKE '%Υπαστυνόμος Α%' THEN 5
        WHEN u.ΒΑΘΜΟΣ LIKE '%Υπαστυνόμος Β%' THEN 6
        WHEN u.ΒΑΘΜΟΣ LIKE '%Ανθυπαστυνόμος%' THEN 7
        WHEN u.ΒΑΘΜΟΣ LIKE '%Αρχιφύλακας%' THEN 8
        WHEN u.ΒΑΘΜΟΣ LIKE '%Υπαρχιφύλακας%' THEN 9
        WHEN u.ΒΑΘΜΟΣ LIKE '%Αστυφύλακας%' THEN 10
        WHEN u.ΒΑΘΜΟΣ LIKE '%Ειδικός Φρουρός%' THEN 11
        WHEN u.ΒΑΘΜΟΣ LIKE '%Π.Υ.%' THEN 12
        WHEN u.ΜΗΤΡΩΟ = '999999' THEN 99
        ELSE 50
    END,
    CAST(u.ΜΗΤΡΩΟ AS UNSIGNED)
");
    $all_balances->execute([$selected_year]);
    $all_balances = $all_balances->fetchAll();
}

// Εγκεκριμένες άδειες για ΓΔΥΕ
$approved_requests = [];
if (isset($_SESSION['is_gdye']) && $_SESSION['is_gdye']) {
    $approved_requests = $pdo->query("
         SELECT r.*, u.ΟΝΟΜΑ, u.ΕΠΩΝΥΜΟ, u.ΒΑΘΜΟΣ, u.ΠΑΤΡΩΝΥΜΟ
         FROM requests r
         JOIN users u ON r.mitroo = u.ΜΗΤΡΩΟ
         WHERE r.status IN ('ΕΓΚΡΙΘΗΚΕ', 'ΕΓΚΡΙΘΗΚΕ ΜΕ ΤΡΟΠΟΠΟΙΗΣΗ')
         ORDER BY r.imerominia ASC
    ")->fetchAll();
}

// Ρυθμίσεις συστήματος
$kanoniki_expiry = getSystemSetting($pdo, 'kanoniki_adeia_expiry', '2026-03-31');
$vraheia_expiry = getSystemSetting($pdo, 'vraheia_adeia_expiry', '2025-12-31');
$current_system_year = (int)getSystemSetting($pdo, 'current_year', date('Y'));
?>

<!DOCTYPE html>
<html lang="el">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Σύστημα Διαχείρισης Αδειών - ΕΠΙΧΕΙΡΗΣΙΑΚΗ  ΕΚΔΟΣΗ</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5; color: #333;
        }
        .container { max-width: 1400px; margin: 0 auto; padding: 20px; }
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white;
            padding: 30px; border-radius: 10px; margin-bottom: 30px;
            display: flex; justify-content: space-between; align-items: center;
        }
        .user-info { display: flex; align-items: center; gap: 20px; }
        .balance-card {
            background: rgba(255,255,255,0.2); padding: 8px; border-radius: 8px; text-align: center; min-width: 60px;
            margin: 2px;
        }
        .balance-number { font-size: 16px; font-weight: bold; }
        .balance-label { font-size: 9px; margin-top: 2px; }
        .logout-btn {
            background: rgba(255,255,255,0.2); color: white; padding: 10px 20px;
            border: none; border-radius: 5px; text-decoration: none; cursor: pointer;
        }
        .home-btn {
            background: rgba(255,255,255,0.2); color: white; padding: 12px;
            border: none; border-radius: 50%; text-decoration: none; cursor: pointer;
            display: flex; align-items: center; justify-content: center;
            transition: background-color 0.3s;
        }
        .home-btn:hover { background: rgba(255,255,255,0.3); }
        .home-btn svg { width: 20px; height: 20px; }
        .tabs {
            display: flex; margin-bottom: 20px; background: white; border-radius: 10px;
            overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .tab-button {
            flex: 1; padding: 15px 20px; background: white; border: none; cursor: pointer;
            font-size: 14px; transition: background-color 0.3s;
        }
        .tab-button.active { background: #667eea; color: white; }
        .tab-button:hover { background: #f0f0f0; }
        .tab-button.active:hover { background: #5a6fd8; }
        .tab-content { display: none; background: white; border-radius: 10px; padding: 30px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .tab-content.active { display: block; }
        .form-group { margin-bottom: 20px; }
        .form-group label { display: block; margin-bottom: 8px; font-weight: 600; color: #555; }
        .form-group input, .form-group select, .form-group textarea {
            width: 100%; padding: 12px; border: 2px solid #ddd; border-radius: 8px;
            font-size: 16px; transition: border-color 0.3s;
        }
        .form-group input:focus, .form-group select:focus, .form-group textarea:focus {
            outline: none; border-color: #667eea;
        }
        .form-row { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; }
        .form-row-three { display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 20px; }
        .btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white;
            padding: 12px 30px; border: none; border-radius: 8px; font-size: 16px;
            font-weight: 600; cursor: pointer; transition: transform 0.2s, box-shadow 0.2s;
        }
        .btn:hover { transform: translateY(-2px); box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4); }
        .btn-success { background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%); }
        .btn-danger { background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%); }
        .btn-warning { background: linear-gradient(135deg, #f7971e 0%, #ffd200 100%); color: #333; }
        .btn-info { background: linear-gradient(135deg, #00c6ff 0%, #0072ff 100%); }
        .btn-sm { padding: 6px 12px; font-size: 12px; }
        .alert { padding: 15px; border-radius: 8px; margin-bottom: 20px; font-weight: 500; }
        .alert-success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .alert-error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .requests-table {
            width: 100%; border-collapse: collapse; margin-top: 20px; background: white;
            border-radius: 10px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .requests-table th, .requests-table td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; }
        .requests-table th { background: #f8f9fa; font-weight: 600; color: #555; }
        .requests-table tr:hover { background-color: #f8f9fa; }
        .status-badge {
            padding: 6px 12px; border-radius: 20px; font-size: 12px; font-weight: 600; text-transform: uppercase;
        }
        .status-pending { background: #fff3cd; color: #856404; }
        .status-approved { background: #d4edda; color: #155724; }
        .status-rejected { background: #f8d7da; color: #721c24; }
        .status-consultation { background: #cce5ff; color: #004085; }
        .status-modified { background: #e2e3e5; color: #383d41; }
        .action-buttons { display: flex; gap: 5px; flex-wrap: wrap; }
        .enhanced-balance {
            background: #e9ecef; border-radius: 12px; padding: 20px; margin-bottom: 25px;
            border-left: 5px solid #667eea;
        }
        .enhanced-balance h4 {
            color: #333; margin-bottom: 15px; font-size: 1.1rem;
        }
        .balance-grid {
            display: grid; grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)); gap: 10px;
        }
        .balance-item {
            background: white; padding: 12px; border-radius: 8px; text-align: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .balance-value { font-size: 1.4rem; font-weight: bold; color: #667eea; }
        .balance-type { font-size: 0.8rem; color: #666; margin-top: 4px; }
        .balance-previous { font-size: 0.7rem; color: #28a745; margin-top: 2px; font-weight: bold; }
        
        /* Modal Styles */
        .modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4); }
        .modal-content { background-color: #fefefe; margin: 5% auto; padding: 20px; border: none; width: 80%; max-width: 600px; border-radius: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
        .close { color: #aaa; float: right; font-size: 28px; font-weight: bold; cursor: pointer; }
        .close:hover, .close:focus { color: black; text-decoration: none; }
        
        /* Admin Table Styles */
        .editable {
            cursor: pointer; padding: 8px; border-radius: 4px; transition: background-color 0.2s;
            border: 1px solid transparent;
        }
        .editable:hover { background-color: #f0f0f0; border-color: #ddd; }
        .editing { background-color: #fff3cd; border-color: #ffc107; }
        .settings-section { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px; }
        .settings-row { display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 20px; margin-bottom: 15px; align-items: center; }
        
        /* ΝΕΟ: Backup Section Styling */
        .backup-section { background: #e7f3ff; border-left: 5px solid #007bff; padding: 20px; border-radius: 8px; margin-bottom: 20px; }
        .backup-buttons { display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-top: 15px; }
        .backup-info { color: #004085; font-size: 0.9rem; line-height: 1.6; }
        .backup-status { margin-top: 10px; padding: 10px; border-radius: 5px; font-weight: bold; }
        .backup-status.success { background: #d4edda; color: #155724; }
        .backup-status.error { background: #f8d7da; color: #721c24; }
        
        /* Export buttons styling */
        .export-buttons { display: flex; gap: 10px; margin-bottom: 20px; }
        .btn-export { display: flex; align-items: center; gap: 8px; }
        
        /* Print styles */
        @media print {
            .header, .tabs, .export-buttons, .btn, .editable { display: none !important; }
            .container { max-width: none; margin: 0; padding: 0; }
            .tab-content { display: block !important; padding: 0; box-shadow: none; }
            .requests-table { width: 100%; font-size: 10px; }
            .requests-table th, .requests-table td { padding: 4px; border: 1px solid #000; }
            body { font-size: 10px; }
            h2 { font-size: 14px; margin-bottom: 10px; }
        }
        
        @media (max-width: 768px) {
            .form-row, .form-row-three, .settings-row, .backup-buttons { grid-template-columns: 1fr; }
            .container { padding: 10px; }
            .header { flex-direction: column; gap: 20px; text-align: center; }
            .user-info { flex-wrap: wrap; justify-content: center; }
            .requests-table { font-size: 12px; }
            .requests-table th, .requests-table td { padding: 8px; }
            .balance-grid { grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); }
            .action-buttons { justify-content: center; }
            .export-buttons { flex-direction: column; }
            .btn-export { justify-content: center; }
        }
    </style>
</head>
<body>

    <div class="container">
    <div class="container">
        <div class="header">
            <div>
                <h1>🏛️ Σύστημα Διαχείρισης Αδειών - ΕΠΙΧΕΙΡΗΣΙΑΚΗ  ΕΚΔΟΣΗ</h1>
                <p>Καλώς ήρθατε, <?php echo htmlspecialchars($_SESSION['user_name'] ?? 'Guest'); ?></p>
                <?php if (isset($_SESSION['is_admin']) && $_SESSION['is_admin']): ?>
                    <span style="font-size: 12px; background: rgba(255,255,255,0.3); padding: 3px 8px; border-radius: 3px; margin-left: 10px;">ΔΙΑΧΕΙΡΙΣΤΗΣ</span>
                <?php elseif (isset($_SESSION['is_manager']) && $_SESSION['is_manager']): ?>
                    <span style="font-size: 12px; background: rgba(255,255,255,0.3); padding: 3px 8px; border-radius: 3px; margin-left: 10px;">ΠΡΟΙΣΤΑΜΕΝΟΣ</span>
                <?php endif; ?>
                <?php if (isset($_SESSION['is_gdye']) && $_SESSION['is_gdye']): ?>
                    <span style="font-size: 12px; background: rgba(255,255,255,0.3); padding: 3px 8px; border-radius: 3px; margin-left: 5px;">ΓΔΥΕ</span>
                <?php endif; ?>
            </div>
            
            <div class="user-info">
                <a href="http://localhost/intranet_wp/" class="home-btn" title="Επιστροφή στην Αρχική">
                    <svg width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L8.354 1.146zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5z"/>
                    </svg>
                </a>
                
                <?php if ($user_balance_data): ?>
                <div class="balance-card">
                    <div class="balance-number"><?php echo ($user_balance_data['ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ'] ?? 30) + ($user_balance_data['PREVIOUS_YEAR_KANONIKI'] ?? 0); ?></div>
                    <div class="balance-label">Κανονική</div>
                </div>
                <div class="balance-card">
                    <div class="balance-number"><?php echo ($user_balance_data['ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ'] ?? 7) + ($user_balance_data['PREVIOUS_YEAR_VRAHEIA'] ?? 0); ?></div>
                    <div class="balance-label">Βραχεία</div>
                </div>
                <div class="balance-card">
                    <div class="balance-number"><?php echo $user_balance_data['ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ'] ?? 9; ?>ώρ</div>
                    <div class="balance-label">Ολιγόωρη</div>
                </div>
                <div class="balance-card">
                    <div class="balance-number"><?php echo $user_balance_data['ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ'] ?? 4; ?></div>
                    <div class="balance-label">Πορεία Κ.</div>
                </div>
                <div class="balance-card">
                    <div class="balance-number"><?php echo $user_balance_data['ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ'] ?? 4; ?></div>
                    <div class="balance-label">Πορεία Β.</div>
                </div>
                <div class="balance-card">
                    <div class="balance-number"><?php echo $user_balance_data['ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ'] ?? 8; ?></div>
                    <div class="balance-label">Σχολ. Π.</div>
                </div>
                <?php endif; ?>
                
                <a href="http://localhost/intranet_wp/" onclick="fetch('?logout=1'); return true;" class="logout-btn">Αποσύνδεση</a>
            </div>
        </div>

        <?php if (isset($success)): ?>
            <div class="alert alert-success"><?php echo $success; ?></div>
        <?php endif; ?>

        <?php if (isset($error)): ?>
            <div class="alert alert-error"><?php echo $error; ?></div>
        <?php endif; ?>

        <div class="tabs">
  <button type="button" class="tab-button active" onclick="openTab(event, 'submit-tab')">Υποβολή Αίτησης</button>
  <button type="button" class="tab-button" onclick="openTab(event, 'my-requests-tab')">Οι Αιτήσεις Μου</button>

  <?php if (!empty($_SESSION['is_manager']) || !empty($_SESSION['is_admin'])): ?>
    <button type="button" class="tab-button" onclick="openTab(event, 'pending-tab')">Εκκρεμείς Αιτήσεις</button>
    <button type="button" class="tab-button" onclick="openTab(event, 'settings-tab')">Ρυθμίσεις</button>
  <?php endif; ?>

  <?php if (!empty($_SESSION['is_gdye'])): ?>
    <button type="button" class="tab-button" onclick="openTab(event, 'approved-tab')">Εγκεκριμένες Άδειες</button>
  <?php endif; ?>

  <?php if (!empty($_SESSION['is_admin']) || !empty($_SESSION['is_manager'])): ?>
    <button type="button" class="tab-button" onclick="openTab(event, 'admin-tab')">Διαχείριση Υπολοίπων</button>
  <?php endif; ?>

  <?php if (!empty($_SESSION['is_admin']) || !empty($_SESSION['is_gdye'])): ?>
    <button type="button" class="tab-button" onclick="openTab(event, 'excel-upload-tab')">📊 Ενημέρωση Αδειών</button>
  <?php endif; ?>

  <button type="button" class="tab-button" onclick="window.open('leave-schedule.php', '_blank')" style="background: #28a745;">📅 Προγραμματισμός Αδειών</button>
</div>

        <!-- ΔΙΟΡΘΩΜΕΝΗ Καρτέλα Υποβολής Αίτησης -->
        <div id="submit-tab" class="tab-content active">
            <h2>Υποβολή Νέας Αίτησης Άδειας (17 Τύποι)</h2>
            
            <!-- ΔΙΟΡΘΩΜΕΝΟ ENHANCED BALANCE DISPLAY -->
            <?php if ($user_balance_data): ?>
            <div class="enhanced-balance">
                <h4>🏦 Διαθέσιμα Υπόλοιπα Αδειών - ΕΝΗΜΕΡΩΜΕΝΑ ΥΠΟΛΟΙΠΑ</h4>
                <div class="balance-grid">
                    <div class="balance-item">
                        <div class="balance-value"><?php echo ($user_balance_data['ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ'] ?? 30) + ($user_balance_data['PREVIOUS_YEAR_KANONIKI'] ?? 0); ?></div>
                        <div class="balance-type">Κανονική</div>
                        <?php if (($user_balance_data['PREVIOUS_YEAR_KANONIKI'] ?? 0) > 0): ?>
                            <div class="balance-previous">+ <?php echo $user_balance_data['PREVIOUS_YEAR_KANONIKI']; ?> από 2024</div>
                        <?php endif; ?>
                    </div>
                    <div class="balance-item">
                        <div class="balance-value"><?php echo ($user_balance_data['ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ'] ?? 7) + ($user_balance_data['PREVIOUS_YEAR_VRAHEIA'] ?? 0); ?></div>
                        <div class="balance-type">Βραχεία</div>
                        <?php if (($user_balance_data['PREVIOUS_YEAR_VRAHEIA'] ?? 0) > 0): ?>
                            <div class="balance-previous">+ <?php echo $user_balance_data['PREVIOUS_YEAR_VRAHEIA']; ?> από 2024</div>
                        <?php endif; ?>
                    </div>
                    <div class="balance-item">
                        <div class="balance-value"><?php echo $user_balance_data['ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ'] ?? 9; ?>ώ</div>
                        <div class="balance-type">Ολιγόωρη</div>
                    </div>
                    <div class="balance-item">
                        <div class="balance-value"><?php echo $user_balance_data['ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ'] ?? 4; ?></div>
                        <div class="balance-type">Πορεία Κ.</div>
                    </div>
                    <div class="balance-item">
                        <div class="balance-value"><?php echo $user_balance_data['ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ'] ?? 4; ?></div>
                        <div class="balance-type">Πορεία Β.</div>
                    </div>
                    <div class="balance-item">
                        <div class="balance-value"><?php echo $user_balance_data['ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ'] ?? 8; ?></div>
                        <div class="balance-type">Σχολική Π.</div>
                    </div>
                    <div class="balance-item">
                        <div class="balance-value"><?php echo isset($user_balance_data['ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ']) ? $user_balance_data['ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ'] : 14; ?></div>
                        <div class="balance-type">Εξετάσεων</div>
                    </div>
                    <div class="balance-item">
                        <div class="balance-value"><?php echo isset($user_balance_data['ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ']) ? $user_balance_data['ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ'] : 22; ?></div>
                        <div class="balance-type">Νοσηλεία</div>
                    </div>
                    <div class="balance-item">
                        <div class="balance-value"><?php echo isset($user_balance_data['ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ']) ? $user_balance_data['ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ'] : 10; ?></div>
                        <div class="balance-type">Ασθ. Τέκνων</div>
                    </div>
                </div>
                <div style="font-size: 0.9rem; color: #666; margin-top: 10px;">
                    <strong>📌 Σημείωση:</strong> Τα υπόλοιπα κανονικής και βραχείας περιλαμβάνουν τις ημέρες από το προηγούμενο έτος που μεταφέρθηκαν.
                </div>
            </div>
            <?php endif; ?>
            
            <form method="POST">
                <input type="hidden" name="action" value="submit_request">
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="typos">Τύπος Άδειας (17 διαφορετικοί τύποι):</label>
                        <select id="typos" name="typos" required onchange="updateExpiryInfo()">
                            <option value="">Επιλέξτε τύπο άδειας</option>
                            <option value="ΚΑΝΟΝΙΚΗ">Κανονική Άδεια (30 ημέρες/έτος + έως 4 πορείας)</option>
                            <option value="ΒΡΑΧΕΙΑ">Βραχεία Άδεια (7 ημέρες + έως 4 πορείας)</option>
                            <option value="ΟΛΙΓΟΩΡΗ">Ολιγόωρη Άδεια (9 ώρες/μήνα)</option>
							<option value="ΑΙΤΗΣΗ_ΩΡΑΡΙΟΥ">Αίτηση εργασίας συγκεκριμένο ωράριο</option>
                            <option value="ΑΝΑΡΡΩΤΙΚΗ">Αναρρωτική Άδεια (Υγειονομική + 4 πορείας)</option>
                            <option value="ΕΚΠΑΙΔΕΥΤΙΚΗ">Εκπαιδευτική Άδεια (Επαγγελματική)</option>
                            <option value="ΜΑΚΡΑΣ_ΔΙΑΡΚΕΙΑΣ">Μακράς Διάρκειας Αλλοδαπή (6 μήνες χωρίς αποδοχές)</option>
                            <option value="ΣΧΟΛΙΚΗ_ΔΟΚΙΜΩΝ">Σχολική Άδεια Δοκίμων (Εορτές, διακοπές)</option>
                            <option value="ΕΞΕΤΑΣΕΩΝ">Ειδική Άδεια Εξετάσεων (14 ημέρες/έτος)</option>
                            <option value="ΜΗΤΡΟΤΗΤΑΣ">Μητρότητας/Λοχείας (2+3 μήνες)</option>
                            <option value="ΑΝΑΤΡΟΦΗΣ">Ανατροφής (2 έτη χωρίς αποδοχές)</option>
                            <option value="ΙΑΤΡΙΚΗ_ΑΝΑΠΑΡΑΓΩΓΗ">Ιατρικά Υποβοηθούμενη Αναπαραγωγή</option>
                            <option value="ΓΑΜΟΣ">Άδεια Γάμου (5 ημέρες)</option>
                            <option value="ΠΕΝΘΟΣ">Άδεια Πένθους (5 ημέρες)</option>
                            <option value="ΜΕΤΑΓΓΙΣΕΙΣ_ΝΟΣΗΛΕΙΑ">Μεταγγίσεις/Νοσηλεία (22 ημέρες/έτος)</option>
                            <option value="ΑΣΘΕΝΕΙΑ_ΤΕΚΝΩΝ">Άδεια Ασθένειας Τέκνων</option>
                            <option value="ΕΠΙΠΡΟΣΘΕΤΗ_ΑΝΑΤΡΟΦΗΣ">Επιπρόσθετη Άδεια Ανατροφής</option>
                            <option value="ΣΧΟΛΙΚΗ_ΕΠΙΔΟΣΗ">Παρακολούθηση Σχολικής Επίδοσης Τέκνου</option>
                        </select>
                        <div id="expiry-info" style="font-size: 12px; color: #666; margin-top: 5px;"></div>
                    </div>
                    
                    <div class="form-group">
                        <label for="imerominia">Ημερομηνία Έναρξης:</label>
                        <input type="date" id="imerominia" name="imerominia" required>
                        <small id="date-note" style="font-size: 11px; color: #666; display: block; margin-top: 3px;">
                            Επιλέξτε την ημερομηνία έναρξης της άδειας
                        </small>
                    </div>
                </div>
                
                <div class="form-row-three">
                    <div class="form-group">
                        <label for="meres">Ημέρες Άδειας:</label>
                        <input type="number" id="meres" name="meres" min="1" step="1">
                        <small style="color: #666; font-size: 11px; display: block; margin-top: 3px;">
                            Μόνο ακέραιες ημέρες (όχι δεκαδικά - όχι για ολιγόωρη)
                        </small>
                    </div>
                    
                    <div class="form-group">
                        <label for="wres">Ώρες:</label>
                        <input type="number" id="wres" name="wres" min="0" max="9">
                        <small style="color: #666; font-size: 11px; display: block; margin-top: 3px;">
                            Για ολιγόωρη άδεια (1-9 ώρες)
                        </small>
                    </div>
                    <div class="form-group" id="hour-range-row" style="display:none;">
                         <label>Ώρες (μόνο για ολιγόωρη ή αίτηση ωραρίου):</label>
                         <div style="display:flex; gap:10px; align-items:center;">
                             <span>Από:</span>
                             <input type="time" id="ora_enarxis" name="ora_enarxis">
                             <span>Έως:</span>
                             <input type="time" id="ora_lixis" name="ora_lixis">
                         </div>
                         <small style="color:#666; font-size:11px;">Παράδειγμα: από 12:00 έως 14:00 (2 ώρες)</small>
                    </div>
                    <div class="form-group">
                        <label for="imeres_poreias">Ημέρες Πορείας:</label>
                        <input type="number" id="imeres_poreias" name="imeres_poreias" min="0" max="4" value="0">
                        <small style="color: #666; font-size: 11px; display: block; margin-top: 3px;">
                            Κανονική: μέχρι 4, Βραχεία: μέχρι 4, Αναρρωτική: μέχρι 4
                        </small>
                    </div>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="logos">Αιτιολογία:</label>
                        <textarea id="logos" name="logos" rows="3" placeholder="Περιγράψτε τον λόγο της άδειας. Στην αίτηση ολιγόωρης να αναγράφετε απαραίτητα  απο ...:... έως ...:... ώρα" required></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="topos_dianysis">Η άδεια μου θα διανυθεί:</label>
                        <input type="text" id="topos_dianysis" name="topos_dianysis" placeholder="Αναγράψτε την πόλη ή χώρα διάνυσης της άδειας" maxlength="100" required>
                        <small style="color: #666; font-size: 11px; display: block; margin-top: 3px;">
                            <strong>Υποχρεωτικό για όλους τους τύπους αδειών</strong>
                        </small>
                    </div>
                </div>
                
<div class="form-group">
    <label for="proistamenos_egkrisi">Έγκριση από Προϊστάμενο Γραφείου:</label>
    <select id="proistamenos_egkrisi" name="proistamenos_egkrisi" required>
        <option value="">Επιλέξτε...</option>
        <option value="ΝΑΙ">ΝΑΙ - Ο προϊστάμενος είναι ενήμερος και συμφωνεί</option>
        <option value="ΟΧΙ - Δεν έχω ενημερώσει τον προϊστάμενο">ΟΧΙ - Δεν έχω ενημερώσει τον προϊστάμενο</option>
        <option value="ΟΧΙ - Δεν συμφωνεί ο προϊστάμενος">ΟΧΙ - Δεν συμφωνεί ο προϊστάμενος</option>
        <option value="ΟΧΙ - Γιατί εγώ είμαι ο προϊστάμενος γραφείου">ΟΧΙ - Γιατί εγώ είμαι ο προϊστάμενος γραφείου</option>
    </select>
    <small style="color: #666; font-size: 11px; display: block; margin-top: 3px;">
        Υποχρεωτικό να ενημερώσετε τον προϊστάμενό σας πριν την υποβολή
    </small>
</div>
     <div class="form-group">
    <label for="selected_manager">Παρακαλώ επιλέξτε ένα προϊστάμενο για να σταλεί η αίτηση σας:</label>
    <select id="selected_manager" name="selected_manager" required>
        <option value="">-- Επιλέξτε Προϊστάμενο --</option>
        <?php
        $managers = $pdo->query("SELECT ΜΗΤΡΩΟ, ΟΝΟΜΑ, ΕΠΩΝΥΜΟ, EMAIL FROM users WHERE ΠΡΟΙΣΤΑΜΕΝΟΣ = 1 AND ADMINISTRATOR = 0 ORDER BY ΕΠΩΝΥΜΟ, ΟΝΟΜΑ")->fetchAll();
		foreach ($managers as $manager):
        ?>
            <option value="<?php echo htmlspecialchars($manager['ΜΗΤΡΩΟ']); ?>" data-email="<?php echo htmlspecialchars($manager['EMAIL']); ?>">
                <?php echo htmlspecialchars($manager['ΜΗΤΡΩΟ'] . ' - ' . $manager['ΟΝΟΜΑ'] . ' ' . $manager['ΕΠΩΝΥΜΟ']); ?>
            </option>
        <?php endforeach; ?>
    </select>
    <small style="color: #666; font-size: 11px; display: block; margin-top: 3px;">
        Θα σταλεί Email ενημέρωσης στον επιλεγμένο προϊστάμενο
    </small>
</div>           
                <button type="submit" class="btn">🚀 Υποβολή Αίτησης</button>
            </form>
        </div>

        <!-- ΔΙΟΡΘΩΜΕΝΗ Καρτέλα Των Αιτήσεων Μου -->
        <div id="my-requests-tab" class="tab-content">
            <h2>Οι Αιτήσεις Μου</h2>
            
            <?php if (count($my_requests) > 0): ?>
                <div style="margin-bottom: 20px;">
                    <strong>Σύνολο Αιτήσεων:</strong> <?php echo count($my_requests); ?> | 
                    <span style="color: #856404;">Εκκρεμείς:</span> <?php echo count(array_filter($my_requests, fn($r) => $r['status'] == 'ΕΚΚΡΕΜΕΙ')); ?> | 
                    <span style="color: #155724;">Εγκεκριμένες:</span> <?php echo count(array_filter($my_requests, fn($r) => in_array($r['status'], ['ΕΓΚΡΙΘΗΚΕ', 'ΕΓΚΡΙΘΗΚΕ ΜΕ ΤΡΟΠΟΠΟΙΗΣΗ']))); ?> | 
                    <span style="color: #721c24;">Απορριφθείσες:</span> <?php echo count(array_filter($my_requests, fn($r) => $r['status'] == 'ΑΠΟΡΡΙΦΘΗΚΕ')); ?>
                </div>
                
                <table class="requests-table">
                    <thead>
                        <tr>
                            <th>Τύπος</th>
                            <th>Ημερομηνία</th>
                            <th>Ημέρες</th>
                            <th>Ώρες</th>
                            <th>Αιτιολογία</th>
                            <th>Τόπος Διάνυσης</th>
                            <th>Προϊστ. Έγκριση</th>
                            <th>Κατάσταση</th>
                            <th>Υποβλήθηκε</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php foreach ($my_requests as $request): ?>
                        <tr>
                            <td style="font-weight: bold; color: #1e3c72;"><?php echo htmlspecialchars($request['typos']); ?></td>
                            <td><?php echo $request['imerominia'] ? date('d/m/Y', strtotime($request['imerominia'])) : '-'; ?></td>
                            <td style="text-align: center; font-weight: bold;"><?php echo $request['meres'] ?: '-'; ?></td>
                            <td style="text-align: center; font-weight: bold;"><?php echo $request['wres'] ?: '-'; ?></td>
                            <td style="width: 250px; word-wrap: break-word;">
                                <div style="white-space: normal; line-height: 1.4;">
                                    <strong><?php echo htmlspecialchars($request['logos']); ?></strong>
                                    <?php if (strpos($request['logos'], 'Ημέρες πορείας:') !== false): ?>
                                        <br><span style="color: #007bff; font-size: 11px; font-weight: bold;">
                                            <?php 
                                            preg_match('/Ημέρες πορείας: (\d+)/', $request['logos'], $matches);
                                            echo isset($matches[1]) ? '🚶 Πορεία: ' . $matches[1] . ' ημέρες' : '';
                                            ?>
                                        </span>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td style="width: 120px; word-wrap: break-word;">
                                <div style="white-space: normal; line-height: 1.3;">
                                    <?php echo htmlspecialchars($request['topos_dianysis'] ?? '-'); ?>
                                </div>
                            </td>
                            <td style="text-align: center;">
                                <span style="padding: 3px 8px; border-radius: 12px; font-size: 11px; font-weight: bold; 
                                      <?php echo ($request['proistamenos_egkrisi'] ?? '') == 'ΝΑΙ' ? 'background: #d4edda; color: #155724;' : 'background: #f8d7da; color: #721c24;'; ?>">
                                    <?php echo htmlspecialchars($request['proistamenos_egkrisi'] ?? 'ΟΧΙ'); ?>
                                </span>
                            </td>
                            <td>
                                <span class="status-badge status-<?php 
                                    echo $request['status'] == 'ΕΚΚΡΕΜΕΙ' ? 'pending' : 
                                        ($request['status'] == 'ΣΥΝΕΝΝΟΗΣΗ' ? 'consultation' :
                                        ($request['status'] == 'ΕΓΚΡΙΘΗΚΕ ΜΕ ΤΡΟΠΟΠΟΙΗΣΗ' ? 'modified' :
                                        (in_array($request['status'], ['ΕΓΚΡΙΘΗΚΕ']) ? 'approved' : 'rejected'))); 
                                ?>">
                                    <?php echo htmlspecialchars($request['status']); ?>
                                </span>
                                <?php if (!empty($request['modification_reason'])): ?>
                                    <small style="display: block; color: #856404; margin-top: 4px; font-weight: bold;">
                                        📝 Λόγος τροποποίησης: <?php echo htmlspecialchars($request['modification_reason']); ?>
                                    </small>
                                <?php endif; ?>
                                <?php if (!empty($request['consultation_message'])): ?>
                                    <small style="display: block; color: #0056b3; margin-top: 4px; font-weight: bold;">
                                        💬 Μήνυμα: <?php echo htmlspecialchars($request['consultation_message']); ?>
                                    </small>
                                <?php endif; ?>
                                <?php if (!empty($request['rejection_reason'])): ?>
                                    <small style="display: block; color: #dc3545; margin-top: 4px; font-weight: bold;">
                                        ❌ Λόγος απόρριψης: <?php echo htmlspecialchars($request['rejection_reason']); ?>
                                    </small>
                                <?php endif; ?>
                            </td>
                            <td><?php echo date('d/m/Y H:i', strtotime($request['submitted_at'])); ?></td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            <?php else: ?>
                <p>Δεν έχετε υποβάλει ακόμα αιτήσεις άδειας.</p>
            <?php endif; ?>
        </div>

        <!-- ΔΙΟΡΘΩΜΕΝΗ Καρτέλα Εκκρεμών Αιτήσεων με 4 ΕΠΙΛΟΓΕΣ -->
        <?php if (isset($_SESSION['is_manager'], $_SESSION['is_admin']) && ($_SESSION['is_manager'] || $_SESSION['is_admin'])): ?>
        <div id="pending-tab" class="tab-content">
            <h2>Εκκρεμείς Αιτήσεις Προς Έγκριση - 4 ΕΠΙΛΟΓΕΣ</h2>
            
            <?php if (count($pending_requests) > 0): ?>
                <div style="margin-bottom: 20px; padding: 15px; background: #e9ecef; border-radius: 8px;">
                    <strong>Σύνολο Εκκρεμών Αιτήσεων:</strong> <?php echo count($pending_requests); ?>
                    <div style="margin-top: 10px; font-size: 14px; color: #495057;">
                        <strong>📋 Διαθέσιμες Επιλογές:</strong> 
                        <span style="color: #28a745;">✅ Έγκριση</span> | 
                        <span style="color: #ffc107;">✏️ Έγκριση με Τροποποίηση</span> | 
                        <span style="color: #17a2b8;">💬 Συνεννόηση</span> | 
                        <span style="color: #dc3545;">❌ Απόρριψη</span>
                    </div>
                </div>
                
                <table class="requests-table">
                    <thead>
                        <tr>
                            <th>Υπάλληλος</th>
                            <th>Τύπος Άδειας</th>
                            <th>Ημερομηνία</th>
                            <th>Ημέρες</th>
                            <th>Αιτιολογία</th>
                            <th>Τόπος</th>
                            <th>Προϊστ. Έγκριση</th>
                            <th>Υποβλήθηκε</th>
                            <th>Ενέργειες (4 Επιλογές)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php foreach ($pending_requests as $request): ?>
                        <tr>
                            <td>
                                <strong><?php echo htmlspecialchars($request['ΟΝΟΜΑ'] . ' ' . $request['ΕΠΩΝΥΜΟ']); ?></strong><br>
                                <small style="color: #666;">Μητρώο: <?php echo htmlspecialchars($request['mitroo']); ?></small>
                            </td>
                            <td style="font-weight: bold; color: #1e3c72;"><?php echo htmlspecialchars($request['typos']); ?></td>
                            <td><?php echo $request['imerominia'] ? date('d/m/Y', strtotime($request['imerominia'])) : '-'; ?></td>
                            <td style="text-align: center; font-weight: bold; color: #007bff;"><?php echo $request['meres'] ?: '-'; ?></td>
                            <td style="width: 200px; word-wrap: break-word;">
                                <div style="white-space: normal; line-height: 1.4; cursor: help;" title="<?php echo htmlspecialchars($request['logos']); ?>">
                                    <strong><?php echo htmlspecialchars($request['logos']); ?></strong>
                                    <?php if (strpos($request['logos'], 'Ημέρες πορείας:') !== false): ?>
                                        <br><span style="color: #007bff; font-size: 11px; font-weight: bold;">
                                            <?php 
                                            preg_match('/Ημέρες πορείας: (\d+)/', $request['logos'], $matches);
                                            echo isset($matches[1]) ? '🚶 Πορεία: ' . $matches[1] . ' ημέρες' : '';
                                            ?>
                                        </span>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td style="width: 120px; word-wrap: break-word;">
                                <div style="white-space: normal; line-height: 1.3;">
                                    <?php echo htmlspecialchars($request['topos_dianysis'] ?? '-'); ?>
                                </div>
                            </td>
                            <td style="text-align: center;">
                                <span style="padding: 3px 8px; border-radius: 12px; font-size: 11px; font-weight: bold; 
                                      <?php echo ($request['proistamenos_egkrisi'] ?? '') == 'ΝΑΙ' ? 'background: #d4edda; color: #155724;' : 'background: #f8d7da; color: #721c24;'; ?>">
                                    <?php echo htmlspecialchars($request['proistamenos_egkrisi'] ?? 'ΟΧΙ'); ?>
                                </span>
                            </td>
                            <td style="font-size: 12px;"><?php echo date('d/m/Y H:i', strtotime($request['submitted_at'])); ?></td>
                            <td>
                                <div class="action-buttons">
                                    <form method="POST" style="display: inline;">
                                        <input type="hidden" name="action" value="approve_request">
                                        <input type="hidden" name="request_id" value="<?php echo $request['id']; ?>">
                                        <button type="submit" class="btn btn-success btn-sm" onclick="return confirm('Είστε σίγουροι ότι θέλετε να εγκρίνετε αυτή την αίτηση;')">✅ Έγκριση</button>
                                    </form>
                                    
                                    <button type="button" class="btn btn-warning btn-sm" onclick="openModificationModal(<?php echo $request['id']; ?>, '<?php echo addslashes($request['typos']); ?>', '<?php echo $request['imerominia']; ?>', <?php echo $request['meres']; ?>, <?php echo $request['wres']; ?>, '<?php echo addslashes($request['logos']); ?>', '<?php echo addslashes($request['topos_dianysis'] ?? ''); ?>', '<?php echo addslashes($request['proistamenos_egkrisi'] ?? ''); ?>')">✏️ Έγκριση με Τροποποίηση</button>
                                    
                                    <button type="button" class="btn btn-info btn-sm" onclick="openConsultationModal(<?php echo $request['id']; ?>)">💬 Συνεννόηση</button>
                                    
                                    <button type="button" class="btn btn-danger btn-sm" onclick="openRejectionModal(<?php echo $request['id']; ?>)">❌ Απόρριψη</button>
                                </div>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            <?php else: ?>
                <p>Δεν υπάρχουν εκκρεμείς αιτήσεις.</p>
            <?php endif; ?>
        </div>

        <!-- Modal για Τροποποίηση Αίτησης -->
        <div id="modificationModal" class="modal">
            <div class="modal-content" style="max-width: 800px;">
                <span class="close" onclick="closeModal('modificationModal')">&times;</span>
                <h3>Έγκριση με Τροποποίηση - Επεξεργασία Πλήρους Αίτησης</h3>
                <p style="color: #666; margin-bottom: 20px;">Μπορείτε να επεξεργαστείτε όλα τα πεδία της αίτησης πριν την εγκρίνετε.</p>
                
                <form method="POST">
                    <input type="hidden" name="action" value="approve_with_modification">
                    <input type="hidden" name="request_id" id="mod_request_id">
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label><strong>Τύπος Άδειας:</strong></label>
                            <select name="new_typos" id="mod_typos" required style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px;">
                                <option value="ΚΑΝΟΝΙΚΗ">Κανονική Άδεια (30 ημέρες/έτος + έως 4 πορείας)</option>
                                <option value="ΒΡΑΧΕΙΑ">Βραχεία Άδεια (7 ημέρες + έως 4 πορείας)</option>
                                <option value="ΟΛΙΓΟΩΡΗ">Ολιγόωρη Άδεια (9 ώρες/μήνα)</option>
                                <option value="ΑΝΑΡΡΩΤΙΚΗ">Αναρρωτική Άδεια (Υγειονομική + 4 πορείας)</option>
                                <option value="ΕΚΠΑΙΔΕΥΤΙΚΗ">Εκπαιδευτική Άδεια (Επαγγελματική)</option>
                                <option value="ΜΑΚΡΑΣ_ΔΙΑΡΚΕΙΑΣ">Μακράς Διάρκειας Αλλοδαπή (6 μήνες χωρίς αποδοχές)</option>
                                <option value="ΣΧΟΛΙΚΗ_ΔΟΚΙΜΩΝ">Σχολική Άδεια Δοκίμων (Εορτές, διακοπές)</option>
                                <option value="ΕΞΕΤΑΣΕΩΝ">Ειδική Άδεια Εξετάσεων (14 ημέρες/έτος)</option>
                                <option value="ΜΗΤΡΟΤΗΤΑΣ">Μητρότητας/Λοχείας (2+3 μήνες)</option>
                                <option value="ΑΝΑΤΡΟΦΗΣ">Ανατροφής (2 έτη χωρίς αποδοχές)</option>
                                <option value="ΙΑΤΡΙΚΗ_ΑΝΑΠΑΡΑΓΩΓΗ">Ιατρικά Υποβοηθούμενη Αναπαραγωγή</option>
                                <option value="ΓΑΜΟΣ">Άδεια Γάμου (5 ημέρες)</option>
                                <option value="ΠΕΝΘΟΣ">Άδεια Πένθους (5 ημέρες)</option>
                                <option value="ΜΕΤΑΓΓΙΣΕΙΣ_ΝΟΣΗΛΕΙΑ">Μεταγγίσεις/Νοσηλεία (22 ημέρες/έτος)</option>
                                <option value="ΑΣΘΕΝΕΙΑ_ΤΕΚΝΩΝ">Άδεια Ασθένειας Τέκνων</option>
                                <option value="ΕΠΙΠΡΟΣΘΕΤΗ_ΑΝΑΤΡΟΦΗΣ">Επιπρόσθετη Άδεια Ανατροφής</option>
                                <option value="ΣΧΟΛΙΚΗ_ΕΠΙΔΟΣΗ">Παρακολούθηση Σχολικής Επίδοσης Τέκνου</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label><strong>Ημερομηνία Έναρξης:</strong></label>
                            <input type="date" name="new_imerominia" id="mod_date" required style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px;">
                        </div>
                    </div>
                    
                    <div class="form-row-three">
                        <div class="form-group">
                            <label><strong>Ημέρες Άδειας:</strong></label>
                            <input type="number" name="new_meres" id="mod_days" min="0" style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px;">
                            <small style="color: #666; font-size: 11px;">Μόνο ακέραιες ημέρες (όχι για ολιγόωρη)</small>
                        </div>
                        <div class="form-group">
                            <label><strong>Ώρες:</strong></label>
                            <input type="number" name="new_wres" id="mod_hours" min="0" max="9" style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px;">
                            <small style="color: #666; font-size: 11px;">Για ολιγόωρη άδεια (1-9 ώρες)</small>
                        </div>
                        <div class="form-group">
                            <label><strong>Ημέρες Πορείας:</strong></label>
                            <input type="number" name="new_imeres_poreias" id="mod_travel_days" min="0" max="4" value="0" style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px;">
                            <small style="color: #666; font-size: 11px;">Κανονική: μέχρι 4, Βραχεία: μέχρι 4, Αναρρωτική: μέχρι 4</small>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label><strong>Αιτιολογία:</strong></label>
                        <textarea name="new_logos" id="mod_reason" rows="3" required style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px;"></textarea>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label><strong>Τόπος Διάνυσης:</strong></label>
                            <input type="text" name="new_topos" id="mod_location" required style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px;">
                        </div>
                        <div class="form-group">
                            <label><strong>Έγκριση από Προϊστάμενο:</strong></label>
                            <select name="new_proistamenos_egkrisi" id="mod_manager_approval" required style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px;">
                                <option value="ΝΑΙ">ΝΑΙ - Ενήμερος και συμφωνεί</option>
                                <option value="ΟΧΙ">ΟΧΙ - Δεν είναι ενήμερος</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label><strong>Λόγος Τροποποίησης:</strong></label>
                        <textarea name="modification_reason" rows="3" placeholder="Αναφέρετε τον λόγο της τροποποίησης για ενημέρωση του αστυνομικού..." required style="width: 100%; padding: 10px; border: 2px solid #ddd; border-radius: 6px;"></textarea>
                    </div>
                    
                    <div style="text-align: center; margin-top: 20px;">
                        <button type="submit" class="btn btn-warning" style="font-size: 16px; padding: 12px 30px;">✏️ Έγκριση με Τροποποίηση</button>
                        <button type="button" class="btn" onclick="closeModal('modificationModal')" style="background: #6c757d; margin-left: 10px;">Ακύρωση</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Modal για Συνεννόηση -->
        <div id="consultationModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeModal('consultationModal')">&times;</span>
                <h3>Αίτημα Συνεννόησης</h3>
                <form method="POST">
                    <input type="hidden" name="action" value="request_consultation">
                    <input type="hidden" name="request_id" id="cons_request_id">
                    
                    <div class="form-group">
                        <label>Μήνυμα για τον υπάλληλο:</label>
                        <textarea name="consultation_message" rows="4" placeholder="Περιγράψτε τι χρειάζεται να συζητήσετε..." required></textarea>
                    </div>
                    
                    <button type="submit" class="btn btn-info">Αποστολή Αιτήματος Συνεννόησης</button>
                </form>
            </div>
        </div>

        <!-- Modal για Απόρριψη -->
        <div id="rejectionModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeModal('rejectionModal')">&times;</span>
                <h3>Απόρριψη Αίτησης</h3>
                <form method="POST">
                    <input type="hidden" name="action" value="reject_request">
                    <input type="hidden" name="request_id" id="rej_request_id">
                    
                    <div class="form-group">
                        <label>Λόγος Απόρριψης:</label>
                        <textarea name="rejection_reason" rows="4" placeholder="Αναφέρετε τον λόγο της απόρριψης..." required></textarea>
                    </div>
                    
                    <button type="submit" class="btn btn-danger">Απόρριψη Αίτησης</button>
                </form>
            </div>
        </div>
        <?php endif; ?>

        <!-- Καρτέλα Εγκεκριμένων Αδειών (ΓΔΥΕ) -->
        <?php if (isset($_SESSION['is_gdye']) && $_SESSION['is_gdye']): ?>
        <div id="approved-tab" class="tab-content">
            <h2>📋 Εγκεκριμένες Άδειες από Προϊστάμενο για Καταχώρηση</h2>
            <p style="color: #666; margin-bottom: 20px;">
                <strong>ΓΔΥΕ Γραφείο:</strong> Παρακάτω φαίνονται όλες οι άδειες που έχουν εγκριθεί από τον προϊστάμενο και περιμένουν καταχώρηση.
            </p>
            
            <?php if (count($approved_requests) > 0): ?>
                <div style="margin-bottom: 20px; padding: 15px; background: #d4edda; border-radius: 8px; border-left: 5px solid #28a745;">
                    <strong>📊 Συνολικός Αριθμός Εγκεκριμένων Αδειών:</strong> <?php echo count($approved_requests); ?> | 
                    <span style="color: #155724;">✅ Απλές Εγκρίσεις:</span> <?php echo count(array_filter($approved_requests, fn($r) => $r['status'] == 'ΕΓΚΡΙΘΗΚΕ')); ?> | 
                    <span style="color: #856404;">✏️ Εγκρίσεις με Τροποποίηση:</span> <?php echo count(array_filter($approved_requests, fn($r) => $r['status'] == 'ΕΓΚΡΙΘΗΚΕ ΜΕ ΤΡΟΠΟΠΟΙΗΣΗ')); ?>
                </div>
                
                <table class="requests-table">
                    <thead>
    <tr>
        <th style="width: 180px;">Αστυνομικός</th>
        <th style="width: 130px;">Τύπος Άδειας</th>
        <th style="width: 100px;">Ημερομηνία Έναρξης</th>
        <th style="width: 70px;">Ημέρες</th>
        <th style="width: 60px;">Ώρες</th>
        <th style="width: 250px;">Αιτιολογία</th>
        <th style="width: 120px;">Τόπος Διάνυσης</th>
        <th style="width: 90px;">Προϊστ. Έγκρ.</th>
        <th style="width: 130px;">Κατάσταση</th>
        <th style="width: 120px;">Ημερομηνία Έγκρισης</th>
        <th style="width: 80px;">Ενέργειες</th>
    </tr>
</thead>
                    <tbody>
                        <?php foreach ($approved_requests as $request): ?>
                        <tr style="<?php echo $request['status'] == 'ΕΓΚΡΙΘΗΚΕ ΜΕ ΤΡΟΠΟΠΟΙΗΣΗ' ? 'background-color: #fff3cd;' : ''; ?>">
                            <td>
                                <strong><?php echo htmlspecialchars($request['ΟΝΟΜΑ'] . ' ' . $request['ΕΠΩΝΥΜΟ']); ?></strong><br>
                                <small style="color: #666; font-weight: bold;">Μητρώο: <?php echo htmlspecialchars($request['mitroo']); ?></small>
                            </td>
                            <td style="font-weight: bold; color: #1e3c72;">
                                <?php echo htmlspecialchars($request['typos']); ?>
                            </td>
                            <td style="text-align: center; font-weight: bold; color: #007bff;">
                                <?php echo $request['imerominia'] ? date('d/m/Y', strtotime($request['imerominia'])) : '-'; ?>
                            </td>
                            <td style="text-align: center; font-weight: bold; color: #28a745;">
                                <?php echo $request['meres'] ?: '-'; ?>
                            </td>
                            <td style="text-align: center; font-weight: bold; color: #fd7e14;">
                                <?php echo $request['wres'] ?: '-'; ?>
                            </td>
                            <td style="width: 250px; word-wrap: break-word;">
                                <div style="white-space: normal; line-height: 1.4;">
                                    <strong><?php echo htmlspecialchars($request['logos']); ?></strong>
                                    <?php if (strpos($request['logos'], 'Ημέρες πορείας:') !== false): ?>
                                        <br><span style="color: #007bff; font-size: 11px; font-weight: bold;">
                                            <?php 
                                            preg_match('/Ημέρες πορείας: (\d+)/', $request['logos'], $matches);
                                            echo isset($matches[1]) ? '🚶 Πορεία: ' . $matches[1] . ' ημέρες' : '';
                                            ?>
                                        </span>
                                    <?php endif; ?>
                                </div>
                            </td>
                            <td style="width: 120px; word-wrap: break-word;">
                                <div style="white-space: normal; line-height: 1.3;">
                                    <?php echo htmlspecialchars($request['topos_dianysis'] ?? '-'); ?>
                                </div>
                            </td>
                            <td style="text-align: center;">
                                <span style="padding: 3px 8px; border-radius: 12px; font-size: 11px; font-weight: bold; 
                                      <?php echo ($request['proistamenos_egkrisi'] ?? '') == 'ΝΑΙ' ? 'background: #d4edda; color: #155724;' : 'background: #f8d7da; color: #721c24;'; ?>">
                                    <?php echo htmlspecialchars($request['proistamenos_egkrisi'] ?? 'ΟΧΙ'); ?>
                                </span>
                            </td>
                            <td>
<span class="status-badge status-<?php 
                                    echo $request['status'] == 'ΕΓΚΡΙΘΗΚΕ' ? 'approved' : 'modified'; 
                                ?>">
                                    <?php echo htmlspecialchars($request['status']); ?>
                                </span>
                                <?php if (!empty($request['modification_reason'])): ?>
                                    <small style="display: block; color: #856404; margin-top: 4px; font-weight: bold;">
                                        ✏️ Τροποποίηση: <?php echo htmlspecialchars($request['modification_reason']); ?>
                                    </small>
                                <?php endif; ?>
                            <td style="font-size: 12px; text-align: center;">
    <?php echo date('d/m/Y', strtotime($request['submitted_at'])); ?>
</td>
<td style="text-align: center;">
    <?php
// Φτιάχνουμε το όνομα από τα πεδία της βάσης
$employee_name = ($request['ΟΝΟΜΑ'] ?? '') . ' ' . ($request['ΕΠΩΝΥΜΟ'] ?? '');
$employee_name = trim($employee_name);
?>
<button type="button" 
        class="btn btn-sm"
        style="background: #28a745; padding: 6px 12px; font-size: 11px;"
        onclick="printLeaveRequest(
                '<?php echo (int)$request['id']; ?>',
                '<?php echo addslashes($request['ΟΝΟΜΑ'] . ' ' . $request['ΕΠΩΝΥΜΟ']); ?>',
                '<?php echo addslashes($request['typos']); ?>',
                '<?php echo $request['imerominia']; ?>',
                '<?php echo (int)$request['meres']; ?>',
                '<?php echo addslashes($request['logos']); ?>',
                '<?php echo addslashes($request['topos_dianysis']); ?>',
                '<?php echo (int)$request['wres']; ?>',
                '<?php echo $request['ora_enarxis'] ?? ''; ?>',
                '<?php echo $request['ora_lixis'] ?? ''; ?>',
                '<?php echo addslashes($request['mitroo'] ?? ''); ?>',
                '<?php echo addslashes($request['ΒΑΘΜΟΣ'] ?? ''); ?>'
            )"
       title="Εκτύπωση Άδειας">
    🖨️ Εκτύπωση
</button>
</td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
                
                <div style="margin-top: 20px; padding: 15px; background: #cce5ff; border-radius: 8px; border-left: 5px solid #007bff;">
                    <h4 style="color: #004085; margin-bottom: 10px;">📝 Οδηγίες για το ΓΔΥΕ Γραφείο:</h4>
                    <ul style="color: #004085; margin-left: 20px; line-height: 1.6;">
                        <li><strong>Καταχώρηση:</strong> Όλες οι παραπάνω άδειες έχουν εγκριθεί και πρέπει να καταχωρηθούν στο σύστημα.</li>
                        <li><strong>Τροποποιήσεις:</strong> Οι άδειες με κίτρινο φόντο έχουν τροποποιηθεί από τον προϊστάμενο.</li>
                        <li><strong>Ημερομηνίες:</strong> Προσέξτε τις ημερομηνίες έναρξης και την αιτιολογία κάθε άδειας.</li>
                        <li><strong>Επικοινωνία:</strong> Σε περίπτωση απορίας, επικοινωνήστε με τον προϊστάμενο που ενέκρινε την άδεια.</li>
                    </ul>
                </div>
            <?php else: ?>
                <div style="text-align: center; padding: 40px; background: #f8f9fa; border-radius: 10px; border: 2px dashed #dee2e6;">
                    <h3 style="color: #6c757d; margin-bottom: 15px;">📋 Δεν υπάρχουν εγκεκριμένες άδειες προς καταχώρηση</h3>
                    <p style="color: #6c757d;">Όταν ο προϊστάμενος εγκρίνει άδειες, θα εμφανιστούν εδώ για επεξεργασία από το ΓΔΥΕ γραφείο.</p>
                </div>
            <?php endif; ?>
        </div>
        <?php endif; ?>

        <!-- ΕΝΗΜΕΡΩΜΕΝΗ Καρτέλα Ρυθμίσεων -->
        <?php if (isset($_SESSION['is_manager'], $_SESSION['is_admin']) && ($_SESSION['is_manager'] || $_SESSION['is_admin'])): ?>
        <div id="settings-tab" class="tab-content">
            <h2>Ρυθμίσεις Συστήματος</h2>
            
            <div class="settings-section">
                <h3>Ημερομηνίες Λήξης Αδειών</h3>
                <p style="color: #666; margin-bottom: 15px;">Ορίστε μέχρι πότε μπορούν να υποβληθούν αιτήσεις για κάθε τύπο άδειας.</p>
                
                <div class="settings-row">
                    <div>
                        <label><strong>Κανονική Άδεια - Λήξη:</strong></label>
                        <input type="date" id="kanoniki_expiry" value="<?php echo $kanoniki_expiry; ?>" onchange="updateSetting('kanoniki_adeia_expiry', this.value)">
                    </div>
                    <div>
                        <label><strong>Βραχεία Άδεια - Λήξη:</strong></label>
                        <input type="date" id="vraheia_expiry" value="<?php echo $vraheia_expiry; ?>" onchange="updateSetting('vraheia_adeia_expiry', this.value)">
                    </div>
                    <div>
                        <div id="settings-status" style="font-size: 12px; color: #28a745; margin-top: 10px;"></div>
                    </div>
                </div>
            </div>

            <div class="settings-section">
                <h3>🗓️ Διαχείριση Έτους Αδειών - ΕΝΗΜΕΡΩΜΕΝΗ ΛΟΓΙΚΗ</h3>
                <p style="color: #666; margin-bottom: 15px;">Αλλαγή έτους με σωστή μεταφορά υπολοίπων κανονικής και βραχείας άδειας.</p>
                
                <div style="background: #e7f3ff; padding: 20px; border-radius: 8px; margin-bottom: 20px; border-left: 5px solid #007bff;">
                    <h4 style="color: #004085; margin-bottom: 15px;">📋 Τρέχον Έτος Συστήματος: <?php echo $current_system_year; ?></h4>
                    <p style="color: #004085; margin-bottom: 15px; line-height: 1.6;">
                        <strong>ΔΙΟΡΘΩΜΕΝΗ Λογική Αλλαγής Έτους:</strong><br>
                        • Κάθε έτος: Κανονική 30 ημέρες + έως 4 πορείας, Βραχεία 7 ημέρες + έως 4 πορείας<br>
                        • Τα αχρησιμοποίητα υπόλοιπα κανονικής και βραχείας μεταφέρονται στο επόμενο έτος<br>
                        • Κάθε άδεια ανήκει στο έτος της (δεν αθροίζονται, παραμένουν χωριστά)<br>
                        • Παράδειγμα: 5 ημέρες από 2024 + 30 ημέρες του 2025 = συνολικά 35 διαθέσιμες
                    </p>
                    
                    <div style="display: flex; gap: 15px; align-items: end;">
                        <div style="flex: 1;">
                            <label style="font-weight: 600; margin-bottom: 5px; display: block;">Νέο Έτος:</label>
                            <select id="new_year" style="padding: 10px; border: 2px solid #007bff; border-radius: 6px; width: 100%;">
                                <?php 
                                $next_year = (int)date('Y') + 1;
                                $current_year = (int)date('Y');
                                ?>
                                <option value="<?php echo $current_year; ?>" <?php echo $current_system_year == $current_year ? 'selected' : ''; ?>>
                                    <?php echo $current_year; ?> (Τρέχον)
                                </option>
                                <option value="<?php echo $next_year; ?>" <?php echo $current_system_year == $next_year ? 'selected' : ''; ?>>
                                    <?php echo $next_year; ?> (Επόμενο)
                                </option>
                            </select>
                        </div>
                        <div>
                            <button onclick="changeYear()" class="btn" style="background: #007bff; padding: 10px 20px;">
                                🗓️ Αλλαγή Έτους
                            </button>
                        </div>
                    </div>
                </div>
                
                <div style="background: #fff3cd; padding: 15px; border-radius: 6px; border-left: 5px solid #ffc107;">
                    <h5 style="color: #856404; margin-bottom: 10px;">⚠️ Προσοχή - Σημαντικές Οδηγίες:</h5>
                    <ul style="color: #856404; margin-left: 20px; line-height: 1.6;">
                        <li><strong>Backup:</strong> Πάρτε αντίγραφο ασφαλείας πριν την αλλαγή έτους</li>
                        <li><strong>Timing:</strong> Κάντε την αλλαγή μετά την 31/12 και πριν την επανέναρξη των υπηρεσιών</li>
                        <li><strong>Μεταφορά:</strong> Μόνο κανονική και βραχεία άδεια μεταφέρονται - όλες οι άλλες μηδενίζονται</li>
                        <li><strong>Έλεγχος:</strong> Ελέγξτε τα υπόλοιπα όλων των αστυνομικών μετά την αλλαγή</li>
                        <li><strong>Αναστρεψιμότητα:</strong> Η διαδικασία δεν μπορεί να ανακληθεί εύκολα</li>
                    </ul>
                </div>
            </div>

            <?php if (isset($_SESSION['is_admin']) && $_SESSION['is_admin']): ?>
			<!-- ΝΕΟ: Delete Test Data Section - ΜΟΝΟ ADMIN -->
<div style="background: #ffe6e6; border-left: 5px solid #dc3545; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
    <h3>🗑️ Διαγραφή Δεδομένων Δοκιμής</h3>
    <p style="color: #721c24; margin-bottom: 15px;">
        <strong>⚠️ ΠΡΟΣΟΧΗ:</strong> Διαγραφή όλων των δεδομένων δοκιμής από τη βάση. Αυτή η ενέργεια είναι μη αναστρέψιμη!
    </p>
    
    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-top: 15px;">
        <div>
            <h4 style="color: #dc3545; margin-bottom: 10px;">🗑️ Διαγραφή Αιτήσεων</h4>
            <button onclick="deleteTestRequests()" class="btn btn-danger" style="width: 100%;">
                🗑️ Διαγραφή Όλων των Αιτήσεων
            </button>
            <small style="color: #721c24; display: block; margin-top: 5px;">
                Διαγράφει όλες τις αιτήσεις αδειών
            </small>
        </div>
        
        <div>
            <h4 style="color: #dc3545; margin-bottom: 10px;">🗑️ Διαγραφή Υπολοίπων</h4>
            <button onclick="deleteTestBalances()" class="btn btn-danger" style="width: 100%;">
                🗑️ Επαναφορά Υπολοίπων
            </button>
            <small style="color: #721c24; display: block; margin-top: 5px;">
                Επαναφέρει όλα τα υπόλοιπα στις αρχικές τιμές
            </small>
        </div>
    </div>
    
    <div id="delete-status" style="display: none; margin-top: 15px;"></div>
</div>
            <!-- ΝΕΟ: Database Backup & Restore Section -->
            <div class="backup-section">
                <h3>💾 Backup & Restore Βάσης Δεδομένων</h3>
                <p class="backup-info">
                    <strong>Σημαντικό:</strong> Δημιουργήστε τακτικά αντίγραφα ασφαλείας της βάσης δεδομένων, ειδικά πριν από σημαντικές αλλαγές όπως αλλαγή έτους ή μαζικές ενημερώσεις.
                </p>
                
                <div class="backup-buttons">
                    <div>
                        <h4 style="color: #007bff; margin-bottom: 10px;">📤 Δημιουργία Backup</h4>
                        <button onclick="createBackup()" class="btn" style="background: #28a745; width: 100%;">
                            💾 Δημιουργία Backup
                        </button>
                        <small style="color: #666; display: block; margin-top: 5px;">
                            Δημιουργεί πλήρες αντίγραφο όλων των πινάκων
                        </small>
                    </div>
                    
                    <div>
                        <h4 style="color: #dc3545; margin-bottom: 10px;">📥 Επαναφορά από Backup</h4>
                        <form id="restore-form" enctype="multipart/form-data">
                            <input type="file" id="backup-file" accept=".sql" style="width: 100%; padding: 8px; border: 2px solid #ddd; border-radius: 4px; margin-bottom: 10px;">
                            <button type="button" onclick="restoreBackup()" class="btn btn-danger" style="width: 100%;">
                                🔄 Επαναφορά Backup
                            </button>
                        </form>
                        <small style="color: #dc3545; display: block; margin-top: 5px;">
                            ⚠️ Προσοχή: Θα αντικαταστήσει όλα τα τρέχοντα δεδομένα!
                        </small>
                    </div>
                </div>
                
                <div id="backup-status" style="display: none;"></div>
                
                <div style="margin-top: 15px; padding: 10px; background: #f8f9fa; border-radius: 4px; border-left: 3px solid #17a2b8;">
                    <h5 style="color: #17a2b8; margin-bottom: 8px;">📋 Οδηγίες Backup:</h5>
                    <ul style="color: #495057; font-size: 0.9rem; margin-left: 15px; line-height: 1.4;">
                        <li><strong>Προγραμματισμένα Backup:</strong> Κάντε backup τουλάχιστον μία φορά την εβδομάδα</li>
                        <li><strong>Πριν από αλλαγές:</strong> Πάντα backup πριν από αλλαγή έτους ή μεγάλες ενημερώσεις</li>
                        <li><strong>Αποθήκευση:</strong> Φυλάξτε τα αρχεία backup σε ασφαλές μέρος (εκτός server)</li>
                        <li><strong>Δοκιμή:</strong> Περιοδικά δοκιμάζετε την επαναφορά σε test περιβάλλον</li>
                    </ul>
                </div>
            </div>
            
            <div class="settings-section">
                <h3>Διαχείριση Προσωπικού</h3>
                <p style="color: #666; margin-bottom: 15px;">Προσθήκη νέου αστυνομικού ή αφαίρεση κάποιου που έφυγε.</p>
                
                <!-- Προσθήκη Νέου Αστυνομικού -->
                <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                    <h4 style="color: #28a745; margin-bottom: 15px;">➕ Προσθήκη Νέου Αστυνομικού</h4>
                    <form method="POST" style="display: grid; grid-template-columns: 1fr 1fr 1fr 1fr auto; gap: 15px; align-items: end;">
                        <input type="hidden" name="action" value="add_user">
                        <div>
                            <label style="font-weight: 600; margin-bottom: 5px; display: block;">Μητρώο:</label>
                            <input type="text" name="new_mitroo" placeholder="π.χ. 12345" required style="padding: 10px; border: 2px solid #ddd; border-radius: 6px; width: 100%;">
                        </div>
                        <div>
                            <label style="font-weight: 600; margin-bottom: 5px; display: block;">Όνομα:</label>
                            <input type="text" name="new_onoma" placeholder="Όνομα" required style="padding: 10px; border: 2px solid #ddd; border-radius: 6px; width: 100%;">
                        </div>
                        <div>
                            <label style="font-weight: 600; margin-bottom: 5px; display: block;">Επώνυμο:</label>
                            <input type="text" name="new_eponimo" placeholder="Επώνυμο" required style="padding: 10px; border: 2px solid #ddd; border-radius: 6px; width: 100%;">
                        </div>
                        <div>
                            <label style="font-weight: 600; margin-bottom: 5px; display: block;">PIN:</label>
                            <input type="password" name="new_pin" placeholder="εως 6ψήφιο PIN" maxlength="6" required style="padding: 10px; border: 2px solid #ddd; border-radius: 6px; width: 100%;">
                        </div>
                        <div>
                            <button type="submit" class="btn btn-success" style="padding: 10px 15px;">➕ Προσθήκη</button>
                        </div>
                        <div style="grid-column: 1 / -1; margin-top: 10px;">
                            <label style="font-weight: 600; margin-bottom: 5px; display: block;">Δικαιώματα:</label>
                            <div style="display: flex; gap: 20px;">
                                <label><input type="checkbox" name="is_admin" value="1"> Διαχειριστής</label>
                                <label><input type="checkbox" name="is_manager" value="1"> Προϊστάμενος</label>
                                <label><input type="checkbox" name="is_gdye" value="1"> ΓΔΥΕ Γραφείο</label>
                            </div>
                            <small style="color: #666; font-size: 11px; margin-top: 5px;">
                                <strong>ΓΔΥΕ:</strong> Δικαιώματα καταχώρησης εγκεκριμένων αδειών • <strong>Προκαθορισμένα ΓΔΥΕ μητρώα:</strong> 270325, 268256, 255421
                            </small>
                        </div>
                    </form>
                </div>

                <!-- Αφαίρεση Αστυνομικού -->
                <div style="background: #fff3cd; padding: 20px; border-radius: 8px;">
                    <h4 style="color: #856404; margin-bottom: 15px;">🗑️ Αφαίρεση Αστυνομικού</h4>
                    <?php 
                    // Λήψη όλων των χρηστών για την dropdown
                    $all_users = $pdo->query("SELECT ΜΗΤΡΩΟ, ΟΝΟΜΑ, ΕΠΩΝΥΜΟ, ADMINISTRATOR, ΠΡΟΙΣΤΑΜΕΝΟΣ, GDYE FROM users ORDER BY ΕΠΩΝΥΜΟ, ΟΝΟΜΑ")->fetchAll();
                    ?>
                    <form method="POST" style="display: flex; gap: 15px; align-items: end;">
                        <input type="hidden" name="action" value="remove_user">
                        <div style="flex: 1;">
                            <label style="font-weight: 600; margin-bottom: 5px; display: block;">Επιλέξτε Αστυνομικό:</label>
                            <select name="remove_mitroo" required style="padding: 10px; border: 2px solid #ddd; border-radius: 6px; width: 100%;">
                                <option value="">-- Επιλέξτε Αστυνομικό --</option>
                                <?php foreach ($all_users as $user): ?>
                                    <?php 
                                    $roles = [];
                                    if ($user['ADMINISTRATOR'] == 1) $roles[] = 'ADMIN';
                                    if ($user['ΠΡΟΙΣΤΑΜΕΝΟΣ'] == 1) $roles[] = 'ΠΡΟΪΣΤ.';
                                    if (isset($user['GDYE']) && $user['GDYE'] == 1) $roles[] = 'ΓΔΥΕ';
                                    $roles_text = empty($roles) ? '' : ' [' . implode(', ', $roles) . ']';
                                    ?>
                                    <option value="<?php echo htmlspecialchars($user['ΜΗΤΡΩΟ']); ?>">
                                        <?php echo htmlspecialchars($user['ΜΗΤΡΩΟ'] . ' - ' . $user['ΟΝΟΜΑ'] . ' ' . $user['ΕΠΩΝΥΜΟ'] . $roles_text); ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                        <div>
                            <button type="submit" class="btn btn-danger" style="padding: 10px 15px;" onclick="return confirm('Είστε σίγουροι ότι θέλετε να διαγράψετε αυτόν τον αστυνομικό; Η ενέργεια δεν μπορεί να αναιρεθεί!');">🗑️ Διαγραφή</button>
                        </div>
                    </form>
                    <small style="color: #856404; font-style: italic;">⚠️ Προσοχή: Η διαγραφή είναι μόνιμη και θα αφαιρέσει όλα τα δεδομένα του αστυνομικού!</small>
                </div>
            </div>
            <?php endif; ?>
        </div>
        <?php endif; ?>

        <!-- ΔΙΟΡΘΩΜΕΝΗ Καρτέλα Διαχείρισης Υπολοίπων (Και για Προϊσταμένους) -->
        <?php if ((isset($_SESSION['is_admin']) && $_SESSION['is_admin']) || (isset($_SESSION['is_manager']) && $_SESSION['is_manager'])): ?>
        <div id="admin-tab" class="tab-content">
            <h2>Διαχείριση Υπολοίπων Άδειας - ΕΝΗΜΕΡΩΜΕΝΗ με ΠΡΟΗΓΟΥΜΕΝΟ ΕΤΟΣ</h2>
            <p style="color: #666; margin-bottom: 20px;">
                <strong>Πρόσβαση:</strong> <?php echo $_SESSION['is_admin'] ? 'Διαχειριστής' : 'Προϊστάμενος'; ?> | 
                <strong>Δικαιώματα:</strong> Επεξεργασία όλων των υπολοίπων | 
                <strong>Οδηγίες:</strong> Κάντε κλικ σε οποιονδήποτε αριθμό για να τον επεξεργαστείτε.
            </p>
            
            <?php if (count($all_balances) > 0): ?>
                <div class="export-buttons">
                    <button onclick="exportToExcel()" class="btn btn-export" style="background: #28a745;">
                        📊 Εξαγωγή σε Excel
                    </button>
                    <button onclick="exportToPDF()" class="btn btn-export" style="background: #dc3545;">
                        📄 Εξαγωγή σε PDF
                    </button>
                    <button onclick="printTable()" class="btn btn-export" style="background: #6c757d;">
                        🖨️ Εκτύπωση
                    </button>
                </div>
                
                <table class="requests-table" id="balances-table">
                    <thead>
                        <tr>
                            <th>Υπάλληλος</th>
                            <th>Κανονική</th>
                            <th>Βραχεία</th>
                            <th>Ολιγόωρη</th>
                            <th>Πορεία Κ.</th>
                            <th>Πορεία Β.</th>
                            <th>Σχολική Π.</th>
                            <th>Εξετάσεων</th>
                            <th>Νοσηλεία</th>
                            <th>Ασθ. Τέκνων</th>
                            <th>Προηγ. Έτος Κ.</th>
                            <th>Προηγ. Έτος Β.</th>
                            <th>Έτος</th>
                            <th>Τελ. Ενημέρωση</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php foreach ($all_balances as $balance): ?>
                        <tr>
                            <td>
                                <?php echo htmlspecialchars(($balance['ΟΝΟΜΑ'] ?? '') . ' ' . ($balance['ΕΠΩΝΥΜΟ'] ?? '')); ?><br>
<small style="color: #666;"><?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?></small>
<?php if (!empty($balance['ΒΑΘΜΟΣ'])): ?>
    <br><small style="color: #007bff; font-weight: bold;"><?php echo htmlspecialchars($balance['ΒΑΘΜΟΣ']); ?></small>
<?php endif; ?>
                                <?php 
                                $badges = [];
                                if ($balance['ADMINISTRATOR'] == 1) $badges[] = '<span style="background: #dc3545; color: white; padding: 2px 6px; border-radius: 10px; font-size: 10px;">ADMIN</span>';
                                if ($balance['ΠΡΟΙΣΤΑΜΕΝΟΣ'] == 1) $badges[] = '<span style="background: #ffc107; color: black; padding: 2px 6px; border-radius: 10px; font-size: 10px;">ΠΡΟΪΣΤ.</span>';
                                if (isset($balance['GDYE']) && $balance['GDYE'] == 1) $badges[] = '<span style="background: #007bff; color: white; padding: 2px 6px; border-radius: 10px; font-size: 10px;">ΓΔΥΕ</span>';
                                if (!empty($badges)) echo '<br><div style="margin-top: 4px;">' . implode(' ', $badges) . '</div>';
                                ?>
                            </td>
                            <td>
    <span class="editable" 
          data-mitroo="<?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?>" 
          data-field="ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ" 
          data-value="<?php echo $balance['ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ'] ?? 30; ?>"
          onclick="makeEditable(this)">
        <?php echo $balance['ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ'] ?? 30; ?>
    </span>
    <?php if (($balance['PREVIOUS_YEAR_KANONIKI'] ?? 0) > 0): ?>
        <small style="display: block; color: #28a745; font-weight: bold;">+<?php echo $balance['PREVIOUS_YEAR_KANONIKI']; ?> από 2024</small>
    <?php endif; ?>
    <?php if (isset($balance['χρησιμοποιημενες_κανονικης']) && $balance['χρησιμοποιημενες_κανονικης'] > 0): ?>
        <small style="display: block; color: #dc3545; font-weight: bold;">-<?php echo $balance['χρησιμοποιημενες_κανονικης']; ?> χρησιμοποιημένες</small>
        <small style="display: block; color: #007bff; font-weight: bold; margin-top: 2px; border-top: 1px dashed #ccc; padding-top: 2px;">
            = <?php echo ($balance['ΥΠΟΛΟΙΠΟ_ΚΑΝΟΝΙΚΗΣ'] ?? 30) + ($balance['PREVIOUS_YEAR_KANONIKI'] ?? 0) - $balance['χρησιμοποιημενες_κανονικης']; ?> διαθέσιμες
        </small>
    <?php endif; ?>
</td>
                            <td>
    <span class="editable" 
          data-mitroo="<?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?>" 
          data-field="ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ" 
          data-value="<?php echo $balance['ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ'] ?? 7; ?>"
          onclick="makeEditable(this)">
        <?php echo $balance['ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ'] ?? 7; ?>
    </span>
    <?php if (($balance['PREVIOUS_YEAR_VRAHEIA'] ?? 0) > 0): ?>
        <small style="display: block; color: #28a745; font-weight: bold;">+<?php echo $balance['PREVIOUS_YEAR_VRAHEIA']; ?> από 2024</small>
    <?php endif; ?>
    <?php if (isset($balance['χρησιμοποιημενες_βραχειας']) && $balance['χρησιμοποιημενες_βραχειας'] > 0): ?>
        <small style="display: block; color: #dc3545; font-weight: bold;">-<?php echo $balance['χρησιμοποιημενες_βραχειας']; ?> χρησιμοποιημένες</small>
        <small style="display: block; color: #007bff; font-weight: bold; margin-top: 2px; border-top: 1px dashed #ccc; padding-top: 2px;">
            = <?php echo ($balance['ΥΠΟΛΟΙΠΟ_ΒΡΑΧΕΙΑΣ'] ?? 7) + ($balance['PREVIOUS_YEAR_VRAHEIA'] ?? 0) - $balance['χρησιμοποιημενες_βραχειας']; ?> διαθέσιμες
        </small>
    <?php endif; ?>
</td>
                            <td>
                                <span class="editable" 
                                      data-mitroo="<?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?>" 
                                      data-field="ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ" 
                                      data-value="<?php echo $balance['ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ'] ?? 9; ?>"
                                      onclick="makeEditable(this)">
                                    <?php echo ($balance['ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ'] ?? 9) . 'ώ'; ?>
                                </span>
                            </td>
                            <td>
                                <span class="editable" 
                                      data-mitroo="<?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?>" 
                                      data-field="ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ" 
                                      data-value="<?php echo $balance['ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ'] ?? 4; ?>"
                                      onclick="makeEditable(this)">
                                    <?php echo $balance['ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΚΑΝΟΝΙΚΗΣ'] ?? 4; ?>
                                </span>
                            </td>
                            <td>
                                <span class="editable" 
                                      data-mitroo="<?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?>" 
                                      data-field="ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ" 
                                      data-value="<?php echo $balance['ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ'] ?? 4; ?>"
                                      onclick="makeEditable(this)">
                                    <?php echo $balance['ΥΠΟΛΟΙΠΟ_ΠΟΡΕΙΑΣ_ΒΡΑΧΕΙΑΣ'] ?? 4; ?>
                                </span>
                            </td>
                            <td>
                                <span class="editable" 
                                      data-mitroo="<?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?>" 
                                      data-field="ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ" 
                                      data-value="<?php echo $balance['ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ'] ?? 8; ?>"
                                      onclick="makeEditable(this)">
                                    <?php echo $balance['ΥΠΟΛΟΙΠΟ_ΣΧΟΛΙΚΗΣ_ΠΟΡΕΙΑΣ'] ?? 8; ?>
                                </span>
                            </td>
                            <td>
                                <span class="editable" 
                                      data-mitroo="<?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?>" 
                                      data-field="ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ" 
                                      data-value="<?php echo $balance['ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ'] ?? 14; ?>"
                                      onclick="makeEditable(this)">
                                    <?php echo $balance['ΥΠΟΛΟΙΠΟ_ΕΞΕΤΑΣΕΩΝ'] ?? 14; ?>
                                </span>
                            </td>
                            <td>
                                <span class="editable" 
                                      data-mitroo="<?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?>" 
                                      data-field="ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ" 
                                      data-value="<?php echo $balance['ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ'] ?? 22; ?>"
                                      onclick="makeEditable(this)">
                                    <?php echo $balance['ΥΠΟΛΟΙΠΟ_ΝΟΣΗΛΕΙΑΣ'] ?? 22; ?>
                                </span>
                            </td>
                            <td>
                                <span class="editable" 
                                      data-mitroo="<?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?>" 
                                      data-field="ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ" 
                                      data-value="<?php echo $balance['ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ'] ?? 10; ?>"
                                      onclick="makeEditable(this)">
                                    <?php echo $balance['ΥΠΟΛΟΙΠΟ_ΑΣΘΕΝΕΙΑΣ_ΤΕΚΝΩΝ'] ?? 10; ?>
                                </span>
                            </td>
                            <td style="background: #e7f3ff;">
                                <span class="editable" 
                                      data-mitroo="<?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?>" 
                                      data-field="PREVIOUS_YEAR_KANONIKI" 
                                      data-value="<?php echo $balance['PREVIOUS_YEAR_KANONIKI'] ?? 0; ?>"
                                      onclick="makeEditable(this)"
                                      style="color: #007bff; font-weight: bold;">
                                    <?php echo $balance['PREVIOUS_YEAR_KANONIKI'] ?? 0; ?>
                                </span>
                            </td>
                            <td style="background: #e7f3ff;">
                                <span class="editable" 
                                      data-mitroo="<?php echo htmlspecialchars($balance['ΜΗΤΡΩΟ']); ?>" 
                                      data-field="PREVIOUS_YEAR_VRAHEIA" 
                                      data-value="<?php echo $balance['PREVIOUS_YEAR_VRAHEIA'] ?? 0; ?>"
                                      onclick="makeEditable(this)"
                                      style="color: #007bff; font-weight: bold;">
                                    <?php echo $balance['PREVIOUS_YEAR_VRAHEIA'] ?? 0; ?>
                                </span>
                            </td>
                            <td><?php echo $balance['ΕΤΟΣ'] ?? date('Y'); ?></td>
                            <td><?php echo $balance['TELEUTAIA_ENIMEROSI'] ? date('d/m/Y', strtotime($balance['TELEUTAIA_ENIMEROSI'])) : 'Μη διαθέσιμο'; ?></td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
                
                <div style="margin-top: 20px; padding: 15px; background: #cce5ff; border-radius: 8px; border-left: 5px solid #007bff;">
                    <h4 style="color: #004085; margin-bottom: 10px;">📌 Οδηγίες Διαχείρισης:</h4>
                    <ul style="color: #004085; margin-left: 20px; line-height: 1.6;">
                        <li><strong>Επεξεργασία:</strong> Κάντε κλικ σε οποιονδήποτε αριθμό για να τον αλλάξετε</li>
                        <li><strong>Προηγούμενο Έτος:</strong> Οι στήλες με μπλε φόντο δείχνουν υπόλοιπα από το 2024</li>
                        <li><strong>Συνολικά Διαθέσιμα:</strong> Κανονική = Τρέχον έτος + Προηγούμενο έτος</li>
                        <li><strong>Αυτόματη Αποθήκευση:</strong> Οι αλλαγές αποθηκεύονται αμέσως</li>
                    </ul>
                </div>
            <?php else: ?>
                <p>Δεν βρέθηκαν δεδομένα υπολοίπων.</p>
            <?php endif; ?>
        </div>
        <?php endif; ?>
    </div>

    <script>
        // Tab functionality
        function openTab(evt, tabName) {
  try {
    if (evt && typeof evt.preventDefault === 'function') {
      evt.preventDefault();
    }
    // Κρύψε όλα τα tab contents
    var tabcontent = document.getElementsByClassName("tab-content");
    for (var i = 0; i < tabcontent.length; i++) {
      tabcontent[i].classList.remove("active");
    }
    // Απενεργοποίησε όλα τα tab buttons
    var tabbuttons = document.getElementsByClassName("tab-button");
    for (var j = 0; j < tabbuttons.length; j++) {
      tabbuttons[j].classList.remove("active");
    }
    // Βρες και ενεργοποίησε το ζητούμενο tab
    var target = document.getElementById(tabName);
    if (!target) {
      console.warn('Tab not found:', tabName);
      return false;  // ← Εδώ ήταν μόνο return
    }
    target.classList.add("active");
    // Ενεργοποίησε και το κουμπί που πατήθηκε (fallback αν λείπει currentTarget)
    if (evt && evt.currentTarget) {
      evt.currentTarget.classList.add("active");
    } else {
      for (var k = 0; k < tabbuttons.length; k++) {
        var oc = (tabbuttons[k].getAttribute('onclick') || '');
        if (oc.indexOf("'" + tabName + "'") !== -1) {
          tabbuttons[k].classList.add("active");
          break;
        }
      }
    }
    return false;  // ← Αυτό έλειπε
  } catch (e) {
    console.error('openTab error:', e);
    return false;  // ← Αυτό έλειπε
  }
}
        
        // ΕΝΗΜΕΡΩΜΕΝΗ Update expiry info based on leave type
        function updateExpiryInfo() {
            var typos = document.getElementById('typos').value;
            var infoDiv = document.getElementById('expiry-info');
            
            if (typos === 'ΚΑΝΟΝΙΚΗ') {
                infoDiv.innerHTML = '🏖️ 30 ημέρες/έτος + 4 ημέρες πορείας • ⏰ Λήγει: <?php echo date('d/m/Y', strtotime($kanoniki_expiry)); ?>';
                infoDiv.style.color = '#007bff';
            } else if (typos === 'ΒΡΑΧΕΙΑ') {
                infoDiv.innerHTML = '⚡ 7 ημέρες + 4 ημέρες πορείας • ⏰ Λήγει: <?php echo date('d/m/Y', strtotime($vraheia_expiry)); ?>';
                infoDiv.style.color = '#28a745';
            } else if (typos === 'ΟΛΙΓΟΩΡΗ') {
                infoDiv.innerHTML = '⏰ 3 ώρες/ημέρα, 9 ώρες/μήνα, 30 ώρες/έτος';
                infoDiv.style.color = '#fd7e14';
            } else if (typos === 'ΑΝΑΡΡΩΤΙΚΗ') {
                infoDiv.innerHTML = '🏥 Ρυθμίζεται από Υγειονομική Επιτροπή + 4 ημέρες πορείας';
                infoDiv.style.color = '#dc3545';
            } else if (typos === 'ΕΚΠΑΙΔΕΥΤΙΚΗ') {
                infoDiv.innerHTML = '📚 Για επαγγελματική εκπαίδευση • Διαδικασία έως 50 ημέρες';
                infoDiv.style.color = '#6f42c1';
            } else if (typos === 'ΕΞΕΤΑΣΕΩΝ') {
                infoDiv.innerHTML = '📝 Έως 14 εργάσιμες ημέρες/έτος • 2 ημέρες/ημέρα εξετάσεων';
                infoDiv.style.color = '#fd7e14';
            } else if (typos === 'ΓΑΜΟΣ') {
                infoDiv.innerHTML = '💒 5 ημέρες με αποδοχές • Πριν ή μετά τον γάμο';
                infoDiv.style.color = '#e83e8c';
            } else if (typos === 'ΠΕΝΘΟΣ') {
                infoDiv.innerHTML = '⚫ 5 ημέρες με αποδοχές • Συγγενείς έως β\' βαθμού';
                infoDiv.style.color = '#6c757d';
            } else if (typos === 'ΜΕΤΑΓΓΙΣΕΙΣ_ΝΟΣΗΛΕΙΑ') {
                infoDiv.innerHTML = '🏥 Έως 22 εργάσιμες ημέρες/έτος • Για εσάς ή οικογένεια';
                infoDiv.style.color = '#dc3545';
            } else if (typos === 'ΑΣΘΕΝΕΙΑ_ΤΕΚΝΩΝ') {
                infoDiv.innerHTML = '🤒 4 ημέρες γονέα • 7-10 τρίτεκνους/πολύτεκνους • 8 μονογονείς';
                infoDiv.style.color = '#ffc107';
             } else {
                 infoDiv.innerHTML = '';
             }
            // Εμφάνιση πεδίων ώρας για ΟΛΙΓΟΩΡΗ ή ΑΙΤΗΣΗ_ΩΡΑΡΙΟΥ
            var hourRow = document.getElementById('hour-range-row');
            var fromEl  = document.getElementById('ora_enarxis');
            var toEl    = document.getElementById('ora_lixis');
            if (hourRow && fromEl && toEl) {
                if (typos === 'ΟΛΙΓΟΩΡΗ' || typos === 'ΑΙΤΗΣΗ_ΩΡΑΡΙΟΥ') {
                    hourRow.style.display = '';
                    fromEl.required = true;  toEl.required = true;
                } else {
                   hourRow.style.display = 'none';
                   fromEl.required = false; toEl.required = false;
                   fromEl.value = '';        toEl.value = '';
               }
           }
        }

        // Modal functions για προϊσταμένους
        function openModificationModal(requestId, typos, date, days, hours, reason, location, managerApproval) {
            document.getElementById('mod_request_id').value = requestId;
            document.getElementById('mod_typos').value = typos;
            document.getElementById('mod_date').value = date;
            document.getElementById('mod_days').value = days;
            document.getElementById('mod_hours').value = hours;
            document.getElementById('mod_reason').value = reason;
            document.getElementById('mod_location').value = location;
            document.getElementById('mod_manager_approval').value = managerApproval || 'ΝΑΙ';
            
            // Εξαγωγή ημερών πορείας από την αιτιολογία
            var travelDaysMatch = reason.match(/Ημέρες πορείας: (\d+)/);
            var travelDays = travelDaysMatch ? travelDaysMatch[1] : 0;
            document.getElementById('mod_travel_days').value = travelDays;
            
            // Καθαρισμός αιτιολογίας από την εισαγωγή πορείας για καλύτερη επεξεργασία
            var cleanReason = reason.replace(/ \| Ημέρες πορείας: \d+/, '');
            document.getElementById('mod_reason').value = cleanReason;
            
            document.getElementById('modificationModal').style.display = 'block';
        }

        function openConsultationModal(requestId) {
            document.getElementById('cons_request_id').value = requestId;
            document.getElementById('consultationModal').style.display = 'block';
        }

        function openRejectionModal(requestId) {
            document.getElementById('rej_request_id').value = requestId;
            document.getElementById('rejectionModal').style.display = 'block';
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        // Close modal when clicking outside of it
        window.onclick = function(event) {
            var modals = document.getElementsByClassName('modal');
            for (let i = 0; i < modals.length; i++) {
                if (event.target == modals[i]) {
                    modals[i].style.display = 'none';
                }
            }
        }
        
        // Admin functions για επεξεργασία υπολοίπων (Admin ΚΑΙ Προϊστάμενοι)
        <?php if ((isset($_SESSION['is_admin']) && $_SESSION['is_admin']) || (isset($_SESSION['is_manager']) && $_SESSION['is_manager'])): ?>
        function makeEditable(element) {
            if (element.classList.contains('editing')) return;
            
            var originalValue = element.dataset.value;
            var mitroo = element.dataset.mitroo;
            var field = element.dataset.field;
            
            element.classList.add('editing');
            
            var input = document.createElement('input');
            input.type = 'number';
            input.value = originalValue;
            input.step = '0.5';
            input.style.width = '80px';
            input.style.padding = '4px';
            input.style.border = '1px solid #007bff';
            input.style.borderRadius = '4px';
            
            input.onblur = function() { saveEdit(element, mitroo, field, input.value, originalValue); };
            input.onkeypress = function(e) { 
                if (e.key === 'Enter') { 
                    saveEdit(element, mitroo, field, input.value, originalValue); 
                } else if (e.key === 'Escape') {
                    cancelEdit(element, originalValue, field);
                }
            };
            
            element.innerHTML = '';
            element.appendChild(input);
            input.focus();
            input.select();
        }
        
        function saveEdit(element, mitroo, field, newValue, originalValue) {
            if (newValue === originalValue) {
                cancelEdit(element, originalValue, field);
                return;
            }
            
            fetch('', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `ajax_action=update_balance&mitroo=${mitroo}&field=${field}&value=${newValue}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    element.dataset.value = newValue;
                    element.innerHTML = field === 'ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ' ? newValue + 'ώ' : newValue;
                    element.classList.remove('editing');
                    element.style.backgroundColor = '#d4edda';
                    setTimeout(() => element.style.backgroundColor = '', 2000);
                } else {
                    alert('Σφάλμα: ' + (data.message || 'Άγνωστο σφάλμα'));
                    cancelEdit(element, originalValue, field);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Σφάλμα δικτύου');
                cancelEdit(element, originalValue, field);
            });
        }
        
        function cancelEdit(element, originalValue, field) {
            element.innerHTML = field === 'ΥΠΟΛΟΙΠΟ_ΟΛΙΓΟΩΡΗΣ_ΜΗΝΑΣ' ? originalValue + 'ώ' : originalValue;
            element.classList.remove('editing');
        }
        
        // ΝΕΑ: Αλλαγή έτους με ΔΙΟΡΘΩΜΕΝΗ λογική
        function changeYear() {
            var newYear = document.getElementById('new_year').value;
            
            if (!confirm(`Είστε σίγουροι ότι θέλετε να αλλάξετε στο έτος ${newYear}? Αυτή η ενέργεια θα μεταφέρει τα υπόλοιπα κανονικής και βραχείας άδειας και θα δημιουργήσει νέα υπόλοιπα για όλους τους αστυνομικούς.`)) {
                return;
            }
            
            fetch('', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `ajax_action=change_year&new_year=${newYear}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Επιτυχία: ' + data.message);
                    location.reload(); // Ανανέωση σελίδας για να φορτώσουν τα νέα δεδομένα
                } else {
                    alert('Σφάλμα: ' + (data.message || 'Άγνωστο σφάλμα'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Σφάλμα δικτύου');
            });
        }
        <?php endif; ?>
        
        // ΝΕΑ: Database Backup Functions (Μόνο Admin)
        <?php if (isset($_SESSION['is_admin']) && $_SESSION['is_admin']): ?>
        function createBackup() {
            var statusDiv = document.getElementById('backup-status');
            statusDiv.style.display = 'block';
            statusDiv.innerHTML = '<div class="backup-status">🔄 Δημιουργία backup...</div>';
            
            fetch('', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: 'ajax_action=create_backup'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    statusDiv.innerHTML = '<div class="backup-status success">✅ Επιτυχής δημιουργία backup: ' + data.filename + '</div>';
                    // Προσφορά download του backup
                    if (data.filepath) {
                        var link = document.createElement('a');
                        link.href = 'data:text/plain;charset=utf-8,' + encodeURIComponent('Backup created successfully: ' + data.filename);
                        link.download = data.filename;
                        link.style.display = 'none';
                        document.body.appendChild(link);
                        link.click();
                        document.body.removeChild(link);
                    }
                } else {
                    statusDiv.innerHTML = '<div class="backup-status error">❌ Σφάλμα: ' + (data.message || 'Άγνωστο σφάλμα backup') + '</div>';
                }
                
                setTimeout(() => {
                    statusDiv.style.display = 'none';
                }, 5000);
            })
            .catch(error => {
                console.error('Error:', error);
                statusDiv.innerHTML = '<div class="backup-status error">❌ Σφάλμα δικτύου κατά τη δημιουργία backup</div>';
                setTimeout(() => {
                    statusDiv.style.display = 'none';
                }, 5000);
            });
        }
        
        function restoreBackup() {
            var fileInput = document.getElementById('backup-file');
            var file = fileInput.files[0];
            
            if (!file) {
                alert('Παρακαλώ επιλέξτε ένα αρχείο backup (.sql)');
                return;
            }
            
            if (!file.name.endsWith('.sql')) {
                alert('Παρακαλώ επιλέξτε ένα έγκυρο αρχείο SQL backup');
                return;
            }
            
            if (!confirm('ΠΡΟΣΟΧΗ: Αυτή η ενέργεια θα αντικαταστήσει ΟΛΟΚΛΗΡΗ τη βάση δεδομένων με το backup. Είστε σίγουροι ότι θέλετε να συνεχίσετε;')) {
                return;
            }
            
            var formData = new FormData();
            formData.append('ajax_action', 'restore_backup');
            formData.append('backup_file', file);
            
            var statusDiv = document.getElementById('backup-status');
            statusDiv.style.display = 'block';
            statusDiv.innerHTML = '<div class="backup-status">🔄 Επαναφορά backup...</div>';
            
            fetch('', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    statusDiv.innerHTML = '<div class="backup-status success">✅ Επιτυχής επαναφορά backup!</div>';
                    setTimeout(() => {
                        location.reload(); // Ανανέωση σελίδας μετά την επαναφορά
                    }, 2000);
                } else {
                    statusDiv.innerHTML = '<div class="backup-status error">❌ Σφάλμα επαναφοράς: ' + (data.message || 'Άγνωστο σφάλμα') + '</div>';
                }
                
                setTimeout(() => {
                    statusDiv.style.display = 'none';
                }, 10000);
            })
            .catch(error => {
                console.error('Error:', error);
                statusDiv.innerHTML = '<div class="backup-status error">❌ Σφάλμα δικτύου κατά την επαναφορά backup</div>';
                setTimeout(() => {
                    statusDiv.style.display = 'none';
                }, 5000);
            });
        }
        <?php endif; ?>
        
        // Export Functions για Διαχείριση Υπολοίπων (Admin και Προϊστάμενοι)
        <?php if ((isset($_SESSION['is_admin']) && $_SESSION['is_admin']) || (isset($_SESSION['is_manager']) && $_SESSION['is_manager'])): ?>
        function exportToExcel() {
            var table = document.getElementById('balances-table');
            if (!table) {
                alert('Δεν βρέθηκε ο πίνακας για εξαγωγή');
                return;
            }
            
            let csv = '\uFEFF'; // UTF-8 BOM for Greek characters
            
            // Headers
            var headers = ['Μητρώο', 'Όνομα', 'Επώνυμο', 'Δικαιώματα', 'Κανονική', 'Βραχεία', 'Ολιγόωρη', 'Πορεία Κ.', 'Πορεία Β.', 'Σχολική Π.', 'Εξετάσεων', 'Νοσηλεία', 'Ασθ. Τέκνων', 'Προηγ. Κανονική', 'Προηγ. Βραχεία', 'Έτος', 'Τελ. Ενημέρωση'];
            csv += headers.join(',') + '\n';
            
            // Data rows
            var rows = table.querySelectorAll('tbody tr');
            rows.forEach(row => {
                var cells = row.querySelectorAll('td');
                var rowData = [];
                
                // Extract data from each cell
                cells.forEach((cell, index) => {
                    if (index === 0) {
                        // First cell - extract name and mitroo
                        var lines = cell.textContent.trim().split('\n');
                        var nameAndMitroo = lines[0].trim();
                        var mitroo = lines[1] ? lines[1].trim() : '';
                        var badges = cell.querySelector('div') ? cell.querySelector('div').textContent : '';
                        
                        var nameParts = nameAndMitroo.split(' ');
                        var lastName = nameParts.pop() || '';
                        var firstName = nameParts.join(' ') || '';
                        
                        rowData.push(mitroo, firstName, lastName, badges);
                    } else if (index < 13) {
                        // Balance cells - get actual values
                        var span = cell.querySelector('span');
                        let value = span ? span.textContent.trim() : cell.textContent.trim();
                        value = value.replace('ώ', ''); // Remove ώ from hours
                        rowData.push(value);
                    } else {
                        // Other cells
                        rowData.push(cell.textContent.trim());
                    }
                });
                
                csv += rowData.map(field => `"${field.replace(/"/g, '""')}"`).join(',') + '\n';
            });
            
            // Create and download file
            var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            var link = document.createElement('a');
            var url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', 'Ypoloipa_Adeion_UPDATED_' + new Date().toISOString().slice(0,10) + '.csv');
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
        
        function exportToPDF() {
            // Create a print-friendly version
            var printWindow = window.open('', '_blank');
            var table = document.getElementById('balances-table');
            
            if (!table || !printWindow) {
                alert('Σφάλμα κατά την εξαγωγή PDF');
                return;
            }
            
            printWindow.document.write(`
                <html>
                <head>
                    <title>Υπόλοιπα Αδειών ΕΝΗΜΕΡΩΜΕΝΑ - ${new Date().toLocaleDateString('el-GR')}</title>
                    <style>
                        body { 
                            font-family: Arial, sans-serif; 
                            font-size: 9px;
                            margin: 15px;
                        }
                        .header {
                            text-align: center;
                            margin-bottom: 15px;
                            border-bottom: 2px solid #333;
                            padding-bottom: 8px;
                        }
                        .header h1 { 
                            color: #333; 
                            margin-bottom: 3px;
                            font-size: 16px;
                        }
                        .header p { 
                            color: #666; 
                            margin: 0;
                            font-size: 10px;
                        }
                        table { 
                            width: 100%; 
                            border-collapse: collapse; 
                            margin-top: 8px;
                        }
                        th, td { 
                            border: 1px solid #ddd; 
                            padding: 3px; 
                            text-align: left;
                            font-size: 8px;
                        }
                        th { 
                            background-color: #f8f9fa; 
                            font-weight: bold;
                            text-align: center;
                        }
                        .badge {
                            font-size: 6px;
                            padding: 1px 2px;
                            border-radius: 2px;
                            color: white;
                        }
                        .admin { background: #dc3545; }
                        .manager { background: #ffc107; color: black; }
                        .gdye { background: #007bff; }
                        .previous-year { background: #e7f3ff; color: #007bff; font-weight: bold; }
                        .footer {
                            margin-top: 15px;
                            text-align: center;
                            font-size: 7px;
                            color: #666;
                            border-top: 1px solid #ddd;
                            padding-top: 8px;
                        }
                    </style>
                </head>
                <body>
                    <div class="header">
                        <h1>🏛️ Σύστημα Διαχείρισης Αδειών v3.1 - ΕΝΗΜΕΡΩΜΕΝΟ</h1>
                        <p><strong>Υπόλοιπα Αδειών Προσωπικού με Προηγούμενο Έτος - Έτος ${new Date().getFullYear()}</strong></p>
                        <p>Ημερομηνία εξαγωγής: ${new Date().toLocaleDateString('el-GR')} στις ${new Date().toLocaleTimeString('el-GR')}</p>
                        <p>Εξήχθη από: <?php echo $_SESSION['user_name']; ?> (<?php echo $_SESSION['is_admin'] ? 'Διαχειριστής' : 'Προϊστάμενος'; ?>)</p>
                    </div>
                    
                    <table>
                        <thead>
                            <tr>
                                <th>Αστυνομικός</th>
                                <th>Μητρώο</th>
                                <th>Δικαιώματα</th>
                                <th>Κανονική</th>
                                <th>Βραχεία</th>
                                <th>Ολιγόωρη</th>
                                <th>Πορεία Κ.</th>
                                <th>Πορεία Β.</th>
                                <th>Σχολ. Π.</th>
                                <th>Εξετάσεων</th>
                                <th>Νοσηλεία</th>
                                <th>Ασθ. Τέκν.</th>
                                <th style="background: #e7f3ff;">Προηγ. Κ.</th>
                                <th style="background: #e7f3ff;">Προηγ. Β.</th>
                                <th>Τελ. Ενημ.</th>
                            </tr>
                        </thead>
                        <tbody>
            `);
            
            // Add table rows
            var rows = table.querySelectorAll('tbody tr');
            rows.forEach(row => {
                var cells = row.querySelectorAll('td');
                printWindow.document.write('<tr>');
                
                cells.forEach((cell, index) => {
                    if (index === 0) {
                        // First cell - name and mitroo
                        var lines = cell.textContent.trim().split('\n');
                        var nameAndMitroo = lines[0].trim();
                        var mitroo = lines[1] ? lines[1].trim() : '';
                        var badgeDiv = cell.querySelector('div');
                        let badges = '';
                        
                        if (badgeDiv) {
                            var badgeSpans = badgeDiv.querySelectorAll('span');
                            var badgeTexts = [];
                            badgeSpans.forEach(span => {
                                var text = span.textContent.trim();
                                let className = '';
                                if (text === 'ADMIN') className = 'admin';
                                else if (text === 'ΠΡΟΪΣΤ.') className = 'manager';
                                else if (text === 'ΓΔΥΕ') className = 'gdye';
                                badgeTexts.push(`<span class="badge ${className}">${text}</span>`);
                            });
                            badges = badgeTexts.join(' ');
                        }
                        
                        printWindow.document.write(`<td>${nameAndMitroo}</td>`);
                        printWindow.document.write(`<td>${mitroo}</td>`);
                        printWindow.document.write(`<td>${badges}</td>`);
                    } else if (index < 13) {
                        // Balance cells (including previous year columns)
                        var span = cell.querySelector('span');
                        var value = span ? span.textContent.trim() : cell.textContent.trim();
                        var isPreviousYear = index >= 10 && index <= 11;
                        var cellClass = isPreviousYear ? 'previous-year' : '';
                        printWindow.document.write(`<td class="${cellClass}" style="text-align: center; font-weight: bold;">${value}</td>`);
                    } else if (index === 13) {
                        // Last update
                        printWindow.document.write(`<td style="text-align: center;">${cell.textContent.trim()}</td>`);
                    }
                });
                
                printWindow.document.write('</tr>');
            });
            
            printWindow.document.write(`
                        </tbody>
                    </table>
                    
                    <div class="footer">
                        <p><strong>Σύστημα Διαχείρισης Αδειών v3.1 - ΕΝΗΜΕΡΩΜΕΝΟ</strong> | Συνολικός αριθμός αστυνομικών: ${rows.length}</p>
                        <p><strong>Σημείωση:</strong> Οι στήλες "Προηγ. Κ." και "Προηγ. Β." δείχνουν υπόλοιπα από το προηγούμενο έτος που μεταφέρθηκαν</p>
                        <p>Αυτό το έγγραφο δημιουργήθηκε αυτόματα από το σύστημα και περιέχει εμπιστευτικές πληροφορίες</p>
                    </div>
                </body>
                </html>
            `);
            
            printWindow.document.close();
            
            // Wait a bit then print
            setTimeout(() => {
                printWindow.print();
                printWindow.close();
            }, 1000);
        }
        
        function printTable() {
            // Simple print function
            window.print();
        }
		// ΓΔΥΕ Print function for approved leaves
		function printLeaveRequest(requestId, employeeName, leaveType, startDate, days, reason, location, hours, oraStart, oraEnd, mitroo, bathmos) {
    console.log('🖨️ Print function called with arguments.length:', arguments.length);
    console.log('🖨️ Parameters:', {requestId, employeeName, leaveType, startDate, days, reason, location, hours, oraStart, oraEnd, mitroo, bathmos});
    
    var printWindow = window.open('', '_blank');
    
    if (!printWindow) {
        alert('Αδυναμία ανοίγματος παραθύρου εκτύπωσης. Παρακαλώ επιτρέψτε τα pop-ups.');
        return;
    }
    
    // ΔΙΟΡΘΩΣΗ: Σωστή χρήση των parameters
    var finalRequestId = requestId || 'N/A';
    var finalEmployeeName = employeeName || 'Άγνωστος Αστυνομικός';
    var finalLeaveType = leaveType || 'ΑΓΝΩΣΤΗ';
    var finalStartDate = startDate || new Date().toISOString().split('T')[0];
    var finalDays = days || '0';
    var finalReason = reason || 'Δεν αναφέρθηκε';
    var finalLocation = location || 'Δεν αναφέρθηκε';
    var finalHours = hours || '0';
    var finalOraStart = oraStart || '';
    var finalOraEnd = oraEnd || '';
    var finalMitroo = mitroo || 'Δεν βρέθηκε';
    var finalBathmos = bathmos || 'Δεν βρέθηκε';
    
    // Format date
    var formattedDate = new Date(finalStartDate).toLocaleDateString('el-GR');
    var printDate = new Date().toLocaleDateString('el-GR');
    
    // Extract travel days from reason if exists
    var travelDays = 0;
    var travelMatch = finalReason.match(/Ημέρες πορείας: (\d+)/);
    if (travelMatch) {
        travelDays = parseInt(travelMatch[1]);
    }
    
    // Create form title based on leave type
    var formTitle = '';
    var durationText = '';
    
    switch(finalLeaveType) {
        case 'ΚΑΝΟΝΙΚΗ':
            formTitle = 'ΑΙΤΗΣΗ ΚΑΝΟΝΙΚΗΣ ΑΔΕΙΑΣ';
            durationText = finalDays + ' ' + (Number(finalDays) === 1 ? 'ημέρα' : 'ημέρες') + ' κανονικής άδειας';
            break;
        case 'ΒΡΑΧΕΙΑ':
            formTitle = 'ΑΙΤΗΣΗ ΒΡΑΧΕΙΑΣ ΑΔΕΙΑΣ';
            durationText = finalDays + ' ' + (Number(finalDays) === 1 ? 'ημέρα' : 'ημέρες') + ' βραχείας άδειας';
            break;
        case 'ΟΛΙΓΟΩΡΗ':
            formTitle = 'ΑΙΤΗΣΗ ΟΛΙΓΟΩΡΗΣ ΑΔΕΙΑΣ';
            durationText = finalHours + ' ' + (Number(finalHours) === 1 ? 'ώρα' : 'ώρες') + ' ολιγόωρης άδειας';
            break;
        default:
            formTitle = 'ΑΙΤΗΣΗ ' + finalLeaveType + ' ΑΔΕΙΑΣ';
            durationText = finalLeaveType === 'ΟΛΙΓΟΩΡΗ' ? 
                (finalHours + ' ' + (Number(finalHours) === 1 ? 'ώρα' : 'ώρες')) : 
                (finalDays + ' ' + (Number(finalDays) === 1 ? 'ημέρα' : 'ημέρες'));
    }
    
    // Split employee name
    var nameParts = finalEmployeeName.split(' ');
    var lastName = nameParts.pop() || '';
    var firstName = nameParts.join(' ') || '';
    
    printWindow.document.write(`
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>Αίτηση Άδειας - ${finalEmployeeName}</title>
            <style>
                @page { 
                    size: A4; 
                    margin: 2cm; 
                }
                body { 
                    font-family: 'Times New Roman', serif; 
                    font-size: 12pt; 
                    line-height: 1.6;
                    margin: 0;
                    padding: 20px;
                    color: #000;
                }
                .header {
                    text-align: center;
                    border-bottom: 2px solid #000;
                    padding-bottom: 15px;
                    margin-bottom: 25px;
                }
                .header h1 {
                    font-size: 16pt;
                    margin: 10px 0;
                    text-decoration: underline;
                    font-weight: bold;
                }
                .header .date {
                    text-align: right;
                    font-size: 11pt;
                    margin-top: 15px;
                }
                .form-section {
                    margin: 20px 0;
                    padding: 15px;
                    border: 1px solid #000;
                }
                .form-field {
                    margin: 10px 0;
                    padding: 5px 0;
                }
                .employee-info {
                    display: flex;
                    justify-content: space-between;
                    margin: 20px 0;
                    gap: 20px;
                }
                .employee-details {
                    flex: 1;
                }
                .field-group {
                    display: flex;
                    margin: 8px 0;
                    align-items: center;
                }
                .field-label {
                    font-weight: bold;
                    width: 120px;
                }
                .field-value {
                    border-bottom: 1px solid #000;
                    min-width: 150px;
                    padding-bottom: 2px;
                }
                .address-section {
                    flex: 0 0 200px;
                }
                .address-box {
                    border: 1px solid #000;
                    padding: 15px;
                    text-align: center;
                    background: #f9f9f9;
                }
                .approval-section {
                    margin: 30px 0;
                    padding: 20px;
                    border: 2px solid #000;
                    background: #f9f9f9;
                }
                .approval-row {
                    display: flex;
                    justify-content: space-between;
                    margin: 15px 0;
                    align-items: center;
                }
                .approval-label {
                    font-weight: bold;
                    flex: 1;
                }
                .approval-checkbox {
                    display: flex;
                    gap: 20px;
                }
                .approval-checkbox label {
                    font-weight: bold;
                }
                .signature-area {
                    margin-top: 50px;
                    text-align: center;
                }
                .signature-line {
                    margin-top: 60px;
                    border-top: 1px solid #000;
                    width: 200px;
                    margin-left: auto;
                    margin-right: auto;
                    padding-top: 5px;
                }
                .print-info {
                    position: fixed;
                    bottom: 10px;
                    right: 10px;
                    font-size: 8pt;
                    color: #666;
                }
                .official-header {
                    text-align: center;
                    font-size: 10pt;
                    margin-bottom: 20px;
                    border: 1px solid #000;
                    padding: 5px;
                    background: #f0f0f0;
                }
                @media print { 
                    body { margin: 0; padding: 15px; } 
                    .print-info { display: none; }
                }
            </style>
        </head>
        <body>
            <div class="official-header">
                ΥΠΟΔΕΙΓΜΑ Π-66/8β
            </div>
            
            <div class="header">
                <div style="font-size: 20pt;">🏛️</div>
                <h1>${formTitle}</h1>
                <div class="date">Άγιος Νικόλαος, ${printDate}</div>
            </div>
            
            <div class="employee-info">
                <div class="employee-details">
                    <div class="field-group">
                        <span class="field-label">Μητρώο:</span>
                        <span class="field-value">${finalMitroo}</span>
                    </div>
                    <div class="field-group">
                        <span class="field-label">Βαθμός:</span>
                        <span class="field-value">${finalBathmos}</span>
                    </div>
                    <div class="field-group">
                        <span class="field-label">ΕΠΩΝΥΜΟ:</span>
                        <span class="field-value">${lastName}</span>
                    </div>
                    <div class="field-group">
                        <span class="field-label">Όνομα:</span>
                        <span class="field-value">${firstName}</span>
                    </div>
                    <div class="field-group">
                        <span class="field-label">Πατρώνυμο:</span>
                        <span class="field-value">_________________</span>
                    </div>
                </div>
                
                <div class="address-section">
                    <div class="address-box">
                        <strong>ΠΡΟΣ</strong><br><br>
                        ΤΗΝ ΔΙΕΥΘΥΝΣΗ<br>
                        ΑΣΤΥΝΟΜΙΑΣ ΛΑΣΙΘΙΟΥ<br>
                        ΕΝΤΑΥΘΑ
                    </div>
                </div>
            </div>
            
            <div class="form-section">
                <div class="field-group">
                    <span class="field-label">Υπηρεσία που υπηρετώ:</span>
                    <span class="field-value">Επιτελείο Δ/νσης Αστυνομίας Λασιθίου</span>
                </div>
                <br>
                <div class="form-field">
                    <strong>Χορήγηση:</strong> ${durationText}
                    ${travelDays > 0 ? ` με ${travelDays} ημέρες πορείας` : ''}
                </div>
                ${finalLeaveType === 'ΟΛΙΓΟΩΡΗ' ? `
                    <div class="form-field">
                        <strong>Ώρες:</strong> από ${finalOraStart || '—'} έως ${finalOraEnd || '—'}
                    </div>
                    <div class="form-field">
                        <em>Στην αίτηση ολιγόωρης άδειας αναγράφεται απαραίτητα: από ....:.... έως ....:.... ώρα</em>
                    </div>
                ` : ''}
                <div class="form-field">
                    <strong>Έτος:</strong> ${new Date().getFullYear()}
                </div>
            </div>
            
            <div class="form-section">
                <div class="form-field">
                    <strong>1.</strong> Παρακαλώ να μου χορηγήσετε την αιτούμενη άδεια για προσωπικούς λόγους.
                </div>
            </div>
            
            <div class="form-section">
                <div class="form-field">
                    <strong>2.</strong> Έναρξη της άδειας επιθυμώ να κάνω την:
                </div>
                <div style="margin-left: 20px; margin-top: 10px; border-bottom: 1px solid #000; display: inline-block; min-width: 200px; padding-bottom: 2px;">
                    ${formattedDate}
                </div>
            </div>
            
            <div class="form-section">
                <div class="form-field">
                    <strong>3.</strong> Η άδεια μου θα διανυθεί:
                </div>
                <div style="margin-left: 20px; margin-top: 10px; border-bottom: 1px solid #000; display: inline-block; min-width: 300px; padding-bottom: 2px;">
                    ${finalLocation}
                </div>
            </div>
            
            ${finalReason ? `
            <div class="form-section">
                <div class="form-field">
                    <strong>Αιτιολογία:</strong> ${finalReason.replace(/\| Ημέρες πορείας: \d+/, '').trim()}
                </div>
            </div>
            ` : ''}
            
            <div class="approval-section">
                <h3 style="text-align: center; margin-bottom: 20px; text-decoration: underline;">ΕΓΚΡΙΣΕΙΣ</h3>
                
                <div class="approval-row">
                    <span class="approval-label">Ενέκρινε ο Προϊστάμενος Γραφείου:</span>
                    <div class="approval-checkbox">
                        <label>☑ ΝΑΙ</label>
                        <label>☐ ΟΧΙ</label>
                    </div>
                </div>
                
                <div class="approval-row">
                    <span class="approval-label">Ενέκρινε ο Προϊστάμενος Επιτελείου Δ.Α. Λασιθίου:</span>
                    <div class="approval-checkbox">
                        <label>☑ ΕΓΚΡΙΘΗΚΕ</label>
                        <label>☐ ΑΠΟΡΡΙΦΘΗΚΕ</label>
                    </div>
                </div>
                
                <div style="margin-top: 20px;">
                    <div class="field-group">
                        <span class="field-label">Υπογραφή Προϊσταμένου:</span>
                        <span class="field-value">_________________________</span>
                    </div>
                    <div class="field-group">
                        <span class="field-label">Ημερομηνία Έγκρισης:</span>
                        <span class="field-value">${printDate}</span>
                    </div>
                </div>
            </div>
            
            <div class="signature-area">
                <div style="margin-top: 40px;">
                    <strong>Ο/Η Ενδιαφερόμενος/η</strong>
                </div>
                <div class="signature-line">
                    ${finalEmployeeName}<br>
                    ${finalBathmos}
                </div>
            </div>
            
            <div class="print-info">
                Εκτυπώθηκε από ΓΔΥΕ - ${printDate} - Αίτηση #${finalRequestId}
            </div>
        </body>
        </html>
    `);
    
    printWindow.document.close();
    
    // Wait a bit then print
    setTimeout(() => {
        printWindow.print();
        printWindow.close();
    }, 1000);
}

console.log('✅ Σωστή printLeaveRequest function φορτώθηκε!');

// ===== Για debugging - προσθέστε αυτό επίσης =====
console.log('✅ printLeaveRequest function updated and ready!');
        <?php endif; ?>
        
        // Settings functions για προϊσταμένους/admin
<?php if ((isset($_SESSION['is_manager']) && $_SESSION['is_manager']) || (isset($_SESSION['is_admin']) && $_SESSION['is_admin'])): ?>
function updateSetting(settingName, value) {
    var statusDiv = document.getElementById('settings-status');
    statusDiv.innerHTML = 'Αποθήκευση...';
    statusDiv.style.color = '#ffc107';
    
    fetch('', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: `ajax_action=update_setting&setting_name=${settingName}&value=${value}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            statusDiv.innerHTML = '✓ Αποθηκεύτηκε επιτυχώς';
            statusDiv.style.color = '#28a745';
            setTimeout(() => statusDiv.innerHTML = '', 3000);
        } else {
            statusDiv.innerHTML = '✗ Σφάλμα: ' + (data.message || 'Άγνωστο σφάλμα');
            statusDiv.style.color = '#dc3545';
        }
    })
    .catch(error => {
        console.error('Error:', error);
        statusDiv.innerHTML = '✗ Σφάλμα δικτύου';
        statusDiv.style.color = '#dc3545';
    });
}
<?php endif; ?>

// Αυτόματος έλεγχος για ενημέρωση σελίδας κάθε 30 λεπτά (για νέες αιτήσεις)
setInterval(() => {
    // Μόνο αν είναι στην καρτέλα των εκκρεμών αιτήσεων
    if (document.getElementById('pending-tab').classList.contains('active')) {
        // Ανανέωση της σελίδας κάθε 30 λεπτά για να ελέγχει για νέες αιτήσεις
        console.log('Έλεγχος για νέες αιτήσεις...');
    }
}, 1800000); // 30 λεπτά = 1800000ms

// Αρχικοποίηση σελίδας
document.addEventListener('DOMContentLoaded', function() {
    // Αίτηση για notifications (μόνο για managers)
    <?php if (isset($_SESSION['is_manager']) && $_SESSION['is_manager']): ?>
    if ('Notification' in window && Notification.permission === 'default') {
        Notification.requestPermission().then(permission => {
            if (permission === 'granted') {
                console.log('✅ Notifications ενεργοποιημένα');
            } else {
                console.log('❌ Notifications απενεργοποιημένα');
            }
        });
    }
    <?php endif; ?>
    
    // Εμφάνιση μηνύματος καλωσορίσματος αν είναι πρώτη φορά
    if (!sessionStorage.getItem('welcome_shown')) {
        setTimeout(() => {
            console.log('Καλώς ήρθατε στο Σύστημα Διαχείρισης Αδειών v3.1 - ΕΝΗΜΕΡΩΜΕΝΟ');
            sessionStorage.setItem('welcome_shown', 'true');
        }, 1000);
    }
    
    // Αυτόματη εστίαση στο πρώτο πεδίο της φόρμας υποβολής
    var firstInput = document.querySelector('#submit-tab input, #submit-tab select');
    if (firstInput) {
        firstInput.focus();
    }
});
</script>

<script>
let lastRequestCount = 0;
let isFirstCheck = true;

function checkNewRequests() {
    fetch('check-new-requests.php')
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                console.log('Error checking requests:', data.error);
                return;
            }
            
            var currentCount = data.count; // Συνολικά εκκρεμή
            var recentCount = data.recent_count; // Πρόσφατα (τελευταία 10 λεπτά)
            
            console.log(`Σύνολο εκκρεμών: ${currentCount}, Πρόσφατα: ${recentCount}`);
            
            // ΠΑΝΤΑ ενημερώνουμε το κουμπί με τον αριθμό
            updateManagerButtonText(currentCount);
            
            // Αν δεν είναι ο πρώτος έλεγχος και έχουμε νέα αιτήματα
            if (!isFirstCheck && currentCount > lastRequestCount) {
                var newRequestsFound = currentCount - lastRequestCount;
                
                // Παίξε ήχο
                playNotificationSound();
                
                // Δείξε ειδοποίηση
                if (newRequestsFound === 1) {
                    console.log('🔔 Νέο αίτημα άδειας!');
                    showNotificationMessage('Νέο αίτημα άδειας!');
                } else {
                    console.log(`🔔 ${newRequestsFound} νέα αιτήματα άδειας!`);
                    showNotificationMessage(`${newRequestsFound} νέα αιτήματα άδειας!`);
                }
                
                // Κάνε το κουμπί να αναβοσβήνει
                blinkManagerButton();
            }
            
            lastRequestCount = currentCount;
            isFirstCheck = false;
            
        })
        .catch(error => {
            console.error('Error checking for new requests:', error);
        });
}

function playNotificationSound() {
    try {
        // Πρώτα δοκιμάζουμε να παίξουμε ήχο με AudioContext
        var audioContext = new (window.AudioContext || window.webkitAudioContext)();
        
        // Δημιουργία δύο beeps
        function createBeep(frequency, startTime, duration) {
            var oscillator = audioContext.createOscillator();
            var gainNode = audioContext.createGain();
            
            oscillator.connect(gainNode);
            gainNode.connect(audioContext.destination);
            
            oscillator.frequency.value = frequency;
            oscillator.type = 'sine';
            
            gainNode.gain.setValueAtTime(0, startTime);
            gainNode.gain.setValueAtTime(0.3, startTime + 0.01);
            gainNode.gain.exponentialRampToValueAtTime(0.01, startTime + duration);
            
            oscillator.start(startTime);
            oscillator.stop(startTime + duration);
        }
        
        // Παίζουμε 2 beeps
        createBeep(800, audioContext.currentTime, 0.2);
        createBeep(1000, audioContext.currentTime + 0.3, 0.2);
        
        console.log('🔊 Ήχος ειδοποίησης παίχτηκε');
        
    } catch (e) {
        console.log('Δεν μπόρεσε να παίξει ο ήχος AudioContext:', e);
        
        // Fallback - δοκιμάζουμε alert
        try {
            // Δημιουργία ενός απλού beep με τον παλιό τρόπο
            var audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmOPF');
            audio.play().catch(() => {
                console.log('Και το audio fallback απέτυχε');
            });
        } catch (audioError) {
            console.log('Fallback audio error:', audioError);
        }
    }
}

function showNotificationMessage(message) {
    // Δημιουργία προσωρινού notification div
    var notification = document.createElement('div');
    notification.innerHTML = `🔔 ${message}`;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: #28a745;
        color: white;
        padding: 15px 20px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        z-index: 10000;
        font-weight: bold;
        animation: slideIn 0.3s ease-out;
    `;
    
    // Προσθήκη animation CSS
    if (!document.getElementById('notification-styles')) {
        var style = document.createElement('style');
        style.id = 'notification-styles';
        style.textContent = `
            @keyframes slideIn {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }
            @keyframes slideOut {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(100%); opacity: 0; }
            }
        `;
        document.head.appendChild(style);
    }
    
    document.body.appendChild(notification);
    
    // Αφαίρεση μετά από 4 δευτερόλεπτα
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease-out';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 4000);
}

function blinkManagerButton() {
    var managerButton = document.querySelector('a[href="manager-popup.php"]');
    if (managerButton) {
        let blinkCount = 0;
        var blinkInterval = setInterval(() => {
            managerButton.style.backgroundColor = blinkCount % 2 === 0 ? '#dc3545' : '#28a745';
            blinkCount++;
            if (blinkCount >= 6) { // 3 πλήρη blinks
                clearInterval(blinkInterval);
                managerButton.style.backgroundColor = '#28a745'; // Επιστροφή στο κανονικό χρώμα
            }
        }, 300);
    }
}

function updateManagerButtonText(count) {
    var managerButton = document.querySelector('a[href="manager-popup.php"]');
    if (managerButton) {
        if (count > 0) {
            managerButton.innerHTML = `🔔 Εκκρεμείς Αιτήσεις (${count})`;
            managerButton.style.backgroundColor = '#dc3545'; // Κόκκινο όταν έχει εκκρεμείς
        } else {
            managerButton.innerHTML = '🔔 Εκκρεμείς Αιτήσεις (0)';
            managerButton.style.backgroundColor = '#28a745'; // Πράσινο όταν δεν έχει
        }
    }
}

// Μόνο για managers
<?php if (isset($_SESSION['is_manager']) && $_SESSION['is_manager']): ?>
// Ξεκινάει τον έλεγχο κάθε 20 δευτερόλεπτα
setInterval(checkNewRequests, 20000);

// Πρώτος έλεγχος μετά από 3 δευτερόλεπτα
setTimeout(checkNewRequests, 3000);

console.log('🔔 Σύστημα ειδοποιήσεων για managers ενεργοποιημένο!');
<?php endif; ?>
</script>

<?php if (isset($play_sound_after_submit) && $play_sound_after_submit && isset($_SESSION['is_manager']) && $_SESSION['is_manager']): ?>
<script>
// Παίξε ήχο μετά την υποβολή αίτησης από προϊστάμενο
setTimeout(function() {
    playNotificationSound();
    showNotificationMessage('Η αίτησή σας υποβλήθηκε και θα εμφανιστεί στις εκκρεμείς!');
}, 500);
</script>
<?php endif; ?>

<?php if (isset($_SESSION['is_admin']) && $_SESSION['is_admin']): ?>
<script>
// ΝΕΟ: Delete Test Data Functions (ΜΟΝΟ ADMIN)
function deleteTestRequests() {
    if (!confirm('⚠️ ΠΡΟΣΟΧΗ: Θα διαγραφούν ΟΛΕΣ οι αιτήσεις από τη βάση!\n\nΑυτή η ενέργεια δεν μπορεί να αναιρεθεί!\n\nΕίστε σίγουροι;')) {
        return;
    }
    
    var statusDiv = document.getElementById('delete-status');
    statusDiv.style.display = 'block';
    statusDiv.innerHTML = '<div style="background: #fff3cd; color: #856404; padding: 10px; border-radius: 5px;">🗑️ Διαγραφή αιτήσεων...</div>';
    
    fetch('', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: 'ajax_action=delete_test_requests'
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            statusDiv.innerHTML = '<div style="background: #d4edda; color: #155724; padding: 10px; border-radius: 5px; font-weight: bold;">✅ ' + data.message + '</div>';
            setTimeout(() => {
                location.reload();
            }, 2000);
        } else {
            statusDiv.innerHTML = '<div style="background: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px; font-weight: bold;">❌ Σφάλμα: ' + (data.message || 'Άγνωστο σφάλμα') + '</div>';
        }
    })
    .catch(error => {
        console.error('Error:', error);
        statusDiv.innerHTML = '<div style="background: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px; font-weight: bold;">❌ Σφάλμα δικτύου</div>';
    });
}

function deleteTestBalances() {
    if (!confirm('⚠️ ΠΡΟΣΟΧΗ: Θα επαναφερθούν όλα τα υπόλοιπα στις αρχικές τιμές!\n\nΑυτή η ενέργεια θα διαγράψει όλες τις προηγούμενες αλλαγές!\n\nΕίστε σίγουροι;')) {
        return;
    }
    
    var statusDiv = document.getElementById('delete-status');
    statusDiv.style.display = 'block';
    statusDiv.innerHTML = '<div style="background: #fff3cd; color: #856404; padding: 10px; border-radius: 5px;">🔄 Επαναφορά υπολοίπων...</div>';
    
    fetch('', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: 'ajax_action=reset_test_balances'
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            statusDiv.innerHTML = '<div style="background: #d4edda; color: #155724; padding: 10px; border-radius: 5px; font-weight: bold;">✅ ' + data.message + '</div>';
            setTimeout(() => {
                location.reload();
            }, 2000);
        } else {
            statusDiv.innerHTML = '<div style="background: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px; font-weight: bold;">❌ Σφάλμα: ' + (data.message || 'Άγνωστο σφάλμα') + '</div>';
        }
    })
    .catch(error => {
        console.error('Error:', error);
        statusDiv.innerHTML = '<div style="background: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px; font-weight: bold;">❌ Σφάλμα δικτύου</div>';
    });
}
</script>
<?php endif; ?>

<!-- Manager Check Button - Δεν χαλάει τις καρτέλες -->
<?php if (isset($_SESSION['is_manager']) && $_SESSION['is_manager']): ?>
<div style="position: fixed; bottom: 20px; right: 20px; z-index: 1000;">
    <a href="manager-popup.php" target="_blank" 
       style="background: #28a745; color: white; border: none; padding: 12px 16px; 
              border-radius: 25px; text-decoration: none; box-shadow: 0 3px 8px rgba(0,0,0,0.3);
              display: inline-block; font-weight: bold;">
        🔔 Εκκρεμείς Αιτήσεις
    </a>
</div>
<?php endif; ?>

<!-- ΝΕΑ: Καρτέλα Upload Excel -->
<?php if ((isset($_SESSION['is_admin']) && $_SESSION['is_admin']) || (isset($_SESSION['is_gdye']) && $_SESSION['is_gdye'])): ?>
<div id="excel-upload-tab" class="tab-content">
    <h2>📊 Ενημέρωση Υπολοίπων Αδειών από Excel</h2>
    <p style="color: #666; margin-bottom: 20px;">
        <strong>Δικαιώματα:</strong> <?php echo $_SESSION['is_admin'] ? 'Διαχειριστής' : 'ΓΔΥΕ'; ?> | 
        <strong>Λειτουργία:</strong> Αυτόματη ενημέρωση υπολοίπων από αρχείο Excel
    </p>
    
    <div style="background: #fff3cd; padding: 20px; border-radius: 8px; margin-bottom: 25px; border-left: 5px solid #ffc107;">
        <h4 style="color: #856404; margin-bottom: 15px;">📋 Οδηγίες Χρήσης</h4>
        <ul style="color: #856404; margin-left: 20px; line-height: 1.6;">
            <li><strong>Μορφή Excel:</strong> Το αρχείο πρέπει να έχει τη δομή: Μητρώο, Επώνυμο, Όνομα, Κανονική, Βραχεία</li>
            <li><strong>Στήλες:</strong> "X και Y μέρες πορείας" για κάθε τύπο άδειας</li>
            <li><strong>Λογική:</strong> Το σύστημα θα αφαιρέσει αυτόματα τις ημέρες που έχουν πάρει από τα αρχικά υπόλοιπα</li>
            <li><strong>Ασφάλεια:</strong> Παίρνει αυτόματα backup πριν την ενημέρωση</li>
        </ul>
    </div>
    
    <div style="background: white; padding: 25px; border-radius: 10px; border: 2px dashed #ddd;">
        <form id="excel-upload-form" enctype="multipart/form-data">
            <div class="form-group">
                <label for="excel-file" style="font-size: 18px; font-weight: bold; color: #333;">
                    📁 Επιλέξτε αρχείο Excel (.xls ή .xlsx)
                </label>
                <input type="file" id="excel-file" name="excel_file" accept=".xls,.xlsx" required
                       style="width: 100%; padding: 15px; border: 2px solid #007bff; border-radius: 8px; font-size: 16px;">
                <small style="color: #666; margin-top: 10px; display: block;">
                    Υποστηρίζονται αρχεία .xls και .xlsx μέχρι 10MB
                </small>
            </div>
            
            <div style="margin: 20px 0;">
                <label>
                    <input type="checkbox" id="backup-confirm" required style="margin-right: 10px;">
                    <strong>Συμφωνώ να γίνει αυτόματα backup της βάσης πριν την ενημέρωση</strong>
                </label>
            </div>
            
            <div style="margin: 20px 0;">
                <label>
                    <input type="checkbox" id="preview-confirm" required style="margin-right: 10px;">
                    <strong>Θέλω να δω προεπισκόπηση των αλλαγών πριν την οριστική ενημέρωση</strong>
                </label>
            </div>
            
            <div style="text-align: center;">
                <button type="button" onclick="uploadAndProcessExcel()" class="btn" 
                        style="font-size: 18px; padding: 15px 30px; background: linear-gradient(135deg, #28a745, #20c997);">
                    📊 Ανάλυση Excel και Προεπισκόπηση
                </button>
            </div>
        </form>
        
        <div id="upload-progress" style="display: none; margin-top: 20px;">
            <div style="background: #e9ecef; border-radius: 8px; padding: 10px;">
                <div style="background: #007bff; height: 20px; border-radius: 6px; width: 0%; transition: width 0.3s;" id="progress-bar"></div>
            </div>
            <p id="progress-text" style="text-align: center; margin-top: 10px;">Αναλύω αρχείο...</p>
        </div>
        
        <div id="excel-preview" style="display: none; margin-top: 25px;">
            <!-- Εδώ θα εμφανιστεί η προεπισκόπηση -->
        </div>
    </div>
</div>
<?php endif; ?>

<?php if (isset($_SESSION['is_gdye']) && $_SESSION['is_gdye']): ?>
<script>
	function printLeaveRequest(requestId, employeeName, leaveType, startDate, days, reason, location, hours, oraStart, oraEnd) {
		var printWindow = window.open('', '_blank');
    
    if (!printWindow) {
        alert('Αδυναμία ανοίγματος παραθύρου εκτύπωσης. Παρακαλώ επιτρέψτε τα pop-ups.');
        return;
    }
    
    var formattedDate = new Date(startDate).toLocaleDateString('el-GR');
    var printDate = new Date().toLocaleDateString('el-GR');
    
    printWindow.document.write(`
        <html>
        <head>
            <title>Άδεια - ${employeeName}</title>
            <style>
                @page { size: A4; margin: 2cm; }
                body { font-family: 'Times New Roman', serif; font-size: 12pt; line-height: 1.5; margin: 0; padding: 20px; }
                .header { text-align: center; border-bottom: 2px solid #000; padding-bottom: 15px; margin-bottom: 25px; }
                .header h1 { font-size: 16pt; margin: 10px 0; text-decoration: underline; }
                .form-section { margin: 20px 0; padding: 15px; border: 1px solid #000; }
                .form-field { margin: 8px 0; padding: 5px 0; }
                .signature-area { margin-top: 50px; text-align: center; }
                .signature-line { margin-top: 80px; border-top: 1px solid #000; width: 200px; margin: 0 auto; padding-top: 5px; }
                .approval-section { margin: 30px 0; padding: 20px; border: 2px solid #000; background: #f9f9f9; }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>ΑΙΤΗΣΗ ΑΔΕΙΑΣ - ${leaveType}</h1>
                <div style="text-align: right; font-size: 11pt;">Άγιος Νικόλαος, ${printDate}</div>
            </div>
            
            <div class="form-section">
                <div class="form-field"><strong>Μητρώο:</strong> ${mitroo}</div>
                 <div class="form-field"><strong>Βαθμός:</strong> ${bathmos}</div>
                 <div class="form-field"><strong>Επώνυμο:</strong> ${employeeName.split(' ').pop()}</div>
                 <div class="form-field"><strong>Όνομα:</strong> ${employeeName.split(' ').slice(0, -1).join(' ')}</div>
                 <div class="form-field"><strong>Υπηρεσία:</strong> Δ/νση Αστυνομίας Λασιθίου</div>
            </div>
            
            <div class="form-section">
  <div class="form-field"><strong>Τύπος Άδειας:</strong> ${leaveType}</div>
  <div class="form-field"><strong>Διάρκεια:</strong> ${
     (leaveType === 'ΟΛΙΓΟΩΡΗ' && Number(hours) > 0)
       ? (hours + ' ' + (Number(hours) === 1 ? 'ώρα' : 'ώρες'))
       : (days + ' ' + (Number(days) === 1 ? 'ημέρα' : 'ημέρες'))
   }</div>
  ${leaveType === 'ΟΛΙΓΟΩΡΗ' ? `
    <div class="form-field"><strong>Ώρες:</strong> από ${oraStart || '—'} έως ${oraEnd || '—'}</div>
  ` : ''}
  <div class="form-field"><strong>Έναρξη άδειας:</strong> ${formattedDate}</div>
  <div class="form-field"><strong>Τόπος διάνυσης:</strong> ${location || 'Δεν αναφέρθηκε'}</div>
  <div class="form-field"><strong>Αιτιολογία:</strong> ${reason}</div>
</div>
            
            <div class="approval-section">
                <h3 style="text-align: center; margin-bottom: 20px;">ΕΓΚΡΙΣΕΙΣ</h3>
                <div style="margin: 15px 0;"><strong>✅ ΕΓΚΡΙΘΗΚΕ από τον Προϊστάμενο</strong></div>
                <div style="margin-top: 20px;"><strong>Ημερομηνία Έγκρισης:</strong> ${printDate}</div>
            </div>
            
            <div class="signature-area">
                <div style="margin-top: 60px;"><strong>Ο/Η Ενδιαφερόμενος/η</strong></div>
                <div class="signature-line">${employeeName}</div>
            </div>
            
            <div style="position: fixed; bottom: 10px; right: 10px; font-size: 8pt; color: #666;">
                ΓΔΥΕ - ${printDate} - Αίτηση #${requestId}
            </div>
        </body>
        </html>
    `);
    
    printWindow.document.close();
    
    setTimeout(() => {
        printWindow.print();
        printWindow.close();
    }, 1000);
}
</script>
<?php endif; ?>
<script>
function openTab(evt, tabName) {
  try {
    if (evt) evt.preventDefault();
    
    // Κρύψε όλα τα tabs
    var tabs = document.getElementsByClassName("tab-content");
    for (var i = 0; i < tabs.length; i++) {
      tabs[i].classList.remove("active");
    }
    
    // Απενεργοποίησε όλα τα buttons
    var buttons = document.getElementsByClassName("tab-button");
    for (var j = 0; j < buttons.length; j++) {
      buttons[j].classList.remove("active");
    }
    
    // Ενεργοποίησε το ζητούμενο tab
    var target = document.getElementById(tabName);
    if (target) target.classList.add("active");
    
    // Ενεργοποίησε το button
    if (evt && evt.currentTarget) {
      evt.currentTarget.classList.add("active");
    }
    
    return false;
  } catch (e) {
    console.error('openTab error:', e);
    return false;
  }
}
</script>
<script>
console.log('🔍 Searching for printLeaveRequest function...');
if (typeof printLeaveRequest === 'function') {
    console.log('✅ printLeaveRequest function EXISTS');
} else {
    console.log('❌ printLeaveRequest function NOT FOUND');
}

// Βρες όλα τα κουμπιά που καλούν την function
var buttons = document.querySelectorAll('button[onclick*="printLeaveRequest"]');
console.log('🔍 Found', buttons.length, 'print buttons');
buttons.forEach((btn, index) => {
    console.log('Button', index + 1, ':', btn.onclick.toString());
});
</script>
</body>
</html>
